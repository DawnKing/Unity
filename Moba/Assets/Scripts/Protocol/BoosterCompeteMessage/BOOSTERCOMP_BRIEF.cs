// Generated by proto_to_csharp.py. DO NOT EDIT!
using System.IO;

namespace GameProtocol.BoosterCompeteMessage
{
    // ----------------------------------------------------------------------
    ///	@file			protocol/BoosterCompeteMessage.h
    ///	@brief
    ///	@author			xuyao
    ///	@copyright		Sixcube Information Technology Co,. Ltd. (2012)
    ///	@date			2013-11-13 11:04:55
    // ----------------------------------------------------------------------
    // 助手竞技赛玩家信息
    public sealed class BOOSTERCOMP_BRIEF
    {
        public uint Oid;/// 角色AccountId
        public string szUuid;/// 角色Uuid
        public string szName;/// 角色名称
        public uint Avatar;/// 外观ID
        public uint BtItemId;/// 助手物品ID
        public uint BtLevel;/// 助手等级
        public uint BtUpLevel;/// 助手强化次数
        public uint BtRank;/// 助手星级
        public uint BtUpCost;/// 助手强化消耗
        public uint BtRankCost;/// 助手升星消耗
        public uint TankLevel;/// 坦克等级
        public uint TankId;/// 坦克ID
        public uint TankExternal;///坦克外观，为0时，取对应等级的外观
        public uint SequenceWin;/// 连胜数
        public uint Win;/// 胜场数
        public uint Lose;/// 负场数
        public uint Rank;/// 排名
        public uint CharAtk;/// 角色总战力
        public void ReadFromStream(BinaryReader reader)
        {
            Oid = reader.ReadUInt32();
            szUuid = reader.ReadString();
            szName = reader.ReadString();
            Avatar = reader.ReadUInt32();
            BtItemId = reader.ReadUInt32();
            BtLevel = reader.ReadUInt32();
            BtUpLevel = reader.ReadUInt32();
            BtRank = reader.ReadUInt32();
            BtUpCost = reader.ReadUInt32();
            BtRankCost = reader.ReadUInt32();
            TankLevel = reader.ReadUInt32();
            TankId = reader.ReadUInt32();
            TankExternal = reader.ReadUInt32();
            SequenceWin = reader.ReadUInt32();
            Win = reader.ReadUInt32();
            Lose = reader.ReadUInt32();
            Rank = reader.ReadUInt32();
            CharAtk = reader.ReadUInt32();
        }
        
        public void WriteToStream(BinaryWriter writer)
        {
            writer.Write(Oid);
            writer.Write(szUuid);
            writer.Write(szName);
            writer.Write(Avatar);
            writer.Write(BtItemId);
            writer.Write(BtLevel);
            writer.Write(BtUpLevel);
            writer.Write(BtRank);
            writer.Write(BtUpCost);
            writer.Write(BtRankCost);
            writer.Write(TankLevel);
            writer.Write(TankId);
            writer.Write(TankExternal);
            writer.Write(SequenceWin);
            writer.Write(Win);
            writer.Write(Lose);
            writer.Write(Rank);
            writer.Write(CharAtk);
        }
    }
}
