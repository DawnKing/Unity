// Generated by proto_to_csharp.py. DO NOT EDIT!
using System.IO;

namespace GameProtocol.BuffMessage
{
    // MSGTYPE_DECLARE(MSG_NOTIFY_BUFF_UPDATE_TIME),
    // 通知对象BUFF时间更新
    public sealed class UpdateBuffTime : IProtocol
    {
        public const short MsgType = MessageType.MSG_NOTIFY_BUFF_UPDATE_TIME;
        public short GetMsgType { get { return MsgType; } }
        public ulong BuffInstId;//Buff实例ID
        public uint ExistTime;// BUFF存在时间（毫秒）
        public byte StackCount;// 堆叠次数
        
        public static void Send(ulong buffInstId, uint existTime, byte stackCount, object className)
        {
            var packet = new UpdateBuffTime
            {
                BuffInstId = buffInstId,
                ExistTime = existTime,
                StackCount = stackCount
            };
            NetMessage.Send(packet.BuildPacket(), className);
        }
        
        public byte[] BuildPacket()
        {
            var buffer = ProtocolBuffer.Writer;
            buffer.Write(MsgType);
            buffer.Write(ProtocolBuffer.Zero);
            WriteToStream(buffer);
            return ProtocolBuffer.CacheStream.ToArray();
        }
        
        public void ReadFromStream(BinaryReader reader)
        {
            BuffInstId = reader.ReadUInt64();
            ExistTime = reader.ReadUInt32();
            StackCount = reader.ReadByte();
        }
        
        public void WriteToStream(BinaryWriter writer)
        {
            writer.Write(BuffInstId);
            writer.Write(ExistTime);
            writer.Write(StackCount);
        }
    }
}
