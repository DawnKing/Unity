// Generated by proto_to_csharp.py. DO NOT EDIT!
using System.IO;

namespace GameProtocol.NpcMessage
{
    // ----------------------------------------------------------------------
    ///    @file            protocol/NpcMessage.h
    ///    @brief
    ///    @author          yuhaixiao
    ///    @copyright       Sixcube Information Technology Co,. Ltd. (2012)
    ///    @date
    // ----------------------------------------------------------------------
    /// @addtogroup dt_ObjectManage
    /// @{
    // MSGTYPE_DECLARE(MSG_NPC_SERVER_REGISTER),    // NPC服务器启动，告知游戏服务器
    public sealed class NpcServerRegister : IProtocol
    {
        public const short MsgType = MessageType.MSG_NPC_SERVER_REGISTER;
        public short GetMsgType { get { return MsgType; } }
        public string npcSvrName;// 服务器名
        public uint SvrId;
        
        public static void Send(string npcSvrName, uint svrId, object className)
        {
            var packet = new NpcServerRegister
            {
                npcSvrName = npcSvrName,
                SvrId = svrId
            };
            NetMessage.Send(packet.BuildPacket(), className);
        }
        
        public byte[] BuildPacket()
        {
            var buffer = ProtocolBuffer.Writer;
            buffer.Write(MsgType);
            buffer.Write(ProtocolBuffer.Zero);
            WriteToStream(buffer);
            return ProtocolBuffer.CacheStream.ToArray();
        }
        
        public void ReadFromStream(BinaryReader reader)
        {
            npcSvrName = reader.ReadString();
            SvrId = reader.ReadUInt32();
        }
        
        public void WriteToStream(BinaryWriter writer)
        {
            writer.Write(npcSvrName);
            writer.Write(SvrId);
        }
    }
}
