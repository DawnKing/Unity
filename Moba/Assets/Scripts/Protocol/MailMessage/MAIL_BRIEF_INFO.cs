// Generated by proto_to_csharp.py. DO NOT EDIT!
using System.IO;

namespace GameProtocol.MailMessage
{
    // ----------------------------------------------------------------------
    // 玩家发送的邮件
    // 系统发送的邮件
    // 退回的邮件（玩家退回或者超时退回）
    // 系统上线提示
    // 玩家发送的普通邮件
    // 退回的邮件
    // 玩家发送的需要付款的邮件
    // 支付款项的回复邮件
    // 系统发送的邮件
    // 翻牌系统给与物品
    // 玩家赠送的商城物品
    // 商城购买物品，包裹满后邮寄
    // 过期，自动卸下
    // 玩家阶段性奖励发送的物品
    // 轮盘赌获得的物品
    // 联赛获得的奖励
    // 月票物品使用获得邮件信息（玩家不能删除）
    // 未读
    // 已读
    // 未付款
    ///	邮件操作
    // 无
    // 打开邮箱
    // 关闭邮箱
    // 发送邮件
    // 读取邮件
    // 删除邮件
    // 退回邮件
    // 付款取信
    // 提取物品
    // 提取点券
    // 提取坦克
    /// 附件类型（可以通过|设置多种）
    // 物品
    // 金钱
    // 坦克
    /// 付款取信时间(小时为单位)
    ///	邮件列表信息
    public sealed class MAIL_BRIEF_INFO
    {
        public string strUuid;// 邮件的uuid
        public string strSendUuid;// 邮件的发送者uuid
        public string strSender;// 邮件的发送者
        public string strTitle;// 邮件的标题
        public uint ArriveTime;// 邮件的过期时间点
        public uint MailType;// 邮件的类型
        public uint MailState;// 邮件的状态
        public uint SendMode;// 邮件的发送方式
        public uint AffixSign;// 邮件的附件标识
        public uint CreateTime;// 邮件的创建时间点
        public void ReadFromStream(BinaryReader reader)
        {
            strUuid = reader.ReadString();
            strSendUuid = reader.ReadString();
            strSender = reader.ReadString();
            strTitle = reader.ReadString();
            ArriveTime = reader.ReadUInt32();
            MailType = reader.ReadUInt32();
            MailState = reader.ReadUInt32();
            SendMode = reader.ReadUInt32();
            AffixSign = reader.ReadUInt32();
            CreateTime = reader.ReadUInt32();
        }
        
        public void WriteToStream(BinaryWriter writer)
        {
            writer.Write(strUuid);
            writer.Write(strSendUuid);
            writer.Write(strSender);
            writer.Write(strTitle);
            writer.Write(ArriveTime);
            writer.Write(MailType);
            writer.Write(MailState);
            writer.Write(SendMode);
            writer.Write(AffixSign);
            writer.Write(CreateTime);
        }
    }
}
