// Generated by proto_to_csharp.py. DO NOT EDIT!
using System.IO;

namespace GameProtocol.MailMessage
{
    // 通知全局服务器新邮件消息(global -> track)
    public sealed class NotifyGlobalNewMailMessage : IProtocol
    {
        public const short MsgType = MessageType.MSG_NOTIFY_GLOBAL_NEW_MAIL;
        public short GetMsgType { get { return MsgType; } }
        public string charUuid;// 玩家UUID
        public string mailTitle;// 邮件标题
        public string mailText;// 邮件内容
        public string mailItemInst;// 邮件物品
        public uint createTime;// 邮件创建时间
        
        public static void Send(string charUuid, string mailTitle, string mailText, string mailItemInst, uint createTime, object className)
        {
            var packet = new NotifyGlobalNewMailMessage
            {
                charUuid = charUuid,
                mailTitle = mailTitle,
                mailText = mailText,
                mailItemInst = mailItemInst,
                createTime = createTime
            };
            NetMessage.Send(packet.BuildPacket(), className);
        }
        
        public byte[] BuildPacket()
        {
            var buffer = ProtocolBuffer.Writer;
            buffer.Write(MsgType);
            buffer.Write(ProtocolBuffer.Zero);
            WriteToStream(buffer);
            return ProtocolBuffer.CacheStream.ToArray();
        }
        
        public void ReadFromStream(BinaryReader reader)
        {
            charUuid = reader.ReadString();
            mailTitle = reader.ReadString();
            mailText = reader.ReadString();
            mailItemInst = reader.ReadString();
            createTime = reader.ReadUInt32();
        }
        
        public void WriteToStream(BinaryWriter writer)
        {
            writer.Write(charUuid);
            writer.Write(mailTitle);
            writer.Write(mailText);
            writer.Write(mailItemInst);
            writer.Write(createTime);
        }
    }
}
