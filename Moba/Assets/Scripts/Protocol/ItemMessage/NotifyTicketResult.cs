// Generated by proto_to_csharp.py. DO NOT EDIT!
using System.IO;

namespace GameProtocol.ItemMessage
{
    /// 通知使用月票的返回结果
    public sealed class NotifyTicketResult : IProtocol
    {
        public const short MsgType = MessageType.MSG_NOTIFY_TICKET_ITEM_RET;
        public short GetMsgType { get { return MsgType; } }
        public byte Ok;// 1 代表成功
        public uint itemId;// 月票码
        public string szCode;// 月票码
        public string szPass;// 激活密码
        
        public static void Send(byte ok, uint itemId, string szCode, string szPass, object className)
        {
            var packet = new NotifyTicketResult
            {
                Ok = ok,
                itemId = itemId,
                szCode = szCode,
                szPass = szPass
            };
            NetMessage.Send(packet.BuildPacket(), className);
        }
        
        public byte[] BuildPacket()
        {
            var buffer = ProtocolBuffer.Writer;
            buffer.Write(MsgType);
            buffer.Write(ProtocolBuffer.Zero);
            WriteToStream(buffer);
            return ProtocolBuffer.CacheStream.ToArray();
        }
        
        public void ReadFromStream(BinaryReader reader)
        {
            Ok = reader.ReadByte();
            itemId = reader.ReadUInt32();
            szCode = reader.ReadString();
            szPass = reader.ReadString();
        }
        
        public void WriteToStream(BinaryWriter writer)
        {
            writer.Write(Ok);
            writer.Write(itemId);
            writer.Write(szCode);
            writer.Write(szPass);
        }
    }
}
