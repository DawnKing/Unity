// Generated by proto_to_csharp.py. DO NOT EDIT!
using System.IO;

namespace GameProtocol.ItemMessage
{
    /// 请求设置当前使用晶片方案
    public sealed class RequestSetCurCrystalSchemeIdMessage : IProtocol
    {
        public const short MsgType = MessageType.MSG_REQUEST_SET_CUR_CRYSTAL_SCHEME_ID;
        public short GetMsgType { get { return MsgType; } }
        public uint schemeId;/// 晶片方案ID
        public string tankUuid;/// 对应的坦克UUID
        
        public static void Send(uint schemeId, string tankUuid, object className)
        {
            var packet = new RequestSetCurCrystalSchemeIdMessage
            {
                schemeId = schemeId,
                tankUuid = tankUuid
            };
            NetMessage.Send(packet.BuildPacket(), className);
        }
        
        public byte[] BuildPacket()
        {
            var buffer = ProtocolBuffer.Writer;
            buffer.Write(MsgType);
            buffer.Write(ProtocolBuffer.Zero);
            WriteToStream(buffer);
            return ProtocolBuffer.CacheStream.ToArray();
        }
        
        public void ReadFromStream(BinaryReader reader)
        {
            schemeId = reader.ReadUInt32();
            tankUuid = reader.ReadString();
        }
        
        public void WriteToStream(BinaryWriter writer)
        {
            writer.Write(schemeId);
            writer.Write(tankUuid);
        }
    }
}
