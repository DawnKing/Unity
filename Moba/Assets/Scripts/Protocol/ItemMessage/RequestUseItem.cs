// Generated by proto_to_csharp.py. DO NOT EDIT!
using System.IO;

namespace GameProtocol.ItemMessage
{
    /// 请求使用物品
    public sealed class RequestUseItem : IProtocol
    {
        public const short MsgType = MessageType.MSG_REQUEST_USE_ITEM;
        public short GetMsgType { get { return MsgType; } }
        public uint contType;// 物品所在的容器，enum CONTAINER_TYPE
        public short SlotNo;// 物品的格子
        public string targetUuid;// 使用目标uuid
        public int Count;// 使用的数量，限定类型
        public byte Auto;// 是否是客户端自动使用
        
        public static void Send(uint contType, short slotNo, string targetUuid, int count, byte auto, object className)
        {
            var packet = new RequestUseItem
            {
                contType = contType,
                SlotNo = slotNo,
                targetUuid = targetUuid,
                Count = count,
                Auto = auto
            };
            NetMessage.Send(packet.BuildPacket(), className);
        }
        
        public byte[] BuildPacket()
        {
            var buffer = ProtocolBuffer.Writer;
            buffer.Write(MsgType);
            buffer.Write(ProtocolBuffer.Zero);
            WriteToStream(buffer);
            return ProtocolBuffer.CacheStream.ToArray();
        }
        
        public void ReadFromStream(BinaryReader reader)
        {
            contType = reader.ReadUInt32();
            SlotNo = reader.ReadInt16();
            targetUuid = reader.ReadString();
            Count = reader.ReadInt32();
            Auto = reader.ReadByte();
        }
        
        public void WriteToStream(BinaryWriter writer)
        {
            writer.Write(contType);
            writer.Write(SlotNo);
            writer.Write(targetUuid);
            writer.Write(Count);
            writer.Write(Auto);
        }
    }
}
