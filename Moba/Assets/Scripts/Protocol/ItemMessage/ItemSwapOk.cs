// Generated by proto_to_csharp.py. DO NOT EDIT!
using System.IO;

namespace GameProtocol.ItemMessage
{
    // MSGTYPE_DECLARE(MSG_ITEM_SWAP_OK),                          // 物品移动成功
    public sealed class ItemSwapOk : IProtocol
    {
        public const short MsgType = MessageType.MSG_ITEM_SWAP_OK;
        public short GetMsgType { get { return MsgType; } }
        public uint contType;// enum CONTAINER_TYPE
        public string itemA;// 物品A
        public short slotA;// 物品A，位置
        public string itemB;// 物品B
        public short slotB;// 物品B, 位置
        
        public static void Send(uint contType, string itemA, short slotA, string itemB, short slotB, object className)
        {
            var packet = new ItemSwapOk
            {
                contType = contType,
                itemA = itemA,
                slotA = slotA,
                itemB = itemB,
                slotB = slotB
            };
            NetMessage.Send(packet.BuildPacket(), className);
        }
        
        public byte[] BuildPacket()
        {
            var buffer = ProtocolBuffer.Writer;
            buffer.Write(MsgType);
            buffer.Write(ProtocolBuffer.Zero);
            WriteToStream(buffer);
            return ProtocolBuffer.CacheStream.ToArray();
        }
        
        public void ReadFromStream(BinaryReader reader)
        {
            contType = reader.ReadUInt32();
            itemA = reader.ReadString();
            slotA = reader.ReadInt16();
            itemB = reader.ReadString();
            slotB = reader.ReadInt16();
        }
        
        public void WriteToStream(BinaryWriter writer)
        {
            writer.Write(contType);
            writer.Write(itemA);
            writer.Write(slotA);
            writer.Write(itemB);
            writer.Write(slotB);
        }
    }
}
