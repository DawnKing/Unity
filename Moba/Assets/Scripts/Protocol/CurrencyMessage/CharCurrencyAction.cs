// Generated by proto_to_csharp.py. DO NOT EDIT!
using System.IO;

using GameProtocol.BulkDataType;
namespace GameProtocol.CurrencyMessage
{
    // ----------------------------------------------------------------------
    /// @file			protocol/CurrencyMessage.h
    /// @brief
    /// @author         Bob Lee (bob@onwind.cn)
    /// @copyright		Sixcube Information Technology Co,. Ltd. (2012)
    /// @date			2007-08-22 13:42:03
    // -----------------------------------------------------------------------
    /// @addtogroup dt_ObjectManage
    /// @{
    //Server->Client 通知角色货币操作以及余额情况
    public sealed class CharCurrencyAction : IProtocol
    {
        public const short MsgType = MessageType.MSG_CHAR_CURRENCYACTION;
        public short GetMsgType { get { return MsgType; } }
        public ushort flow;// 资金流向，参见COIN_FLOW枚举
        public ushort reason;// 变化原因，参见COIN_OPERATE枚举
        public CHAR_CURRENCY currency;// 余额信息
        
        public static void Send(ushort flow, ushort reason, CHAR_CURRENCY currency, object className)
        {
            var packet = new CharCurrencyAction
            {
                flow = flow,
                reason = reason,
                currency = currency
            };
            NetMessage.Send(packet.BuildPacket(), className);
        }
        
        public byte[] BuildPacket()
        {
            var buffer = ProtocolBuffer.Writer;
            buffer.Write(MsgType);
            buffer.Write(ProtocolBuffer.Zero);
            WriteToStream(buffer);
            return ProtocolBuffer.CacheStream.ToArray();
        }
        
        public void ReadFromStream(BinaryReader reader)
        {
            flow = reader.ReadUInt16();
            reason = reader.ReadUInt16();
            currency = new CHAR_CURRENCY();
            currency.ReadFromStream(reader);
        }
        
        public void WriteToStream(BinaryWriter writer)
        {
            writer.Write(flow);
            writer.Write(reason);
            currency.WriteToStream(writer);
        }
    }
}
