// Generated by proto_to_csharp.py. DO NOT EDIT!
using System.IO;

namespace GameProtocol.CurrencyMessage
{
    /// 通知每日充值信息
    public sealed class NotifyServerChargeInfo : IProtocol
    {
        public const short MsgType = MessageType.MSG_NOTIFY_SERVER_CHARGE_INFO;
        public short GetMsgType { get { return MsgType; } }
        public uint CashAll;//每日充值数
        public DrawDailyChargeInfo[] DrawInfo;// 各档次充值信息
        
        public static void Send(uint cashAll, DrawDailyChargeInfo[] drawInfo, object className)
        {
            var packet = new NotifyServerChargeInfo
            {
                CashAll = cashAll,
                DrawInfo = drawInfo
            };
            NetMessage.Send(packet.BuildPacket(), className);
        }
        
        public byte[] BuildPacket()
        {
            var buffer = ProtocolBuffer.Writer;
            buffer.Write(MsgType);
            buffer.Write(ProtocolBuffer.Zero);
            WriteToStream(buffer);
            return ProtocolBuffer.CacheStream.ToArray();
        }
        
        public void ReadFromStream(BinaryReader reader)
        {
            CashAll = reader.ReadUInt32();
            var length2 = reader.ReadUInt16();
            DrawInfo = new DrawDailyChargeInfo[length2];
            for (var i2 = 0; i2 < length2; i2++)
            {
                DrawInfo[i2] = new DrawDailyChargeInfo();
                DrawInfo[i2].ReadFromStream(reader);
            }
        }
        
        public void WriteToStream(BinaryWriter writer)
        {
            writer.Write(CashAll);
            ushort count2 = (ushort)(DrawInfo == null ? 0 : DrawInfo.Length);
            writer.Write(count2);
            for(var i2 = 0; i2 < count2; i2++)
            {
                DrawInfo[i2].WriteToStream(writer);
            }
        }
    }
}
