// Generated by proto_to_csharp.py. DO NOT EDIT!
using System.IO;

namespace GameProtocol.LeagueMessage
{
    // MSGTYPE_DECLARE(MSG_GLOBAL_LEAGUE_REQUEST_AWARD),
    // 联赛请求领奖Track->Global
    public sealed class GlobalLeagueRequestAward : IProtocol
    {
        public const short MsgType = MessageType.MSG_GLOBAL_LEAGUE_REQUEST_AWARD;
        public short GetMsgType { get { return MsgType; } }
        public uint AwardId;// 领取到的奖励
        public uint TrackUid;// 所在的区服的Track
        public uint TeamId;// 所在的战队
        public uint AcctOid;// 角色的唯一ID
        
        public static void Send(uint awardId, uint trackUid, uint teamId, uint acctOid, object className)
        {
            var packet = new GlobalLeagueRequestAward
            {
                AwardId = awardId,
                TrackUid = trackUid,
                TeamId = teamId,
                AcctOid = acctOid
            };
            NetMessage.Send(packet.BuildPacket(), className);
        }
        
        public byte[] BuildPacket()
        {
            var buffer = ProtocolBuffer.Writer;
            buffer.Write(MsgType);
            buffer.Write(ProtocolBuffer.Zero);
            WriteToStream(buffer);
            return ProtocolBuffer.CacheStream.ToArray();
        }
        
        public void ReadFromStream(BinaryReader reader)
        {
            AwardId = reader.ReadUInt32();
            TrackUid = reader.ReadUInt32();
            TeamId = reader.ReadUInt32();
            AcctOid = reader.ReadUInt32();
        }
        
        public void WriteToStream(BinaryWriter writer)
        {
            writer.Write(AwardId);
            writer.Write(TrackUid);
            writer.Write(TeamId);
            writer.Write(AcctOid);
        }
    }
}
