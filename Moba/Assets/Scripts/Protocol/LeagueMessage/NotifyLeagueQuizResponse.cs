// Generated by proto_to_csharp.py. DO NOT EDIT!
using System.IO;

namespace GameProtocol.LeagueMessage
{
    /// 通知邀请赛投票结果
    public sealed class NotifyLeagueQuizResponse : IProtocol
    {
        public const short MsgType = MessageType.MSG_NOTIFY_LEAGUE_QUIZ_RESPONSE;
        public short GetMsgType { get { return MsgType; } }
        public const int VOTE_OK = 0;
        public const int VOTE_ERROR_VOTED = 1;/// 已经投过票
        public const int VOTE_ERROR_NO_CONTEST = 2;/// 找不到对阵信息
        public const int VOTE_ERROR_TIME_OUT = 3;/// 投票已截止///备注：修改该枚举值需要对应修改 sp_league_team_quiz 中的定义
        public uint Result;// 投票结果
        public uint ContestId;// 对阵ID
        public uint VoteTeam;// 支持的战队
        
        public static void Send(uint result, uint contestId, uint voteTeam, object className)
        {
            var packet = new NotifyLeagueQuizResponse
            {
                Result = result,
                ContestId = contestId,
                VoteTeam = voteTeam
            };
            NetMessage.Send(packet.BuildPacket(), className);
        }
        
        public byte[] BuildPacket()
        {
            var buffer = ProtocolBuffer.Writer;
            buffer.Write(MsgType);
            buffer.Write(ProtocolBuffer.Zero);
            WriteToStream(buffer);
            return ProtocolBuffer.CacheStream.ToArray();
        }
        
        public void ReadFromStream(BinaryReader reader)
        {
            Result = reader.ReadUInt32();
            ContestId = reader.ReadUInt32();
            VoteTeam = reader.ReadUInt32();
        }
        
        public void WriteToStream(BinaryWriter writer)
        {
            writer.Write(Result);
            writer.Write(ContestId);
            writer.Write(VoteTeam);
        }
    }
}
