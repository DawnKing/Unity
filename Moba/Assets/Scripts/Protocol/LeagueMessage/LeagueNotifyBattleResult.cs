// Generated by proto_to_csharp.py. DO NOT EDIT!
using System.IO;

namespace GameProtocol.LeagueMessage
{
    ///MSGTYPE_DECLARE(MSG_LEAGUE_NOTIFY_BATTLE_RESULT),
    /// 联赛通知成绩信息
    public sealed class LeagueNotifyBattleResult : IProtocol
    {
        public const short MsgType = MessageType.MSG_LEAGUE_NOTIFY_BATTLE_RESULT;
        public short GetMsgType { get { return MsgType; } }
        public uint contest;// 赛事ID
        public uint red_team;// 红队ID
        public uint blue_team;// 蓝队ID
        public uint win_team;// 胜队ID
        
        public static void Send(uint contest, uint red_team, uint blue_team, uint win_team, object className)
        {
            var packet = new LeagueNotifyBattleResult
            {
                contest = contest,
                red_team = red_team,
                blue_team = blue_team,
                win_team = win_team
            };
            NetMessage.Send(packet.BuildPacket(), className);
        }
        
        public byte[] BuildPacket()
        {
            var buffer = ProtocolBuffer.Writer;
            buffer.Write(MsgType);
            buffer.Write(ProtocolBuffer.Zero);
            WriteToStream(buffer);
            return ProtocolBuffer.CacheStream.ToArray();
        }
        
        public void ReadFromStream(BinaryReader reader)
        {
            contest = reader.ReadUInt32();
            red_team = reader.ReadUInt32();
            blue_team = reader.ReadUInt32();
            win_team = reader.ReadUInt32();
        }
        
        public void WriteToStream(BinaryWriter writer)
        {
            writer.Write(contest);
            writer.Write(red_team);
            writer.Write(blue_team);
            writer.Write(win_team);
        }
    }
}
