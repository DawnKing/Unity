// Generated by proto_to_csharp.py. DO NOT EDIT!
using System.IO;

using GameProtocol.BulkDataType;
using GameProtocol.TeamMessage;
namespace GameProtocol.LeagueMessage
{
    /// 请求加入联赛房间track->global
    public sealed class GlobalRequestJoinLeagueRoom : IProtocol
    {
        public const short MsgType = MessageType.MSG_GLOBAL_REQUEST_JOIN_LEAGUE_ROOM;
        public short GetMsgType { get { return MsgType; } }
        public TeamBrief TeamBrief;// 战队信息
        public CHAR_BRIEF charBrief;// 角色基本信息
        public CHAR_TANK_BRIEF_CONT tankContVec;// 角色坦克容器列表
        public uint IsTeamLeader;// 是否是战队长
        public byte RoomType;// 房间类型
        public uint ContestId;// 邀请赛需要指定对阵ID
        
        public static void Send(TeamBrief teamBrief, CHAR_BRIEF charBrief, CHAR_TANK_BRIEF_CONT tankContVec, uint isTeamLeader, byte roomType, uint contestId, object className)
        {
            var packet = new GlobalRequestJoinLeagueRoom
            {
                TeamBrief = teamBrief,
                charBrief = charBrief,
                tankContVec = tankContVec,
                IsTeamLeader = isTeamLeader,
                RoomType = roomType,
                ContestId = contestId
            };
            NetMessage.Send(packet.BuildPacket(), className);
        }
        
        public byte[] BuildPacket()
        {
            var buffer = ProtocolBuffer.Writer;
            buffer.Write(MsgType);
            buffer.Write(ProtocolBuffer.Zero);
            WriteToStream(buffer);
            return ProtocolBuffer.CacheStream.ToArray();
        }
        
        public void ReadFromStream(BinaryReader reader)
        {
            TeamBrief = new TeamBrief();
            TeamBrief.ReadFromStream(reader);
            charBrief = new CHAR_BRIEF();
            charBrief.ReadFromStream(reader);
            tankContVec = new CHAR_TANK_BRIEF_CONT();
            tankContVec.ReadFromStream(reader);
            IsTeamLeader = reader.ReadUInt32();
            RoomType = reader.ReadByte();
            ContestId = reader.ReadUInt32();
        }
        
        public void WriteToStream(BinaryWriter writer)
        {
            TeamBrief.WriteToStream(writer);
            charBrief.WriteToStream(writer);
            tankContVec.WriteToStream(writer);
            writer.Write(IsTeamLeader);
            writer.Write(RoomType);
            writer.Write(ContestId);
        }
    }
}
