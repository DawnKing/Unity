// Generated by proto_to_csharp.py. DO NOT EDIT!
using System.IO;

using GameProtocol.BulkDataType;
namespace GameProtocol.LeagueMessage
{
    /// 加入房间成为观察者
    public sealed class GlobalRequestLookRoom : IProtocol
    {
        public const short MsgType = MessageType.MSG_GLOBAL_REQ_LOOK_ROOM;
        public short GetMsgType { get { return MsgType; } }
        public byte Type;// 房间类型 enum ROOM_TYPE
        public uint RoomId;// 房间ID
        public uint ContestId;// 邀请赛需要指定对阵ID
        public CHAR_BRIEF charBrief;// 角色基本信息
        
        public static void Send(byte type, uint roomId, uint contestId, CHAR_BRIEF charBrief, object className)
        {
            var packet = new GlobalRequestLookRoom
            {
                Type = type,
                RoomId = roomId,
                ContestId = contestId,
                charBrief = charBrief
            };
            NetMessage.Send(packet.BuildPacket(), className);
        }
        
        public byte[] BuildPacket()
        {
            var buffer = ProtocolBuffer.Writer;
            buffer.Write(MsgType);
            buffer.Write(ProtocolBuffer.Zero);
            WriteToStream(buffer);
            return ProtocolBuffer.CacheStream.ToArray();
        }
        
        public void ReadFromStream(BinaryReader reader)
        {
            Type = reader.ReadByte();
            RoomId = reader.ReadUInt32();
            ContestId = reader.ReadUInt32();
            charBrief = new CHAR_BRIEF();
            charBrief.ReadFromStream(reader);
        }
        
        public void WriteToStream(BinaryWriter writer)
        {
            writer.Write(Type);
            writer.Write(RoomId);
            writer.Write(ContestId);
            charBrief.WriteToStream(writer);
        }
    }
}
