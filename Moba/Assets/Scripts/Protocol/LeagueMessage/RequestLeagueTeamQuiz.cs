// Generated by proto_to_csharp.py. DO NOT EDIT!
using System.IO;

namespace GameProtocol.LeagueMessage
{
    /// 请求为邀请赛的队伍投票
    public sealed class RequestLeagueTeamQuiz : IProtocol
    {
        public const short MsgType = MessageType.MSG_REQUEST_LEAGUE_TEAM_QUIZ;
        public short GetMsgType { get { return MsgType; } }
        public uint SessionId;///联赛届次ID
        public uint RoundId;///轮次ID
        public uint ContestId;///对阵ID
        public uint VoteTeam;// 支持的战队ID
        public uint CharOid;// 角色oid
        public string strUuid;// 玩家UUID
        
        public static void Send(uint sessionId, uint roundId, uint contestId, uint voteTeam, uint charOid, string strUuid, object className)
        {
            var packet = new RequestLeagueTeamQuiz
            {
                SessionId = sessionId,
                RoundId = roundId,
                ContestId = contestId,
                VoteTeam = voteTeam,
                CharOid = charOid,
                strUuid = strUuid
            };
            NetMessage.Send(packet.BuildPacket(), className);
        }
        
        public byte[] BuildPacket()
        {
            var buffer = ProtocolBuffer.Writer;
            buffer.Write(MsgType);
            buffer.Write(ProtocolBuffer.Zero);
            WriteToStream(buffer);
            return ProtocolBuffer.CacheStream.ToArray();
        }
        
        public void ReadFromStream(BinaryReader reader)
        {
            SessionId = reader.ReadUInt32();
            RoundId = reader.ReadUInt32();
            ContestId = reader.ReadUInt32();
            VoteTeam = reader.ReadUInt32();
            CharOid = reader.ReadUInt32();
            strUuid = reader.ReadString();
        }
        
        public void WriteToStream(BinaryWriter writer)
        {
            writer.Write(SessionId);
            writer.Write(RoundId);
            writer.Write(ContestId);
            writer.Write(VoteTeam);
            writer.Write(CharOid);
            writer.Write(strUuid);
        }
    }
}
