// Generated by proto_to_csharp.py. DO NOT EDIT!
using System.IO;

namespace GameProtocol.LeagueMessage
{
    /*
     * 赛事报名返回的错误代码
     */
    // 无此奖励
    // 已被领取
    // 货币溢出
    // 非法调用
    // 其他错误（含数据库失败）
    // MSGTYPE_DECLARE(MSG_LEAGUE_AWARD_RESULT),
    // 通知客户端，联赛领奖结果
    public sealed class LeagueAwardResult : IProtocol
    {
        public const short MsgType = MessageType.MSG_LEAGUE_AWARD_RESULT;
        public short GetMsgType { get { return MsgType; } }
        public uint result;// 参见LEAGUE_AWARD_ERROR
        public uint awardId;// 领奖的ID
        public uint belongs;// 奖励所属：0-个人，1-战队
        
        public static void Send(uint result, uint awardId, uint belongs, object className)
        {
            var packet = new LeagueAwardResult
            {
                result = result,
                awardId = awardId,
                belongs = belongs
            };
            NetMessage.Send(packet.BuildPacket(), className);
        }
        
        public byte[] BuildPacket()
        {
            var buffer = ProtocolBuffer.Writer;
            buffer.Write(MsgType);
            buffer.Write(ProtocolBuffer.Zero);
            WriteToStream(buffer);
            return ProtocolBuffer.CacheStream.ToArray();
        }
        
        public void ReadFromStream(BinaryReader reader)
        {
            result = reader.ReadUInt32();
            awardId = reader.ReadUInt32();
            belongs = reader.ReadUInt32();
        }
        
        public void WriteToStream(BinaryWriter writer)
        {
            writer.Write(result);
            writer.Write(awardId);
            writer.Write(belongs);
        }
    }
}
