// Generated by proto_to_csharp.py. DO NOT EDIT!
using System.IO;

namespace GameProtocol.LeagueMessage
{
    // MSGTYPE_DECLARE(MSG_NOTIFY_LEAGUE_TEAM_AWARD),
    // 通知TrackServer发放联赛的战队奖励
    public sealed class LeagueNotifyTeamAward : IProtocol
    {
        public const short MsgType = MessageType.MSG_NOTIFY_LEAGUE_TEAM_AWARD;
        public short GetMsgType { get { return MsgType; } }
        public uint awardId;// 奖励的ID
        public uint teaid;// 战队ID(获奖当时)
        public uint glory;// 战队威望
        public uint teamcoin;// 战队资金
        public uint honor;// 战队荣誉
        
        public static void Send(uint awardId, uint teaid, uint glory, uint teamcoin, uint honor, object className)
        {
            var packet = new LeagueNotifyTeamAward
            {
                awardId = awardId,
                teaid = teaid,
                glory = glory,
                teamcoin = teamcoin,
                honor = honor
            };
            NetMessage.Send(packet.BuildPacket(), className);
        }
        
        public byte[] BuildPacket()
        {
            var buffer = ProtocolBuffer.Writer;
            buffer.Write(MsgType);
            buffer.Write(ProtocolBuffer.Zero);
            WriteToStream(buffer);
            return ProtocolBuffer.CacheStream.ToArray();
        }
        
        public void ReadFromStream(BinaryReader reader)
        {
            awardId = reader.ReadUInt32();
            teaid = reader.ReadUInt32();
            glory = reader.ReadUInt32();
            teamcoin = reader.ReadUInt32();
            honor = reader.ReadUInt32();
        }
        
        public void WriteToStream(BinaryWriter writer)
        {
            writer.Write(awardId);
            writer.Write(teaid);
            writer.Write(glory);
            writer.Write(teamcoin);
            writer.Write(honor);
        }
    }
}
