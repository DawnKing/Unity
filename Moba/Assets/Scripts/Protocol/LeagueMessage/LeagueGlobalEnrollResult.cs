// Generated by proto_to_csharp.py. DO NOT EDIT!
using System.IO;

namespace GameProtocol.LeagueMessage
{
    // MSGTYPE_DECLARE(MSG_GLOBAL_LEAGUE_ENROLL_RESULT),
    // 联赛报名结果Global->Track
    public sealed class LeagueGlobalEnrollResult : IProtocol
    {
        public const short MsgType = MessageType.MSG_GLOBAL_LEAGUE_ENROLL_RESULT;
        public short GetMsgType { get { return MsgType; } }
        public uint teaid;// 报名的队伍编号
        public uint session;// 要报名的赛事实例
        public uint zone_id;// 要报名的赛区实例
        public uint result;// 参见LEAGUE_ENROLL_ERROR
        public uint cost;// 需要扣除的战队资金
        
        public static void Send(uint teaid, uint session, uint zone_id, uint result, uint cost, object className)
        {
            var packet = new LeagueGlobalEnrollResult
            {
                teaid = teaid,
                session = session,
                zone_id = zone_id,
                result = result,
                cost = cost
            };
            NetMessage.Send(packet.BuildPacket(), className);
        }
        
        public byte[] BuildPacket()
        {
            var buffer = ProtocolBuffer.Writer;
            buffer.Write(MsgType);
            buffer.Write(ProtocolBuffer.Zero);
            WriteToStream(buffer);
            return ProtocolBuffer.CacheStream.ToArray();
        }
        
        public void ReadFromStream(BinaryReader reader)
        {
            teaid = reader.ReadUInt32();
            session = reader.ReadUInt32();
            zone_id = reader.ReadUInt32();
            result = reader.ReadUInt32();
            cost = reader.ReadUInt32();
        }
        
        public void WriteToStream(BinaryWriter writer)
        {
            writer.Write(teaid);
            writer.Write(session);
            writer.Write(zone_id);
            writer.Write(result);
            writer.Write(cost);
        }
    }
}
