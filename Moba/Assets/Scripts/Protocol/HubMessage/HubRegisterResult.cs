// Generated by proto_to_csharp.py. DO NOT EDIT!
using System.IO;

namespace GameProtocol.HubMessage
{
    // 注册成功
    // 无效的BUCKET范围
    /**
     * HUB响应：HUBSVR向服务节点返回注册结果
     * MSGTYPE_DECLARE(MSG_HUB_SERVICE_RESULT)
     */
    public sealed class HubRegisterResult : IProtocol
    {
        public const short MsgType = MessageType.MSG_HUB_SERVICE_RESULT;
        public short GetMsgType { get { return MsgType; } }
        public uint procUid;// 全区唯一进程标识
        public int result;// 结果枚举值：0 成功；-1 失败
        
        public static void Send(uint procUid, int result, object className)
        {
            var packet = new HubRegisterResult
            {
                procUid = procUid,
                result = result
            };
            NetMessage.Send(packet.BuildPacket(), className);
        }
        
        public byte[] BuildPacket()
        {
            var buffer = ProtocolBuffer.Writer;
            buffer.Write(MsgType);
            buffer.Write(ProtocolBuffer.Zero);
            WriteToStream(buffer);
            return ProtocolBuffer.CacheStream.ToArray();
        }
        
        public void ReadFromStream(BinaryReader reader)
        {
            procUid = reader.ReadUInt32();
            result = reader.ReadInt32();
        }
        
        public void WriteToStream(BinaryWriter writer)
        {
            writer.Write(procUid);
            writer.Write(result);
        }
    }
}
