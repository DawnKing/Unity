// Generated by proto_to_csharp.py. DO NOT EDIT!
using System.IO;

namespace GameProtocol.SkillMessage
{
    /// MSGTYPE_DECLARE(MSG_TANK_SKILL_UPGRADE_OK)		     //服务端响应坦克技能升级结果
    public sealed class TankSkillUpgradeOk : IProtocol
    {
        public const short MsgType = MessageType.MSG_TANK_SKILL_UPGRADE_OK;
        public short GetMsgType { get { return MsgType; } }
        public int active_skill_count;
        public int[] active_skill;
        
        public static void Send(int active_skill_count, int[] active_skill, object className)
        {
            var packet = new TankSkillUpgradeOk
            {
                active_skill_count = active_skill_count,
                active_skill = active_skill
            };
            NetMessage.Send(packet.BuildPacket(), className);
        }
        
        public byte[] BuildPacket()
        {
            var buffer = ProtocolBuffer.Writer;
            buffer.Write(MsgType);
            buffer.Write(ProtocolBuffer.Zero);
            WriteToStream(buffer);
            return ProtocolBuffer.CacheStream.ToArray();
        }
        
        public void ReadFromStream(BinaryReader reader)
        {
            active_skill_count = reader.ReadInt32();
            var length2 = reader.ReadUInt16();
            active_skill = new int[length2];
            for (var i2 = 0; i2 < length2; i2++)
            {
                active_skill[i2] = reader.ReadInt32();
            }
        }
        
        public void WriteToStream(BinaryWriter writer)
        {
            writer.Write(active_skill_count);
            ushort count2 = (ushort)(active_skill == null ? 0 : active_skill.Length);
            writer.Write(count2);
            for(var i2 = 0; i2 < count2; i2++)
            {
                writer.Write(active_skill[i2]);
            }
        }
    }
}
