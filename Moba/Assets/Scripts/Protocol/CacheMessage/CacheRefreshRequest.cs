// Generated by proto_to_csharp.py. DO NOT EDIT!
using System.IO;

namespace GameProtocol.CacheMessage
{
    // ----------------------------------------------------------------------
    ///	@file			protocol/CacheMessage.h
    ///	@brief
    ///	@author			Bob
    ///	@copyright		Sixcube Information Technology Co,. Ltd. (2012)
    ///	@date			2016-5-26 14:43:18
    // ----------------------------------------------------------------------
    /// @addtogroup dt_ManageMessage
    /// @{
    // MSGTYPE_DECLARE(MSG_CACHING_REFRESH_REQUEST),
    // 请求刷新特定的缓存
    public sealed class CacheRefreshRequest : IProtocol
    {
        public const short MsgType = MessageType.MSG_CACHING_REFRESH_REQUEST;
        public short GetMsgType { get { return MsgType; } }
        public string cacheKey;///- 缓存的KEY
        public string parameters;///- 缓存刷新参数(自定义)
        public uint expires;///- 缓存有效时间
        
        public static void Send(string cacheKey, string parameters, uint expires, object className)
        {
            var packet = new CacheRefreshRequest
            {
                cacheKey = cacheKey,
                parameters = parameters,
                expires = expires
            };
            NetMessage.Send(packet.BuildPacket(), className);
        }
        
        public byte[] BuildPacket()
        {
            var buffer = ProtocolBuffer.Writer;
            buffer.Write(MsgType);
            buffer.Write(ProtocolBuffer.Zero);
            WriteToStream(buffer);
            return ProtocolBuffer.CacheStream.ToArray();
        }
        
        public void ReadFromStream(BinaryReader reader)
        {
            cacheKey = reader.ReadString();
            parameters = reader.ReadString();
            expires = reader.ReadUInt32();
        }
        
        public void WriteToStream(BinaryWriter writer)
        {
            writer.Write(cacheKey);
            writer.Write(parameters);
            writer.Write(expires);
        }
    }
}
