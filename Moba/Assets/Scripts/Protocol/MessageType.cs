// Generated by inltoas.py. DO NOT EDIT!
namespace GameProtocol
{
    public sealed class MessageType
    {
        // MSGTYPE_BEGIN_BLOCK
        
        public const short MSG_ECHO_REQUEST = 5; // 
        public const short MSG_ECHO_RESPONSE = 6; // 
        public const short MSG_LICENSE_NOTIFY = 7; // 
        public const short MSG_SOCKET_EVENT = 8; // 
        public const short MSG_SYSTEM_TIME_IMPLUS = 9; // 
        public const short MSG_CLIENT_MANAGE_START = 10; //  reserve 10-19 for client management
        // server internal
        // net layer -> app layer
        public const short MSG_CLIENT_MANAGE_CONNECT_INDICATE = 11; // 
        public const short MSG_CLIENT_MANAGE_DISCONNECT_INDICATE = 12; // 
        // app layer -> net layer
        public const short MSG_CLIENT_MANAGE_DISCONNECT_COMMAND = 13; // 
        public const short MSG_CLIENT_MANAGE_RECONNECT_COMMAND = 14; // 
        
        // app layer -> net layer
        // open a connection, used by npc server
        public const short MSG_CLIENT_MANAGE_OPENCONNECT_COMMAND = 15; // 
        // net layer -> app lay
        public const short MSG_CLIENT_MANAGE_OPENFAILED_INDICATE = 16; // 
        
        // client -> server
        public const short MSG_CLIENT_REQUEST_RECONNECT = 17; // 
        // server -> client
        public const short MSG_CLIENT_REJECT_RECONNECT = 18; // 
        public const short MSG_CLIENT_APPROVE_RECONNECT = 19; // 
        
        // -----------------------------------------------------------------------/
        // /*   由客户端可以发送的消息                                                */
        // --------------------------------------------------------------------—--/
        public const short MSG_CLIENT_START = 50; // 
        // -----------------------------------------------------------------------/
        // /*   不需要gate转发的消息                                                  */
        // --------------------------------------------------------------------—--/
        //第零部分：认证服务器消息
        public const short MSG_AUTH_REQUEST_AUTH_LOGIN = 51; // 向认证前端服务器请求密码验证
        public const short MSG_AUTH_REQUEST_PROTOCOL_VERSION = 52; // 向认证服务器验证协议版本
        public const short MSG_AUTH_REQUEST_REGION_SESSION = 53; // 向认证服务器请求登录到区服网关
        public const short MSG_AUTH_REQUEST_SERVER_LOGIN = 54; // 向网关服务器请求登录
        public const short MSG_AUTH_REQUEST_SERVER_LOGOUT = 55; // 向网关服务器请求退出登录
        public const short MSG_AUTH_REQUEST_WORLD_ENTER = 56; // 客户端在选取角色，载入地图之后，发送给服务器
        public const short MSG_AUTH_REQUEST_WORLD_LOGOUT = 57; // 离开游戏，再进入需要在认证服务器重新认证
        public const short MSG_AUTH_REQUEST_CANCEL_LOGOUT = 58; // 打断正在离开游戏的请求
        public const short MSG_AUTH_REQUEST_SWITCH_LINE = 59; // 请求切换分线
        
        // 系统协议
        public const short MSG_SYSTEM_HEARTBEAT = 60; //  心跳消息
        public const short MSG_REQUEST_PING = 61; //  客户端向服务端请求ping值
        public const short MSG_GM_COMMAND = 62; //  GM指令 gate
        public const short MSG_GM_GAME_COMMAND = 63; //  GM指令 gate->game
        
        // 角色创建
        public const short MSG_CHARCREATE_REQUEST = 64; //  请求进行角色创建
        public const short MSG_CHAR_NAME_UNIQUE_REQUEST = 65; //  名称唯一性检测
        public const short MSG_CHAR_CURRENCY_REQUEST_RMB_TRANSER = 66; //  请求进行RMB兑换
        public const short MSG_CHAR_CURRENCY_REQUEST_RMB = 67; //  请求RMB的数量
        public const short MSG_REQUEST_CREATE_TEAM = 68; //  创建战队
        public const short MSG_REQUEST_CREATE_GUILD = 69; //  请求创建军团
        public const short MSG_REQUEST_GUILD_GIFT = 70; //  请求领取军团礼包
        public const short MSG_REQUEST_TRANSFER_TEAM_COIN = 71; //  请求转移战队的资金到军团
        public const short MSG_CLIENT_DATA_STAT = 72; //  客户端数据采集
        public const short MSG_REQUEST_USE_SPRAY = 73; //  请求更换喷图
        public const short MSG_REQUEST_STAGE_REAP_REWARD = 74; //  请求领取阶段性奖励
        public const short MSG_REQUEST_CHANGE_NAME = 75; //  请求修改角色名
        public const short MSG_REQUEST_CHANGE_TEAM_NAME = 76; //  请求修改战队名
        public const short MSG_REQUEST_CHANGE_GUILD_NAME = 77; //  请求修改军团名
        public const short MSG_REQUEST_BUY_THEW = 78; //  请求购买体力
        public const short MSG_REQUEST_CHANGE_SETTING = 79; //  请求保存系统设置
        public const short MSG_REQUEST_PICK_CASHBACK = 80; //  请求领取礼券月卡的返点
        public const short MSG_NOTIFY_CASHBACK_INFO = 81; //  返回礼券月卡的更新信息
        public const short MSG_REQUEST_PICK_PRENTICE_CASHBACK = 82; //  请求领取徒弟充值返利
        public const short MSG_NOTIFY_PRENTICE_CASHBACK_INFO = 83; //  返回徒弟充值返利信息
        public const short MSG_REQUEST_PAYMENT_RMB = 84; //  请求充值
        public const short MSG_NOTIFY_UPDATE_CHAR_DATA = 85; //  通知同步角色数据
        public const short MSG_REQUEST_OBSERVER_LOGIN = 86; //  请求附身登陆
        public const short MSG_REQUEST_PROTECT_PWD_OP = 87; // <请求2级密保相关操作
        public const short MSG_REQUEST_SET_CHAR_OPTION = 88; //  请求更新系统设置
        public const short MSG_REQUEST_SUPER_VIP_CHARGE_INFO = 89; //  请求超级VIP充值信息
        public const short MSG_REQUEST_DRAW_SUPER_VIP_CHARGE_BACK = 90; //  请求领取超级VIP返还
        public const short MSG_APEX_SEND2SERVER = 91; // < 由 game client 发送给 gate server 的 Apex 消息
        public const short MSG_APEX_SENDRETVAL2SERVER = 92; // < 由 game client 发送给 gate server 的关于chcstart的返回值消息
        
        // 物品相关协议
        public const short MSG_REQUEST_SWAP_ITEM = 150; //  移动物品
        public const short MSG_REQUEST_SALE_ITEM = 151; //  请求出售物品
        public const short MSG_REQUEST_CONT_CLEANUP = 152; //  请求整理包裹
        public const short MSG_REQUEST_USE_ITEM = 153; //  请求使用物品
        public const short MSG_REQUEST_DRAW_AWARD = 154; //  请求领取奖励
        public const short MSG_REQUEST_CONVERT_ITEM = 155; //  请求兑换物品
        public const short MSG_REQUEST_BOOSTER_PLANT = 156; //  请求培养助手
        public const short MSG_REQUEST_BOOSTER_STTH = 157; //  请求强化助手
        public const short MSG_REQUEST_BOOSTER_COMPOSE = 158; //  请求合成助手
        public const short MSG_REQUEST_BOOSTER_TRANS = 159; //  请求助手转换
        public const short MSG_REQUEST_READ_ITEM = 160; //  请求查看物品
        public const short MSG_REQUEST_ROULETTE = 161; //  请求轮盘赌
        public const short MSG_REQUEST_SPLIT_ITEM = 162; //  请求拆解物品
        public const short MSG_REQUEST_EXPAND_CONTAINER = 163; //  请求扩展容器
        public const short MSG_REQUEST_DRAW_GIFT = 164; //  请求领取礼包
        public const short MSG_REQUEST_CONTAINER_ITEM = 165; //  请求获取容器物品
        public const short MSG_REQUEST_CHANGE_BATTLE_BOOSTER = 166; //  请求切换主战助手
        public const short MSG_REQUEST_DRAW_GOLDEN_POOL = 167; //  请求领取金币池内的金币
        public const short MSG_REQUEST_BIND_ITEM_ADDRESS = 168; //  请求绑定物品的邮寄地址
        public const short MSG_REQUEST_ITEM_ROULETTE = 169; //  请求使用物品轮盘赌
        public const short MSG_REQUEST_SEL_AWARD_USE_ITEM = 170; //  请求使用物品获取选择奖励
        
        // 坦克相关
        public const short MSG_REQUEST_TANK_BATTLE = 200; //  请求坦克出战
        public const short MSG_REQUEST_TANK_DELETE = 201; //  请求删除坦克
        public const short MSG_REQUEST_TANK_HIRE = 202; //  请求租用坦克
        public const short MSG_REQUEST_TANK_UP = 203; //  请求坦克升级
        public const short MSG_REQUEST_TANK_STTH = 204; //  请求坦克强化
        public const short MSG_REQUEST_TANK_SKILL_UP = 205; //  请求坦克技能升级
        public const short MSG_REQUEST_TANK_TRY = 206; //  请求试用坦克(废弃)
        public const short MSG_REQUEST_TANK_CHANGE_SKIN = 207; //  请求更换坦克皮肤
        public const short MSG_REQUEST_TANK_SKILL_UPGRADE = 208; //  请求坦克技能树升级
        public const short MSG_REQUEST_TANK_QUICK_UP = 209; //  请求坦克一键升级
        public const short MSG_REQUEST_PRESENT_HIRE_TANK = 210; //  请求赠送租用坦克
        public const short MSG_REQUEST_USE_TANK_HALO = 211; //  请求使用坦克光环
        public const short MSG_REQUEST_USE_FREE_WEEK_TANK = 212; //  请求使用周免坦克（客户端没有周免坦克实例时，调用该协议）
        public const short MSG_REQUEST_BUY_TANK_SKIN_CHIP = 213; //  请求购买坦克皮肤碎片
        public const short MSG_REQUEST_GET_TANK_SKIN = 214; //  请求将坦克皮肤碎片兑换成坦克皮肤
        public const short MSG_REQUEST_GET_RARE_TANK = 215; //  请求领取稀有坦克奖励
        public const short MSG_REQUEST_SELECT_USE_TANK = 216; //  选坦克阶段请求切换坦克
        public const short MSG_REQUEST_TANK_RESEARCH_INFO = 217; //  请求坦克研究信息
        public const short MSG_REQUEST_TANK_RESEARCH = 218; //  请求研究坦克
        public const short MSG_REQUEST_RECYCLE_TANK_RESEARCH = 219; //  请求兑换研究进度为经验
        public const short MSG_REQUEST_GET_RESEARCH_TANK = 220; //  请求换取已研究完成的坦克
        public const short MSG_REQUEST_OPERATE_TANKPART = 221; //  请求操作坦克部件
        public const short MSG_REQUEST_START_TREASURE = 222; //  请求一元夺宝
        public const short MSG_REQUEST_DRAW_TREASURE_AWARD = 223; //  请求领取夺宝奖励
        
        //商城相关
        public const short MSG_GOODS_SHOP_BUY = 250; //  购买商城物品
        public const short MSG_GOODS_SHOP_BUY_MULTI = 251; //  商城购买物品
        public const short MSG_GOODS_SHOP_LARGESS = 252; //  商城赠送物品
        public const short MSG_GOODS_SHOP_LARGESS_MULTI = 253; //  商城赠送物品
        public const short MSG_REQUEST_SCENE_SHOP_BUY = 254; //  请求游戏币购买道具
        public const short MSG_REQUEST_CLIP_BUY = 255; //  请求购买弹夹道具
        public const short MSG_REQUEST_STORE_MERCHANDISE = 256; //  请求打开商店(会检查刷新)
        public const short MSG_REQUEST_REFRESH_STORE = 257; //  请求主动刷新商店
        public const short MSG_REQUEST_STORE_PURCHASE = 258; //  请求购买商店物品
        public const short MSG_REQUEST_BUY_MYSTICAL_SHOP_GOODS = 259; //  请求购买神秘商店商品
        public const short MSG_REQUEST_STORE_ENABLE = 260; //  请求开通商店进入权限
        
        // 邮件相关
        public const short MSG_REQUEST_MAIL_SEND = 270; //  请求发送邮件
        public const short MSG_REQUEST_MAIL_OPERATE = 271; //  请求邮件操作
        public const short MSG_REQUEST_PICKUP_MAIL_ITEM = 272; //  请求提取邮件物品
        
        // 任务成就相关
        public const short MSG_REQUEST_COMPLETE_QUEST = 280; //  请求完成任务，领取任务奖励
        public const short MSG_REQUEST_OPEN_UI = 281; //  请求打开界面
        public const short MSG_REQUEST_SHARE_ENJOYMENT = 282; //  分享快乐
        public const short MSG_REQUEST_SET_DESKTOP = 283; //  收藏桌面
        public const short MSG_REQUEST_READ_QUEST = 284; //  请求读取任务信息（全服任务使用）
        public const short MSG_REQUEST_SWITCH_QUEST = 285; //  请求切换任务
        public const short MSG_REQUEST_LIKE_US = 286; //  赞
        public const short MSG_REQUEST_GET_ITEM_QUEST = 287; //  请求获得物品任务
        
        // 客户端请求的单人副本相关消息
        public const short MSG_PVE_SELECT_SCENE = 300; //  请求选择开始某个章节内的关卡
        public const short MSG_PVE_REQUEST_REFRESH_REWARD = 301; //  请求刷新PVE副本的结算信息
        public const short MSG_PVE_REQUEST_GATHER_REWARD = 302; //  请求收获某个PVE副本的产出
        public const short MSG_PVE_REQUEST_SMASH_EGG = 303; //  请求收获章节的彩蛋
        public const short MSG_PVE_REQUEST_TUTOR_MAP = 304; //  请求参加对应的训练关卡
        public const short MSG_PVE_REQUEST_TANK_TRIAL_MAP = 305; //  请求选择坦克开始试玩副本
        public const short MSG_REQUEST_RESET_MAP_ENTER_COUNT = 306; //  请求重置副本进入次数
        public const short MSG_SOLO_REQUEST_SWEEP_MAP = 307; //  请求地图扫荡
        public const short MSG_REQUEST_SOLO_PVE_INFO = 308; //  请求副本信息
        
        
        // 军团相关消息
        public const short MSG_REQUEST_LEARN_GUILD_SKILL = 320; // 角色请求学习军团技能
        public const short MSG_REQUEST_UNLOCK_SKILL_SLOT = 321; // < 角色请求解锁军团技能格
        public const short MSG_REQUEST_SET_GUILD_SKILL = 322; // < 请求设定角色军团技能
        public const short MSG_REQUEST_START_GUILD_BOSS = 323; // < 请求参加军团BOSS战斗
        public const short MSG_REQUEST_DRAW_GUILD_BOSS_AWARD = 324; // < 请求领取军团BOSS奖励
        
        // 指挥官技能
        public const short MSG_REQUEST_SET_COMMANDER_SKILL = 340; // < 请求设定指挥官技能
        
        // 活动相关
        public const short MSG_ACTIVITY_ENTER_BOSS = 350; // < 请求参加世界boss活动
        public const short MSG_REQUEST_PRESENT_VALENTINE_FLAUNT = 351; // < 请求七夕送花
        public const short MSG_REQUEST_RAND_STEP_SUPPORT = 352; // < 请求夺宝排行点赞
        public const short MSG_REQUEST_DRAW_STAGE_WEEK_FIZZ_AWARD = 353; // < 请求领取阶段周活跃奖励
        public const short MSG_OPEN_FUNC_NOTIFY_UI = 354; // < 通知打开功能通知界面
        public const short MSG_CLOSE_FUNC_NOTIFY_UI = 355; // < 通知关闭功能通知界面
        public const short MSG_REQUEST_BOOSTER_COMP_INFO = 356; // < 请求角色助手竞技场信息
        public const short MSG_REQUEST_BOOSTER_COMP_RANK_AWARD = 357; // < 请求领取助手挑战赛每日排行奖励
        public const short MSG_REQUEST_CLR_BST_COMP_COOL_TIME = 358; // < 请求清除助手挑战赛冷却时间
        public const short MSG_REQUEST_BOOSTER_BATTLE = 359; // < 请求进行助手对战
        public const short MSG_REQUEST_SIGN_IN = 360; // < 请求签到
        public const short MSG_REQUEST_STAGE_SIGN_IN_AWARD = 361; // < 请求累计签到奖励
        public const short MSG_REQUEST_VIP_DOUBLE_AWARD = 362; //  请求获取vip双倍的另外一份奖励
        public const short MSG_REQ_SERVER_LOGIN_CONFIG = 363; //  请求服务端登陆配置信
        public const short MSG_REQUEST_SEND_REDPACKET = 364; //  请求发红包
        public const short MSG_REQUEST_ROB_REDPACKET = 365; //  请求抢红包
        public const short MSG_REQUEST_REDPACKET_LOG = 366; //  请求查看红包历史记录
        public const short MSG_REQUEST_OPEN_CHEST = 367; //  请求开宝箱
        public const short MSG_REQUEST_CLOUD_PURCHASE_BUY = 368; //  请求云购购买
        public const short MSG_REQUEST_GET_CLOUD_PURCHASE_BUY_INFO = 369; //  请求获取云购购买信息
        public const short MSG_REQUEST_BIND_INVITE_SPREAD_PLAYER = 370; //  请求绑定邀请推广玩家
        public const short MSG_REQUEST_DRAW_BIND_INVITE_SPREAD_AWARD = 371; //  请求领取军团BOSS奖励
        public const short MSG_REQUEST_RAND_STEP = 372; //  请求冒险夺宝
        public const short MSG_REQUEST_BUY_FUND = 373; //  请求购买成长基金
        public const short MSG_REQUEST_DRAW_FUND = 374; //  请求领取基金
        public const short MSG_REQUEST_MAKE_TANK = 375; //  请求制造坦克
        public const short MSG_REQUEST_EXPEDITION = 376; //  请求远征
        public const short MSG_REQUEST_CANCEL_EXPEDITION = 377; //  请求取消远征
        public const short MSG_REQUEST_GET_EXPEDITION_AWARD = 378; //  请求远征领取奖励
        public const short MSG_REQUEST_DRAW_INVITE_GIFT_AWARD = 379; //  请求领取邀请好礼奖励
        public const short MSG_REQUEST_NEW_SIGN_IN = 380; //  请求新版签到
        public const short MSG_REQUEST_NEW_STAGE_SIGN_IN_AWARD = 381; //  请求新版累计签到奖励
        
        // 角色社交相关
        public const short MSG_REQUEST_ELIMINATE_REL = 400; // < 请求解除关系
        public const short MSG_REQUEST_ESTABLISH_REL = 401; // < 请求建立社交关系
        public const short MSG_REQUEST_QQ_GIFT_OP = 402; // < 请求qq好友礼物操作
        public const short MSG_REQUEST_SET_INVITER_ACCTID = 403; // < 请求填写邀请者账号id
        //新手引导以及师徒系统相关
        public const short MSG_CHAR_GUIDE_UPDATE = 404; //  更新角色完成新手引导的进度
        public const short MSG_REQUEST_SOCIAL_TICKET = 405; //  申请临时师徒的邀请码
        public const short MSG_CONFIRM_SOCIAL_TICKET = 406; //  确认使用临时师徒的邀请码
        public const short MSG_REQUEST_SOCIAL_AWARD = 407; //  领取临时师徒的奖励
        
        
        //属性相关
        public const short MSG_REQUEST_ADD_TALENT_PAGE = 420; //  请求添加天赋页
        public const short MSG_REQUEST_SAVE_TALENT_PAGE = 421; //  请求保存天赋页
        public const short MSG_REQUEST_OP_TALENT_PAGE = 422; //  请求天赋页操作
        public const short MSG_REQUEST_CRYSTAL_SCHEME_INFO = 423; //  请求获取晶片组合信息
        public const short MSG_REQUEST_SAVE_CRYSTAL_SCHEME_INFO = 424; //  请求保存晶片组合信息
        public const short MSG_REQUEST_CHANGE_CRYSTAL_SCHEME_NAME = 425; //  请求改变晶片组合方案名
        public const short MSG_REQUEST_UPGRADE_CRYSTAL = 426; //  请求升阶晶片
        public const short MSG_REQUEST_SET_CUR_CRYSTAL_SCHEME_ID = 427; //  请求设置当前晶片方案ID
        public const short MSG_REQUEST_LEVELUP_YCARD = 428; //  请求佣兵卡升级
        public const short MSG_REQUEST_CHANGE_HONOR = 429; // < 请求更换荣誉
        
        
        
        
        //////////////////////////////////////////////////////////////////////////
        // 发给聊天服务器的消息
        public const short MSG_CHAT_MESSAGE = 450; // 聊天消息
        public const short MSG_REQUEST_QUESTION = 451; // 玩家提问
        public const short MSG_QUESTION_CLOSED = 452; // 玩家关闭问题
        public const short MSG_REQUEST_OPEN_QUESTION = 453; // 玩家打开问题反馈界面
        public const short MSG_CHAT_TEST_PING = 454; // 聊天测试协议
        
        //////////////////////////////////////////////////////////////////////////
        // -----------------------------------------------------------------------/
        // /* client -> server, report to server                                     */
        // /* 需要gate转发的消息                                                      */
        // --------------------------------------------------------------------—--/
        public const short MSG_NEED_GATE_TRANSFER = 500; // 
        // 需要转发给GAME的消息
        public const short MSG_REQUEST_MOVE_FORWARD = 501; //  移动
        public const short MSG_REQUEST_STOP_MOVE = 502; //  停止移动
        public const short MSG_REQUEST_VALIDATE_POS = 503; // 
        public const short MSG_REQUEST_USE_SKILL = 504; //  请求使用技能
        public const short MSG_REQUEST_TANK_RELIVE = 505; //  请求坦克复活
        public const short MSG_REQUEST_STAT_LIST = 506; //  客户端请求坦克技术统计列表
        public const short MSG_REQUEST_BUY_LIFE = 507; //  客户端请求买活
        public const short MSG_REQUEST_OP_SPRAY = 508; //  请求喷图
        public const short MSG_REQUEST_TRY_BOOSTER = 509; //  请求试用小助手
        public const short MSG_REQUEST_EXIT_BATTLE = 510; //  客户端请求退出战场
        public const short MSG_REQUEST_AUTO_BULLET = 511; //  请求对鼠标指针方向自动释放一个子弹
        public const short MSG_REQUEST_SIGNAL_INFO = 512; //  客户端请求信号机制
        public const short MSG_REQUEST_SURRENDER_VOTATION = 513; //  请求发起投降表决
        public const short MSG_SET_SURRENDER_DECISION = 514; //  设置玩家自己的投降信息
        public const short MSG_ROUTE_TO_GAME_END = 515; //  发给GAME的消息结束
        
        //////////////////////////////////////////////////////////////////////////
        // 需要转发给TRACK的消息
        public const short MSG_ROUTE_TO_TRACK = 550; // 
        public const short MSG_REQUEST_OPEN_TURNUP = 551; //  请求翻牌
        public const short MSG_REQUEST_ENTER_BATTLE = 552; //  客户端数据加载完成请求进入战场
        public const short MSG_IMPEACH_BAD_PLAYER = 553; //  举报玩家
        public const short MSG_REQUEST_RLTE_AWARD_LIST = 554; //  请求轮盘赌的近期获奖列表
        public const short MSG_REQUEST_SERVER_CHARGE_INFO = 555; //  请求每日充值信息
        public const short MSG_ACTIVITY_BOSS_OPEN_UI = 556; //  打开世界boss活动UI
        public const short MSG_ACTIVITY_BOSS_CLOSE_UI = 557; //  关闭世界boss活动UI
        public const short MSG_REQUEST_PVE_RECORD = 558; //  请求PVE通关记录信息
        public const short MSG_REQUEST_SET_BATTLE_MODE = 559; //  请求设置匹配模式
        public const short MSG_REQUEST_SVR_AWARD_LIST = 560; //  请求svr_award的近期获奖列表
        
        // 联赛相关消息
        public const short MSG_SELECT_MATCH_RACE = 561; //  战队选择参战赛事
        public const short MSG_REQUEST_CHALLENGE_LIST = 562; //  请求约战列表
        public const short MSG_REQUEST_CHALLENGE_TEAM = 563; //  请求约战
        public const short MSG_REQUEST_TEAM_MATCH_START = 564; //  请求开始战队排位赛
        public const short MSG_LEAGUE_START_PAIR = 565; //  请求开始联赛匹配
        public const short MSG_LEAGUE_STOP_PAIR = 566; //  请求停止联赛匹配
        public const short MSG_TEAM_MATCH_START_PAIR = 567; //  请求开始战队赛匹配
        public const short MSG_TEAM_MATCH_STOP_PAIR = 568; //  请求停止战队赛匹配
        public const short MSG_REQUEST_LEAGUE_TEAM_QUIZ = 569; //  请求押注邀请赛队伍
        public const short MSG_REQUEST_DECIDE_MATCH_WINNER = 570; //  请求设定邀请赛比赛结果
        
        // 军团赛相关
        public const short MSG_GUILD_MATCH_START_PAIR = 571; //  请求开始军团赛匹配
        public const short MSG_GUILD_MATCH_STOP_PAIR = 572; //  请求停止军团赛匹配
        
        // 助手挑战赛相关
        public const short MSG_REQUEST_CLEAR_BOOSTER_COOL_TIME = 573; // < 请求清空助手挑战赛冷却时间
        public const short MSG_REQUEST_BUY_BST_ENTER = 574; // < 请求购买助手赛进入次数
        
        
        // 房间相关协议
        public const short MSG_REQUEST_CREATE_ROOM = 600; //  创建房间
        public const short MSG_REQUEST_JOIN_ROOM = 601; //  加入房间
        public const short MSG_REQUEST_ROOM_OP = 602; //  客户端请求房间操作
        public const short MSG_SET_ROOM_MAP = 603; //  切磋模式请求选择地图
        public const short MSG_REQUEST_PLAYER_LIST = 604; //  客户端请求玩家列表
        public const short MSG_SYNC_LOAD_DELAY = 605; //  同步客户端加载进度和网络延迟
        public const short MSG_REQUEST_CHAR_STATE = 606; //  客户端查询玩家状态
        public const short MSG_REQUEST_IN_HALL = 607; //  通知进入游戏大厅
        public const short MSG_REQUEST_OUT_HALL = 608; //  通知离开游戏大厅
        public const short MSG_REJECT_ROOM_INVITE = 609; //  拒绝房间邀请
        public const short MSG_REQUEST_START_MATCH = 610; //  请求开始
        public const short MSG_REQUEST_STOP_MATCH = 611; //  请求停止赛配对
        public const short MSG_REQUEST_LOOK_SCENE = 612; //  通过战场id请求观战
        public const short MSG_REQUEST_EXIT_BATTLEEND = 613; //  请求退出战斗结算
        public const short MSG_REQUEST_LOCK_TANK = 614; //  选坦克阶段玩家锁定坦克
        public const short MSG_REQUEST_LOOK_ROOM = 615; //  加入房间观战
        public const short MSG_REQUEST_OTHER_GUILD_MATCH_ROOM_INFO = 616; //  请求军团赛本军团其他房间信息
        public const short MSG_REQUEST_SWITCH_GUILD_ROOM = 617; //  请求切换军团赛房间
        
        public const short MSG_ROUTE_TO_TRACK_END = 618; //  发给TRACK的消息结束
        //////////////////////////////////////////////////////////////////////////
        // 需要转发给guild的消息
        public const short MSG_ROUTE_TO_GUILD = 650; // 
        // 战队相关协议
        public const short MSG_REQUEST_JOIN_GUILD = 651; //  请求加入军团
        public const short MSG_REQUEST_GUILD_INVITE = 652; //  发送军团邀请
        public const short MSG_REQUEST_LEAVE_GUILD = 653; //  请求离开军团
        public const short MSG_REQUEST_GUILD_KICKOUT = 654; //  请求踢出军团
        public const short MSG_REQUEST_CHANGE_POST = 655; //  请求更换职务
        public const short MSG_REQUEST_GUILD_OP = 656; //  请求军团操作
        public const short MSG_REQUEST_JOIN_GUILD_APPLY = 657; //  请求发送加入军团申请
        public const short MSG_REQUEST_GUILD_APPLY_LIST = 658; //  请求军团申请列表
        public const short MSG_REQUEST_APPROVE_APPLY = 659; //  请求同意战队申请
        public const short MSG_REQUEST_REJECT_APPLY = 660; //  请求拒绝战队申请
        public const short MSG_REQUEST_GUILD_UPGRADE = 661; //  请求军团升级
        public const short MSG_REQUEST_SET_CHANNEL = 662; //  请求设置YY频道号
        public const short MSG_REQUEST_SET_NOTICE = 663; //  请求设置公告
        public const short MSG_REQUEST_SET_RECRUIT_NOTICE = 664; //  请求设置招募宣言
        public const short MSG_REQUEST_TEAM_MEMBER = 665; //  请求刷新成员信息
        public const short MSG_REQUEST_DELETE_TEAM = 666; //  请求解散战队
        public const short MSG_REQUEST_IN_GUILD_UI = 667; //  请求进入军团界面
        public const short MSG_REQUEST_OUT_GUILD_UI = 668; //  请求离开军团界面
        public const short MSG_REQUEST_GUILD_MOVE_MEMBER = 669; //  请求团员移队
        public const short MSG_REQUEST_GUILD_INVITE_MEMBER = 670; //  请求邀请团员
        public const short MSG_REQUEST_ACCEPT_CHANGE_TEAM = 671; //  接受转队邀请
        public const short MSG_REQUEST_CHANGE_TEAM_PVE_FLAG = 672; //  请求开启或者关闭战队副本
        public const short MSG_REQUEST_RESEARCH_GUILD_SKILL = 673; //  请求进行军团技能的研究
        public const short MSG_LEAGUE_REQUEST_ENROLL = 674; //  请求报名到某个赛事
        public const short MSG_LEAGUE_REQUEST_AWARD = 675; //  请求领取某个阶段的奖励
        
        public const short MSG_ROUTE_TO_GUILD_END = 676; //  发给guild的消息结束
        //////////////////////////////////////////////////////////////////////////
        // 需要转发给buddy的消息
        public const short MSG_ROUTE_TO_BUDDY = 700; // 
        public const short MSG_RELATION_REQUEST_ADD = 701; //  请求建立关系
        public const short MSG_RELATION_REQUEST_DELETE = 702; //  请求移除关系
        public const short MSG_REQUEST_BUDDY_BRIEF = 703; //  主动请求brief信息
        public const short MSG_SEND_SNS_REQUEST_KEY = 704; //  发送sns的请求key
        public const short MSG_REQUEST_FACEBOOK_INVITE = 705; //  请求邀请facebook好友
        public const short MSG_ACCEPT_FACEBOOK_INVITE = 706; //  接受facebook邀请进入游戏
        public const short MSG_REQUEST_QUICK_ADD_FRIEND = 707; //  请求快捷邀请好友
        //师徒相关协议
        public const short MSG_REQUEST_MP_SQUARE_LIST = 708; //  请求广场列表
        public const short MSG_REQUEST_APPLY_MP_RELATION = 709; //  申请建立师徒关系
        public const short MSG_APPROVE_MP_RELATION_APPLY = 710; //  同意师徒申请
        public const short MSG_REJECT_MP_RELATION_APPLY = 711; //  拒绝师徒申请
        public const short MSG_REQUEST_DELETE_SOCIAL_REL = 712; //  请求解除社交关系
        public const short MSG_REQUEST_MASTER_PRENTICE_AWARD = 713; //  请求领取师徒任务奖励
        public const short MSG_REQUEST_GRADUATE = 714; //  请求出师
        public const short MSG_REQUEST_CLEAR_MP_APPLY_LIST = 715; //  请求清空师徒申请列表
        public const short MSG_REQUEST_MP_APPLY_LIST = 716; //  请求师徒申请列表
        public const short MSG_REQUEST_ROOM_INVITE = 717; //  发送房间邀请
        public const short MSG_REQUEST_INVITE_GIFT_PLAYER_INVITE = 718; //  发送邀请好友玩家邀请
        public const short MSG_RESPONSE_INVITE_GIFT_PLAYER_INVITE = 719; //  回复邀请好友玩家邀请
        public const short MSG_REQUEST_REMOVE_INVITE_GIFT_PLAYER = 720; //  请求解除邀请好礼玩家关系
        
        public const short MSG_ROUTE_TO_BUDDY_END = 721; //  发给buddy的消息结束
        
        //////////////////////////////////////////////////////////////////////////
        // 需要转发给activity的消息
        public const short MSG_ROUTE_TO_ACTIVITY = 750; // 
        public const short MSG_REQUEST_DRAW_ONLINE_PEAK_AWARD = 751; // < 请求领取在线峰值活动奖励
        public const short MSG_REQUEST_RAND_STEP_SUPPORT_INFO = 752; // < 请求夺宝排行点赞信息
        
        public const short MSG_ROUTE_TO_ACTIVITY_END = 753; //  发给activity的消息结束
        public const short MSG_CLIENT_END = 754; // 
        
        //--------------------------------------------------------------------------------------------------------
        //监控工具相关
        //--------------------------------------------------------------------------------------------------------
        public const short MSG_SVR_MONITOR_START = 800; //  服务器状态监控相关协议
        public const short MSG_MONITOR_COMMAND = 801; //  本地使用，让网络层汇报统计数据
        public const short MSG_RUN_ROMOTE_COMMAND = 802; //  远程运行服务器指令请求
        public const short MSG_COMMAND_RESULT = 803; //  远程运行服务器指令结果
        public const short MSG_ADMIN_REGISTER = 804; //  服务器注册到监控后端
        public const short MSG_ADMIN_RESPONSE = 805; //  监控后端注册后答复
        
        public const short MSG_MANAGE_AUTH_REQUEST = 806; //  管理消息，认证请求
        public const short MSG_MANAGE_AUTH_RESULT = 807; //  管理消息，认证结果
        public const short MSG_MANAGE_REQUEST_OBJECT = 808; //  管理消息，获取各种类型的对象信息
        public const short MSG_MANAGE_GROUPLIST = 809; //  管理消息，返回区服列表
        public const short MSG_MANAGE_GROUPINFO = 810; //  管理消息，返回区服信息
        public const short MSG_MANAGE_PROCLIST = 811; //  管理消息，返回NODE列表
        public const short MSG_MANAGE_PROCINFO = 812; //  管理消息，返回NODE信息
        public const short MSG_MANAGE_REALMINFO = 813; //  管理消息，返回某个在AC中的帐号的详细信息
        public const short MSG_MANAGE_CONTROLCMD = 814; //  管理消息，控制命令
        public const short MSG_MANAGE_ACCMDRESULT = 815; //  管理消息，基本命令参数
        public const short MSG_NOTIFY_SVR_STARTUP_OK = 816; //  通知管理服务器, 服务器启动成功
        public const short MSG_ADMIN_REQUEST_LOGIN = 817; //  请求管理服务器版本验证
        public const short MSG_ADMIN_LOGIN_RESULT = 818; //  返回登陆请求结果
        
        // /*#######################################################################
        // #######################################################################*/
        public const short MSG_SERVER_START = 899; // 服务端协议的ID段
        // ----------------------------------------------------------------------/
        // /* 由认证服务器返回的消息 LOGINSVR -> CLIENT                             */
        // ----------------------------------------------------------------------/
        public const short MSG_AUTH_SVR_START = 900; // 
        public const short MSG_AUTH_LOGIN_OK = 901; // 认证前端->客户端：密码验证成功
        public const short MSG_AUTH_LOGIN_FAIL = 902; // 认证前端->客户端：密码验证错误
        public const short MSG_AUTH_VESION_OK = 903; // 认证前端->客户端：协议版本正确
        public const short MSG_AUTH_VESION_FAILED = 904; // 认证前端->客户端：协议版本错误
        
        public const short MSG_AUTH_PLAY_FAIL = 905; // 认证前端->客户端：登录区服失败
        public const short MSG_AUTH_SERVER_LIST = 906; // 认证前端->客户端：服务器列表
        
        public const short MSG_AUTH_SESSION_REQUESTCONFIRM = 907; // 认证前端->客户端：Session开始
        public const short MSG_AUTH_SESSION_REQUESTREJECT = 908; // 认证前端->客户端：Session开始被拒绝
        public const short MSG_AUTH_SESSION_CLOSECONFIRM = 909; // 认证前端->客户端：Session结束
        public const short MSG_AUTH_SESSION_CLOSEREJECT = 910; // 认证前端->客户端：Session结束被拒绝
        
        public const short MSG_AUTH_SWITCH_LINE_RESULT = 911; // 通知切换分线结果
        
        // ----------------------------------------------------------------------/
        // /* 网关GATESVR服务器发送的消息协议 GATESVR -> CLIENT                      */
        // ----------------------------------------------------------------------/
        public const short MSG_GATE_SVR_START = 1000; // 
        public const short MSG_AUTH_SESSION_INTERRUPTED = 1001; // 网关->客户端：Session被中断
        public const short MSG_GATE_SYSTEM_HEARTBEAT = 1002; // 心跳消息
        public const short MSG_GATE_NOTIFY_PING = 1003; //  GATESVR返回ping值
        public const short MSG_WORLD_LOGOUT_NOTIFY = 1004; //  通知客户端正在取
        public const short MSG_WORLD_ENTER_CONFIRM = 1005; //  角色确认进入游戏世界
        public const short MSG_WORLD_ENTER_REJECTED = 1006; //  角色进入游戏世界被拒绝
        public const short MSG_WORLD_LOGOUT_CONFIRM = 1007; //  角色退出游戏世界确认
        public const short MSG_CHAR_PICKAPPROVED = 1008; //  选定角色进入成功
        public const short MSG_CHAR_PICKREJECTED = 1009; //  选定角色被拒绝
        public const short MSG_SERVER_LOGOUT_CONFIRMED = 1010; //  GATE退出确认
        
        //角色相关
        public const short MSG_NOTIFY_CHAR_CREATE = 1011; // 角色不存在，通知创建新角色
        public const short MSG_CHARCREATE_APPROVED = 1012; // 角色创建成功
        public const short MSG_CHARCREATE_REJECTED = 1013; // 角色创建失败
        public const short MSG_NOTIFY_CHAR_LIST = 1014; //  通知角色列表
        public const short MSG_CHAR_NAME_UNIQUE_RESULT = 1015; //  通知名称唯一性验证的结果
        public const short MSG_NOTIFY_CHAR_DATA = 1016; //  返回角色基本信息
        public const short MSG_NOTIFY_BACK_TO_MAIN = 1017; //  通知客户端退回主界面
        public const short MSG_NOTIFY_DRAW_AWARD_RESULT = 1018; //  通知奖励领取结果
        public const short MSG_NOTIFY_ADD_LEVEL = 1019; //  通知升级
        public const short MSG_NOTIFY_CHAR_EXP = 1020; //  更新角色经验
        public const short MSG_NOTIFY_OPTION_TIME = 1021; //  更新角色功能时间戳
        public const short MSG_NOTIFY_USE_SPRAY = 1022; //  通知更换喷图成功
        public const short MSG_NOTIFY_USE_AVATAR = 1023; //  通知使用avatar
        public const short MSG_NOTIFY_FIZZ = 1024; //  通知活跃度
        public const short MSG_NOTIFY_DYNAMIC_CONFIG = 1025; //  通知动态配置信息
        public const short MSG_NOTIFY_RENAME_RET = 1026; //  通知改名的结果
        public const short MSG_NOTIFY_THEW = 1027; //  通知活跃度
        public const short MSG_NOTIFY_HONOR = 1028; //  通知玩家选定的荣誉
        public const short MSG_NOTIFY_HONOR_LIST = 1029; //  通知荣誉列表
        public const short MSG_NOTIFY_ROULETTE_COUNT = 1030; //  通知转轮盘的数量
        public const short MSG_NOTIFY_FIRST_CHARGE = 1031; //  通知是否已经进行首充
        public const short MSG_NOTIFY_GUILD_GIFT_TIME = 1032; //  通知领取军团礼包的最后时间
        public const short MSG_NOTIFY_CHAR_PROTECT_PWD = 1033; //  通知角色2级密保信息
        public const short MSG_NOTIFY_PROTECT_PWD_OP_RESULT = 1034; //  通知2级密保操作结果
        public const short MSG_NOTIFY_NEED_CHECK_PROTECT_PWD = 1035; //  通知客户端需要验证2级密保
        public const short MSG_NOTIFY_SYNC_SETTING = 1036; //  通知同步系统设置
        public const short MSG_NOTIFY_UPDATE_GROCERY_ADD = 1037; //  通知杂货栏额外格子数
        public const short MSG_NOTIFY_DRAW_GIFT_RESULT = 1038; //  通知礼包领取结果
        public const short MSG_CHAR_CURRENCYACTION = 1039; //  Server->Client 通知角色货币操作以及余额情况
        public const short MSG_CHAR_CURRENCY_NOTIFY_RMB_RATE = 1040; //  通知rmb数量以及汇率
        public const short MSG_BUY_GOODS_OK_NOTIFY = 1041; //  通知商城购买成功
        public const short MSG_BUY_GOODS_REJECT = 1042; //  拒绝购买商品
        public const short MSG_CHARGE_DONE = 1043; //  通知充值到帐
        public const short MSG_CHAR_GUIDE_PROGRESS = 1044; //  通知角色新手引导的当前进度
        public const short MSG_NOTIFY_LIMIT_INFO = 1045; //  通知初始化、更新限制信息
        public const short MSG_NOTIFY_CHAR_GIFT = 1046; //  通知玩家礼包信息
        public const short MSG_NOTIFY_CHAR_OPTION = 1047; //  通知角色客户端系统设置
        public const short MSG_NOTIFY_OBSERVER_PLAYER_GATE = 1048; //  通知附身玩家Gate信息
        public const short MSG_NOTIFY_VIP_CHANGE = 1049; //  通知VIP变化信息
        public const short MSG_NOTIFY_QQ_VIP = 1050; //  通知qq黄钻蓝钻信息
        public const short MSG_NOTIFY_SHOW_QQ_BLUE_VIP_RENEW = 1051; //  通知显示蓝钻续费图标
        public const short MSG_NOTIFY_SUPER_VIP_CHARGE_INFO = 1052; //  通知超级VIP充值记录信息
        public const short MSG_NOTIFY_DRAW_SUPER_VIP_CHARGE_BACK = 1053; //  通知超级VIP充值记录信息
        public const short MSG_APEX_SEND2CLIENT = 1054; // < 由 gate server 发送给 game client 的 Apex 消息
        public const short MSG_NOTIFY_RELOAD_TEMPLATE = 1055; // < 通知客户端重新加载模板数据
        public const short MSG_NOTIFY_BATTLE_BOOSTER = 1056; // < 通知角色主战助手UUID
        
        // 物品相关
        public const short MSG_NOTIFY_ITEM_LIST = 1100; //  通知物品信息
        public const short MSG_ITEM_SWAP_OK = 1101; //  物品移动成功
        public const short MSG_UPDATE_ITEM_INSTANCE = 1102; //  更新物品信息
        public const short MSG_NOTIFY_ITEM_DELETE = 1103; //  通知删除物品
        public const short MSG_NOTIFY_SETTLE_AWARD = 1104; //  通知奖励信息
        public const short MSG_NOTIFY_TICKET_ITEM_RET = 1105; //  通知使用月票的返回结果
        public const short MSG_NOTIFY_BOOSTER_OP_RET = 1106; //  通知助手操作结果
        public const short MSG_NOTIFY_ROULETTE_RET = 1107; //  通知轮盘赌的结果
        public const short MSG_NOTIFY_STORE_MERCHANDISE = 1108; //  商店商品消息
        public const short MSG_CONFIRM_STORE_PURCHASE = 1109; //  确认商品购买的成功确认
        public const short MSG_NOTIFY_QQ_BUY_GOODS = 1110; //  通知qq商城购买
        public const short MSG_NOTIFY_STORE_BRIEF = 1111; //  通知商店简要信息
        public const short MSG_NOTIFY_STORE_ENABLE_SUCCEED = 1112; //  通知商店开启成功
        public const short MSG_NOTIFY_CLIENT_USE_ITEM_FAILED = 1113; //  通知客户端使用物品失败
        
        // 战斗外坦克相关
        public const short MSG_NOTIFY_TANK_LIST = 1150; //  通知坦克信息
        public const short MSG_UPDATE_TANK_INSTANCE = 1151; //  更新坦克信息
        public const short MSG_NOTIFY_TANK_DELETE = 1152; //  通知删除坦克
        public const short MSG_NOTIFY_TANK_OP_FAIL = 1153; //  通知坦克操作失败（不是条件失败，概率成功的失败）
        public const short MSG_NOTIFY_TANK_TRY = 1154; //  通知试用坦克(废弃)
        public const short MSG_TANK_SKILL_UPGRADE_OK = 1155; //  通知客服端坦克技能升级成功
        public const short MSG_TANK_SKILL_UPGRADE_FAIL = 1156; //  通知客户端坦克技能升级失败
        public const short MSG_NOTIFY_REFRESH_HIRE_TANK_CONFIG = 1157; //  通知客户端更新坦克租用配置
        public const short MSG_NOTIFY_RECEIVE_PRESENT_HIRE_TANK = 1158; //  通知客户端获得其他玩家赠送的租用坦克
        public const short MSG_NOTIFY_PRESENT_HIRE_TANK_OK = 1159; //  通知客户端赠送玩家租用坦克成功
        public const short MSG_NOTIFY_USE_TANK_HALO_RESULT = 1160; //  通知使用坦克光环的结果
        public const short MSG_NOTIFY_TANK_HALO_INFO = 1161; //  通知坦克光环过期或者获得的信息
        public const short MSG_NOTIFY_REPEAT_GIVE_TANK = 1162; //  通知客户端重复获得坦克
        public const short MSG_NOTIFY_TANK_SKIN_CHIP_INFO = 1163; //  通知坦克皮肤碎片进度信息
        public const short MSG_NOTIFY_TANK_SKIN_CHIP_RESULT = 1164; //  通知购买坦克皮肤碎片的结果
        public const short MSG_NOTIFY_GET_TANK_SKIN_RESULT = 1165; //  通知皮肤碎片兑换坦克皮肤的结果
        public const short MSG_NOTIFY_TANK_RESEARCH_INFO = 1166; //  通知坦克研究信息
        public const short MSG_NOTIFY_TANK_RESEARCH_RESULT = 1167; //  通知研究结果
        public const short MSG_NOTIFY_RECYCLE_TANK_RESEARCH_RESULT = 1168; //  通知兑换坦克研究的结果
        public const short MSG_NOTIFY_GET_RESEARCH_TANK_RESULT = 1169; //  通知换取坦克的结果
        public const short MSG_NOTIFY_MAKE_TANK_INFO = 1170; //  通知坦克制造信息
        public const short MSG_NOTIFY_TANKPART_INFO = 1171; //  通知坦克部件信息
        public const short MSG_NOTIFY_TANKPART_SCORE = 1172; //  通知坦克部件总评分
        public const short MSG_NOTIFY_TREASURE_RECOVERY_RESULT = 1173; //  通知一元夺宝回收结果
        
        
        // 邮件相关
        public const short MSG_NOTIFY_MAIL_NOREAD_COUNT = 1200; //  通知有未读邮件
        public const short MSG_NOTIFY_MAIL_LIST = 1201; //  通知邮件列表
        public const short MSG_NOTIFY_MAIL_INSIDE_INFO = 1202; //  通知邮件的详细信息
        public const short MSG_NOTIFY_MAIL_OP_RET = 1203; //  通知邮件操作结果
        public const short MSG_NOTIFY_UPDATE_MAIL_INFO = 1204; //  通知更新邮件信息
        
        // 任务成就相关
        public const short MSG_NOTIFY_QUEST_LIST = 1250; //  通知任务信息
        public const short MSG_NOTIFY_QUEST_INFO = 1251; //  更新单个玩家任务信息
        public const short MSG_NOTIFY_DELETE_QUEST = 1252; //  删除任务信息
        public const short MSG_NOTIFY_COMPLETE_QUEST = 1253; //  通知完成任务
        public const short MSG_NOTIFY_COMPLETE_QUEST_FAIL = 1254; //  通知完成任务失败
        public const short MSG_NOTIFY_ACEM_INFO = 1255; //  更新单个成就信息
        public const short MSG_NOTIFY_ACEM_LIST = 1256; //  通知成就信息
        public const short MSG_NOTIFY_SWITCH_QUEST = 1257; //  通知切换任务
        public const short MSG_NOTIFY_OPEN_UI = 1258; //  通知玩家打开界面
        
        // PVE相关的
        public const short MSG_PVE_CHAPTER_SCENES = 1300; //  通知客户端，返回玩家的章节列表信息
        public const short MSG_REJECT_SELECT_SCENE = 1301; //  通知客户端，拒绝玩家打开某个关卡
        public const short MSG_NOTIFY_SCENE_SCORES = 1302; //  通知客户端，通关评价的成绩
        public const short MSG_NOTIFY_CITY_INIT = 1303; //  通知客户端，城市初始值
        public const short MSG_UPDATE_CITY_INFO = 1304; //  通知客户端，更新城市信息
        public const short MSG_NOTIFY_SOLO_SWEEP_AWARD = 1305; //  通知客户端，扫荡结果
        public const short MSG_NOTIFY_STAGE_REWARD = 1306; //  通知阶段性奖励领取信息
        public const short MSG_NOTIFY_STAGE_REAP_RESULT = 1307; //  通知奖励领取结果
        public const short MSG_NOTIFY_STAGE_CLEARED = 1308; //  通知奖励已经全部领取完成
        public const short MSG_NOTIFY_STAGE_PROGRESS = 1309; //  通知阶段奖励的进度
        
        // 军团相关
        public const short MSG_NOTIFY_GUILD_SKIL_SLOT_INFO = 1350; //  通知角色军团技能槽信息
        public const short MSG_NOTIFY_CHAR_GUILD_SKILL_INFO = 1351; // 通知角色的军团技能信息
        public const short MSG_NOTIFY_GUILD_BOSS_AWARD = 1352; // 通知军团BOSS奖励信息
        
        // 活动相关
        public const short MSG_NOTIFY_SIGN_IN_INFO = 1400; // < 通知角色签到信息
        public const short MSG_NOTIFY_SERVER_LOGIN_CONFIG = 1401; // < 通知服务器登陆配置信息
        public const short MSG_NOTIFY_SEND_REDPACKET_SUCC = 1402; //  通知发红包成功
        public const short MSG_NOTIFY_ROB_REDPACKET_SUCC = 1403; //  通知抢红包成功
        public const short MSG_NOTIFY_REDPACKET_LOG = 1404; //  通知红包历史记录
        public const short MSG_NOTIFY_OPEN_CHEST = 1405; //  通知开宝箱成功
        public const short MSG_NOTIFY_CLIENT_FREE_WEEK_TANK = 1406; //  通知玩家周免坦克信息
        public const short MSG_NOTIFY_RECOMMEND_TANK = 1407; //  通知玩家推荐坦克
        public const short MSG_NOTIFY_RAND_STEP = 1408; //  通知夺宝
        public const short MSG_NOTIFY_EXPEDITION_INFO = 1409; //  通知远征信息
        public const short MSG_NOTIFY_INVITE_SPREAD_PLAYER_INFO = 1410; //  通知邀请推广信息
        public const short MSG_NOTIFY_FUND_INFO = 1411; //  通知基金信息
        public const short MSG_NOTIFY_ITEM_CLOUD_PURCHASE_TANK_INFO = 1412; //  通知云购坦克信息
        public const short MSG_NOTIFY_BOOSTER_COMP_INFO = 1413; // < 通知助手挑战赛角色信息
        public const short MSG_NOTIFY_BOOSTER_BATTLE_RESULT = 1414; // < 通知助手挑战赛对战结果
        public const short MSG_NOTIFY_BOOSTER_BATTLE_HISTORY = 1415; // < 通知助手赛历史记录
        public const short MSG_NOTIFY_BOOSTER_COMP_YESTERDAY_AWARD_INFO = 1416; // < 通知助手赛昨日奖励信息
        public const short MSG_NOTIFY_BOOSTER_COMP_NOW_AWARD_INFO = 1417; // < 通知助手竞技赛实时奖励信息
        public const short MSG_NOTIFY_NEW_SIGN_IN_INFO = 1418; // < 通知新版角色签到信息
        
        //属性相关
        public const short MSG_NOTIFY_UPDATE_TALENT_PAGE = 1450; //  通知更新天赋页
        public const short MSG_NOTIFY_OP_TALENT_PAGE = 1451; //  通知天赋页操作
        public const short MSG_NOTIFY_TALENT_INFO = 1452; //  通知天赋信息
        public const short MSG_NOTIFY_TALENT_TOTALPOINT = 1453; //  通知天赋总可用点数
        public const short MSG_NOTIFY_CRYSTAL_SCHEME_INFO = 1454; //  通知晶片组合信息
        public const short MSG_NOTIFY_CRYSTAL_SCHEME_NAME = 1455; //  通知晶片名信息
        public const short MSG_NOTIFY_SAVE_CRYSTAL_SCHEME_INFO_RESULT = 1456; //  通知晶片晶片组合修改信息
        public const short MSG_NOTIFY_CHANGE_CRYSTAL_SCHEME_NAME_RESULT = 1457; //  通知晶片名修改结果
        public const short MSG_NOTIFY_CUR_CRYSTAL_SCHEME_ID = 1458; //  通知当前晶片方案ID
        public const short MSG_NOTIFY_UPGRADE_CRYSTAL_RESULT = 1459; //  通知晶片升阶结果
        public const short MSG_NOTIFY_YCARD_INFO = 1460; //  通知佣兵卡信息
        
        
        
        // ----------------------------------------------------------------------/
        // /* 由GATESVR转发给客户端的协议  OTHERSVR -> GATESVR -> CLIENT            */
        // ----------------------------------------------------------------------/
        public const short MSG_GATE_TRANSFER_TO_CLIENT = 1500; // 
        
        //通用的系统消息
        public const short MSG_SYSTEM_ERRORMESSAGE = 1501; //  系统错误消息
        public const short MSG_WORLD_DISCONNECTED = 1502; //  游戏世界已经断开
        public const short MSG_WORLD_ENTER_TRACK_CONFIRM = 1503; //  tracksvr确认登入游戏成功
        
        public const short MSG_GAME_NOTIFY_PING = 1504; //  GameSvr返回ping值
        public const short MSG_NOTIFY_HOST_URL = 1505; //  通知服务器的url地址
        
        public const short MSG_NOTIFY_TURNUP_RESULT = 1506; //  通知翻牌结果
        public const short MSG_NOTIFY_TURNUP_END = 1507; //  通知翻牌结束
        public const short MSG_NOTIFY_BUDDY_BRIEF = 1508; //  通知相关的brief信息
        public const short MSG_UPDATE_BUDDY_BRIEF = 1509; //  通知更新brief信息
        public const short MSG_NOTIFY_USE_ITEM = 1510; //  通知使用物品
        public const short MSG_NOTIFY_NOT_TYRO = 1511; //  通知玩家已经通过新手
        public const short MSG_NOTIFY_IMPEACH_RET = 1512; //  通知玩家举报结果
        public const short MSG_NOTIFY_IMPEACH_CHECK = 1513; //  通知被举报了，需要验证
        public const short MSG_NOTIFY_ACTION_FLAG = 1514; //  通知行为开启信息
        public const short MSG_NOTIFY_RLTE_AWARD_LIST = 1515; //  通知轮盘赌的近期获奖列表
        public const short MSG_NOTIFY_RENEW_ELO_TIME = 1516; //  通知客户端elo赛季刷新时间戳
        public const short MSG_NOTIFY_PVE_RECORD = 1517; //  通知副本记录
        public const short MSG_NOTIFY_PASS_PVE = 1518; //  通知副本通关信息
        public const short MSG_NOTIFY_HERO_ENTER_COUNT = 1519; //  通知客户端英雄副本进入次数信息
        public const short MSG_NOTIFY_SERVER_CHARGE_INFO = 1520; //  通知每日充值数额
        public const short MSG_NOTIFY_AFK_STATUS = 1521; //  通知挂机检测状态
        public const short MSG_NOTIFY_SET_BATTLE_MODE = 1522; //  通知设置匹配模式
        public const short MSG_NOTIFY_DRAW_GOLDEN_POOL_RESULT = 1523; //  通知金币池领取结果
        public const short MSG_NOTIFY_AFK_WARNING = 1524; //  通知触发不良记录提示玩家
        public const short MSG_NOTIFY_SVR_AWARD_LIST = 1525; //  通知svr_award近期获奖列表
        
        // 坦克/战斗相关
        public const short MSG_NOTIFY_SELF_DATA = 1550; //  返回自身坦克数据
        public const short MSG_NOTIFY_OTHER_LIST = 1551; //  返回其他人的坦克数据
        public const short MSG_NOTIFY_ADD_TANK = 1552; //  通知客户端有新坦克进入
        public const short MSG_NOTIFY_TANK_RELIVE = 1553; //  通知坦克复活等待时间
        public const short MSG_NOTIFY_STOP_MOVE = 1554; //  停止移动
        public const short MSG_NOTIFY_SCENE_OBJECT = 1555; //  通知战场对象数据
        public const short MSG_NOTIFY_ADD_OBJECT = 1556; //  通知新建对象数据
        public const short MSG_NOTIFY_REMOVE_OBJECT = 1557; //  通知删除对象数据
        public const short MSG_NOTIFY_ADD_BUFF = 1558; //  通知坦克获得buff
        public const short MSG_NOTIFY_REMOVE_BUFF = 1559; //  通知坦克失去buff
        public const short MSG_UPDATE_TANK_ATTR = 1560; //  通知更新坦克数据
        public const short MSG_NOTIFY_SCENE_STAT = 1561; //  通知坦克战场统计数据
        public const short MSG_UPDATE_BULLET_ORBIT = 1562; //  同步炮弹轨迹
        public const short MSG_NOTIFY_AIRDROP_PROP = 1563; //  通知表现空投物品
        public const short MSG_SYNC_SCENE_DATA = 1564; //  战场数据同步
        public const short MSG_SYNC_OCCUPY_DATA = 1565; //  同步争夺点占领信息
        public const short MSG_NOTIFY_KILL_INFO = 1566; //  通知击杀信息
        public const short MSG_UPDATE_TANK_COIN = 1567; //  通知更新坦克金钱变化
        public const short MSG_UPDATE_TANK_STAT_INFO = 1568; //  主动更新技术统计
        public const short MSG_NOTIFY_OP_SPRAY = 1569; //  通知喷图成功
        public const short MSG_NOTIFY_OVERTIME_START = 1570; //  通知加时赛开始
        public const short MSG_AWARD_NOTIFY_TURNUP_BEGIN = 1571; //  通知翻牌开始
        public const short MSG_SYNC_SKILL_COOLTIME = 1572; //  同步技能冷却时间
        public const short MSG_UPDATE_SCENE_ONE_STAT = 1573; //  更新战场单向技术统计（含所有坦克）
        public const short MSG_UPDATE_TANK_SCORE = 1574; //  更新某辆坦克的得分
        public const short MSG_NOTIFY_DROP_ITEM = 1575; //  通知掉落物品
        public const short MSG_NOTIFY_BUY_LIFE_INFO = 1576; //  通知买活或者买命信息
        public const short MSG_NOTIFY_END_ONHAND = 1577; //  通知战斗即将结算
        public const short MSG_NOTIFY_OBJ_THROW = 1578; //  通知对象被投掷
        public const short MSG_NOTIFY_CHANGE_SLOT_SKILL = 1579; //  通知切换技能槽的技能
        public const short MSG_NOTIFY_SCENE_TALK = 1580; //  通知显示战场（AINPC等）对话
        public const short MSG_NOTIFY_BUFF_UPDATE_TIME = 1581; //  通知自身更新BUFF时间
        public const short MSG_NOTIFY_TEAMMATE_CD = 1582; //  通知队友大招CD（断线重连时）
        public const short MSG_NOTIFY_SKILL_STOP = 1583; //  通知客户端技能停止
        public const short MSG_NOTIFY_FORCE_DATA = 1584; //  通知客户端怒气值
        public const short MSG_NOTIFY_BATTLE_EXP = 1585; //  通知客户端战场经验
        public const short MSG_NOTIFY_ENTER_BATTLE = 1586; //  通知进入战场
        public const short MSG_NOTIFY_AINPC_WAVE = 1587; //  通知客户端，击杀AINPC的波次
        public const short MSG_NOTIFY_TANK_DEAD = 1588; //  通知坦克死亡
        public const short MSG_SYNC_PORTAL_DATA = 1589; //  通知客户端传送门信息
        public const short MSG_NOTIFY_AUTO_BULLET = 1590; // 通知客户端对鼠标指针方向自动释放一个子弹
        public const short MSG_NOTIFY_PLAY_YCARD_ANIMATION = 1591; //  通知播放佣兵卡出场动画
        public const short MSG_NOTIFY_BATTLE_QUEST_INFO = 1592; //  通知玩家战场任务信息
        public const short MSG_NOTIFY_BATTLE_QUEST_BULLETIN = 1593; //  通知战场任务公告
        public const short MSG_NOTIFY_SIGNAL_INFO = 1594; //  通知战场信号信息
        public const short MSG_NOTIFY_TANK_BATTLE_LEVEL = 1595; //  通知客户端坦克战场等级
        public const short MSG_UPDATE_AINPC_MAXHP = 1596; //  通知客户端更新AINPC血上限
        public const short MSG_NOTIFY_SHOW_SURRENDER_VOTATION = 1597; //  通知开启投降表决
        public const short MSG_UPDATE_VOTATION_INFO = 1598; //  通知更新投降表决信息
        public const short MSG_NOTIFY_SURRENDER_VOTATION_COOL_TIME = 1599; //  通知投降冷却时间
        
        public const short MSG_GAME_TO_CLIENT_END = 1600; //  战斗相关协议段结尾
        // 房间相关
        public const short MSG_ENTER_ROOM_OK = 1700; //  成功进入房间，通知房间信息
        public const short MSG_NOTIFY_ROOM_OP = 1701; //  通知房间操作结果
        public const short MSG_NOTIFY_ROOM_ADD = 1702; //  通知客户端，有新角色加入房间
        public const short MSG_NOTIFY_PLAYER_LIST = 1703; //  通知客户端，玩家列表
        public const short MSG_NOTIFY_ROOM_MAP = 1704; //  通知切磋地图
        public const short MSG_NOTIFY_START_GAME = 1705; //  成功进入房间，开始游戏
        public const short MSG_NOTIFY_MIDWAY_JOIN = 1706; //  中途玩家进入
        public const short MSG_NOTIFY_EXIT_BATTLE = 1707; //  通知退出战场
        public const short MSG_NOTIFY_BATTLE_END = 1708; //  通知客户端，战斗结束
        public const short MSG_NOTIFY_LOADED_RATE = 1709; //  通知客户端，加载进度和延迟
        public const short MSG_NOTIFY_CAMP_KILLNUM = 1710; //  通知客户端，阵营击杀数量
        public const short MSG_NOTIFY_ROOM_CHAR_CHANGE = 1711; //  通知客户端，同步房间内角色信息发生变化
        public const short MSG_ADD_PLAYER_LIST = 1712; //  通知客户端，游戏大厅列表添加
        public const short MSG_DEL_PLAYER_LIST = 1713; //  通知客户端，游戏大厅列表删除
        public const short MSG_UPDATE_PLAYER_LIST = 1714; //  通知客户端，游戏大厅列表等级更新
        public const short MSG_NOTIFY_ROOM_INVITE = 1715; //  通知客户端，房间邀请
        public const short MSG_NOTIFY_CHAR_STATE = 1716; //  通知玩家房间状态
        public const short MSG_NOTIFY_KICKOUT_COUNTDOWN = 1717; //  通知玩家房间踢人倒计时
        public const short MSG_CLEAR_KICKOUT_COUNTDOWN = 1718; //  通知清除房间踢人倒计时
        public const short MSG_NOTIFY_START_MATCH = 1719; //  通知开始配对倒计时
        public const short MSG_NOTIFY_STOP_MATCH = 1720; //  通知停止配对倒计时
        public const short MSG_NOTIFY_PAIR_SCENE = 1721; //  通知客户端，通知匹配赛开始
        public const short MSG_NOTIFY_SCENE_CHANGE_CAMP = 1722; //  通知客户端，切换阵营
        public const short MSG_NOTIFY_EXIT_BATEND_COUNT = 1723; //  通知客户端，通知退到队伍的人数
        public const short MSG_NOTIFY_HALL_DISPLAY_LIST = 1724; //  通知客户端大厅显示列表
        public const short MSG_NOTIFY_ROOM_BUFF = 1725; //  通知房间buff信息
        public const short MSG_NOTIFY_ROOM_PAIR_OPTION = 1726; //  通知房间匹配选项
        public const short MSG_NOTIFY_TANK_SELECT = 1727; //  通知匹配选坦克阶段，坦克被选取
        public const short MSG_NOTIFY_TANK_LOCKED = 1728; //  通知玩家匹配选坦克阶段，坦克被锁定
        public const short MSG_NOTIFY_NEED_ROOM_PASSWORD = 1729; //  通知客户端，进入房间需要密码
        public const short MSG_CLEAR_ALL_TEAM_PLACE = 1730; //  guild->track 通知清除所有战队名次
        public const short MSG_NOTIFY_CAMP_OCCUPY_SCORE = 1731; //  通知客户端，占领总积分
        public const short MSG_NOTIFY_CAMP_OCCUPY_ADD_SCORE = 1732; //  通知客户端，占领单次增加积分
        public const short MSG_NOTIFY_CAMP_WIN_ROUND = 1733; //  通知客户端，胜利回合数
        public const short MSG_NOTIFY_NEW_ROUND_START = 1734; //  通知客户端，新回合开始
        public const short MSG_NOTIFY_CAMP_ADD_WIN_ROUND = 1735; //  通知客户端，胜利回合数增加数
        public const short MSG_NOTIFY_DEAD_MODE_ALIVE_CNT = 1736; //  通知客户端，死亡模式双方存活人数
        public const short MSG_NOTIFY_TEAM_ROOM_IN_OTHER_LINE = 1737; //  通知玩家，战队房间在其他分线
        public const short MSG_NOTIFY_OTHER_GUILD_MATCH_ROOM_INFO = 1738; //  通知军团赛本军团其他房间信息
        public const short MSG_NOTIFY_TEAM_PVE_MAP_ID = 1739; //  通知组队副本地图ID
        public const short MSG_NOTIFY_COMMAND_SKILL_SELECT = 1740; //  通知选坦克阶段指挥官技能变化
        
        // 战队相关
        public const short MSG_NOTIFY_GUILD_INFO = 1800; //  通知军团信息
        public const short MSG_NOTIFY_LEAVE_GUILD = 1801; //  通知离开军团
        public const short MSG_NOTIFY_TEAM_KICKOUT = 1802; //  通知踢出战队
        public const short MSG_NOTIFY_DESTROY_GUILD = 1803; //  通知解散军团
        public const short MSG_NOTIFY_GUILD_INVITE = 1804; //  通知军团邀请
        public const short MSG_NOTIFY_JOIN_GUILD = 1805; //  通知有玩家加入军团
        public const short MSG_NOTIFY_CHANGE_POST = 1806; //  通知职务变化
        public const short MSG_TEAM_GOTO_WAR = 1807; //  通知战队新出战成员信息
        public const short MSG_TEAM_RESET_WAR = 1808; //  通知战队成员休息
        public const short MSG_TEAM_WAR_ROOM_INFO = 1809; //  通知战队作战室信息
        public const short MSG_NOTIFY_TEAM_STAND_TO = 1810; //  战斗准备完成
        public const short MSG_NOTIFY_TEAM_OUT_WAR = 1811; //  通知战队退出战斗
        public const short MSG_NOTIFY_RIVAL_INFO = 1812; //  通知对手战队信息
        public const short MSG_NOTIFY_RIVAL_OUT_WAR = 1813; //  通知对手取消比赛准备
        public const short MSG_UPDATE_TEAM_INFO = 1814; //  更新战队信息
        public const short MSG_NOTIFY_SELECT_MATCH = 1815; //  通知队长选择参加的联赛
        public const short MSG_NOTIFY_GUILD_APPLY_LIST = 1816; //  通知军团申请数据
        public const short MSG_NOTIFY_CHALLENGE_FAIL = 1817; //  通知约战失败
        public const short MSG_NOTIFY_CHALLENGE_LIST = 1818; //  通知约战列表
        public const short MSG_NOTIFY_CHALLENGE_OK = 1819; //  通知约战成功
        public const short MSG_NOTIFY_BE_CHALLENGE = 1820; //  通知被挑战
        public const short MSG_NOTIFY_TEAM_MATCH_INFO = 1821; //  通知战队赛信息
        public const short MSG_NOTIFY_TEAM_MATCH_RESULT = 1822; //  通知战队赛结果
        public const short MSG_NOTIFY_TEAM_JOIN_APPLY = 1823; //  通知有人申请加入战队
        public const short MSG_NOTIFY_TEAM_JOIN_APPLY_LOGIN = 1824; //  登入时通知有多少人申请入战队
        public const short MSG_NOTIFY_CHANGE_TEAM_NAME = 1825; //  通知修改战队名称
        public const short MSG_NOTIFY_CREATE_TEAM = 1826; //  通知创建战队
        public const short MSG_NOTIFY_DELETE_TEAM = 1827; //  通知删除战队
        public const short MSG_UPDATE_GUILD_INFO = 1828; //  更新军团信息
        public const short MSG_UPDATE_GUILD_MEMBER_INFO = 1829; //  更新团员信息
        public const short MSG_NOTIFY_GUILD_INVITE_MEMBER = 1830; //  通知邀请团员
        public const short MSG_NOTIFY_TEAM_MEMBER = 1831; //  通知邀请团员
        public const short MSG_NOTIFY_GUILD_SKILL_INFO = 1832; //  通知军团技能信息
        public const short MSG_NOTIFY_GUILD_BOSS_INFO = 1833; //  通知军团BOSS信息
        public const short MSG_LEAGUE_ENROLL_RESULT = 1834; //  通知客户端，联赛报名结果
        public const short MSG_LEAGUE_AWARD_RESULT = 1835; //  通知客户端，联赛领奖结果
        public const short MSG_LEAGUE_NOTIFY_CONFIG = 1836; //  通知客户端，联赛数据获取的远程地址
        public const short MSG_NOTIFY_LEAGUE_QUIZ_RESPONSE = 1837; //  通知客户端，竞猜战队的反馈（是否竞猜成功）
        public const short MSG_NOTIFY_BOOSTER_ENEMY_LIST = 1838; //  通知助手挑战赛对手列表
        public const short MSG_NOTIFY_SCENE_CURTALENTPAGE = 1839; //  通知场景内所有玩家的当前天赋页
        public const short MSG_NOTIFY_GUILD_BOSS_KILL_INFO = 1840; //  通知军团BOSS击杀信息
        
        
        // 玩家关系相关
        public const short MSG_RELATION_INIT_NOTIFY = 1900; //  通知初始化关系信息
        public const short MSG_RELATION_UPDATE_NOTIFY = 1901; //  更新单个玩家的关系信息
        public const short MSG_RELATION_DELETE = 1902; //  通知删除关系
        public const short MSG_RELATION_ADD = 1903; //  通知添加关系信息
        public const short MSG_NOTIFY_SEARCH_RESULT = 1904; //  通知客户端，角色查询结果
        public const short MSG_NOTIFY_RECEIVE_MP_APPLY = 1905; //  通知角色收到师徒申请
        public const short MSG_NOTIFY_MASTER_PRENTICE_INFO = 1906; //  通知角色的师徒信息
        public const short MSG_NOTIFY_MP_RELATION_CREATED = 1907; //  通知师徒关系建立
        public const short MSG_UPDATE_MASTER_PRENTICE_INFO = 1908; //  通知更新师徒信息
        public const short MSG_NOTIFY_MP_QUEST_LIST = 1909; // < 通知师徒任务列表
        public const short MSG_NOTIFY_MP_QUEST_INFO = 1910; // < 通知师徒任务信息
        public const short MSG_NOTIFY_REMOVE_SOCIAL_REL = 1911; // < 通知移除师徒关系
        public const short MSG_NOTIFY_MP_APPLY_LIST_CLEARED = 1912; // < 通知清空师徒列表
        public const short MSG_NOTIFY_MP_APPLY_LIST = 1913; // < 通知师徒申请列表
        public const short MSG_NOTIFY_INVITE_GIFT_PLAYER_INVITE = 1914; // < 通知收到邀请好友的邀请
        public const short MSG_NOTIFY_INVITE_GIFT_PLAYER_INFO = 1915; // < 通知邀请好友玩家信息
        public const short MSG_NOTIFY_REMOVE_INVITE_GIFT_PLAYER = 1916; // < 通知解除邀请好礼玩家
        public const short MSG_NOTIFY_INVITE_GIFT_INVITE_INFO = 1917; // < 通知邀请好礼邀请信息
        
        //活动相关的
        public const short MSG_NOTIFY_ACT_INFO_LIST = 1950; //  通知客户端，当前开放的活动信息列表
        public const short MSG_ACTIVITY_NOTIFY_STATE_CHANGE = 1951; //  通知客户端，活动的变化信息
        public const short MSG_ACTIVITY_NOTIFY_BOSS_DATA = 1952; //  通知客户端, 世界boss活动信息
        public const short MSG_ACTIVITY_SYNC_BOSS_DATA = 1953; //  通知客户端, 同步世界boss活动信息
        public const short MSG_NOTIFY_NEXT_ONLINE_PEAK_ACT_START = 1954; //  通知客户端, 在线峰值下阶段开始
        public const short MSG_NOTIFY_ACT_INFO = 1955; //  通知单个活动信息
        public const short MSG_NOTIFY_STOP_ACT = 1956; //  通知停止活动
        public const short MSG_NOTIFY_LUCK_CONVERT_COUNT = 1957; //  通知幸运活动兑换次数
        public const short MSG_NOTIFY_PLAYER_GUILD_MATCH_SELECTED_TANK = 1958; //  通知客户端，军团赛已选坦克信息
        public const short MSG_NOTIFY_CONQUER_CASTLE = 1959; // guild-> 通知玩家获得主城
        public const short MSG_NOTIFY_GUILD_MATCH_PAIR_GROUP = 1960; //  通知军团赛显示对阵图
        public const short MSG_NOTIFY_RAND_STEP_SUPPORT_INFO = 1961; // < 通知客户端夺宝排行点赞信息
        public const short MSG_NOTIFY_FIRE_BALL_CAN_SEL_TANK = 1962; //  通知火球赛可选坦克
        
        
        public const short MSG_GATE_SVR_END = 1963; //  客户端允许接收的最后一条协议
        // /*#######################################################################
        // #######################################################################*/
        
        // ----------------------------------------------------------------------/
        // /* 以下是群集中服务器间数据通信的数据包                                         */
        // ----------------------------------------------------------------------/
        public const short MSG_CLUSTER_COMMON_START = 3000; // 
        public const short MSG_SPACELOG_COMMON = 3001; // 系统日志消息
        public const short MSG_CLUSTER_CONFIG_UPDATE = 3002; // < 通知群组配置信息，Adminsvr到各个服务器
        public const short MSG_HUB_PROVIDER_REGISTER = 3003; // < 通知路由节点服务器，注册某个服务
        public const short MSG_HUB_PROVIDER_REGISTER_RESULT = 3004; // < 通知节点，注册某个服务到路由的结果
        public const short MSG_HUB_SERVICE_REQUEST = 3005; // < 发送到HUB节点的转发路由请求结果
        public const short MSG_HUB_SERVICE_RESULT = 3006; // < 发送到HUB节点的转发路由请求结果
        public const short MSG_CLUSTER_SHUT_DOWN_INDICATE = 3007; // < 通知群组，系统即将关闭， Adminsvr到各个服务器
        public const short MSG_REQUEST_NET_PROFILE_DATA = 3008; // < 请求网络性能分析数据
        public const short MSG_NOTIFY_NET_PROFILE_DATA = 3009; // < 通知网络性能分析数据
        public const short MSG_REQUEST_DB_PROFILE_DATA = 3010; // < 请求数据库性能分析数据
        public const short MSG_NOTIFY_DB_PROFILE_DATA = 3011; // < 通知数据库性能分析数据
        public const short MSG_REQUEST_FUNC_PROFILE_DATA = 3012; // < 请求函数性能分析数据
        public const short MSG_NOTIFY_FUNC_PROFILE_DATA = 3013; // < 通知函数性能分析数据
        public const short MSG_CLIENT_BIND_GAME_CONNID = 3014; // < 客户端连接绑定目标gamesvr的连接id
        public const short MSG_CLIENT_UNBIND_GAME_CONNID = 3015; // < 客户端连接解除绑定目标gamesvr的连接id
        public const short MSG_OBSERVER_BIND_PLAYER_ACCOUNT = 3016; // < 绑定需要附身的玩家账号
        public const short MSG_OBSERVER_UNBIND_PLAYER_ACCOUNT = 3017; // < 解除需要附身的玩家账号
        public const short MSG_MARK_OBSERVER_NET_CONN = 3018; // < 标记玩家链接附身状态
        public const short MSG_UNMARK_OBSERVER_NET_CONN = 3019; // < 解除玩家链接附身状态
        
        // /*#######################################################################
        // 认证相关的交互协议
        // #######################################################################*/
        public const short MSG_CLUSTER_AUTH_START = 3100; // 
        //-----AUTH<->GATE之间协议往来
        public const short MSG_CLUSTER_AUTH_REGISTER = 3101; // ->认证服务器，注册服务
        public const short MSG_CLUSTER_AUTH_REGISTERRESULT = 3102; // ->各客户端，返回注册结果
        
        public const short MSG_CLUSTER_AUTH_SESSIONSTART = 3103; // 网关->认证中心，有登陆请求激活
        public const short MSG_CLUSTER_AUTH_SESSIONCLOSE = 3104; // 认证前端->认证中心，通知有登录SESSION请求放弃
        
        public const short MSG_CLUSTER_AUTH_NOTIFY_SREQUEST = 3105; // 认证中心->，通知有登录请求
        public const short MSG_CLUSTER_AUTH_NOTIFY_SSTART = 3106; // 认证中心->，通知有登录开始
        public const short MSG_CLUSTER_AUTH_NOTIFY_WENTER = 3107; // 认证中心->，通知有角色进入游戏世界
        public const short MSG_CLUSTER_AUTH_NOTIFY_WLEFT = 3108; // 认证中心->，通知有角色离开游戏世界
        public const short MSG_CLUSTER_AUTH_NOTIFY_SCLOSE = 3109; // 认证中心->，有SESSION已经放弃
        
        public const short MSG_CLUSTER_RESYNC_SESSIONS = 3110; // ->认证中心，同步已经完成的登陆
        public const short MSG_CLUSTER_RESYNC_COMPLETE = 3111; // Gate->认证中心，登录同步结束
        public const short MSG_CLUSTER_GATE_SESSION_READY = 3112; // < 网关服务器准备好接受登陆
        public const short MSG_BRIDGE_RESPONSE = 3113; // < 桥接服务器响应
        public const short MSG_HTTP_BRIDGE_RESPONSE = 3114; // < 桥接HTTP服务器响应
        
        // /*#######################################################################
        // 在 GATE_SVR 相关的协议
        // #######################################################################*/
        public const short MSG_CLUSTER_GAME_START = 3200; // 
        public const short MSG_CLUSTER_GATE_CLIENTLOST = 3201; // 网关->游戏 玩家断线
        public const short MSG_CLUSTER_GATE_PLAYERSYNC = 3202; // 网关->游戏 发送初始角色信息
        public const short MSG_CLUSTER_GAME_CLIENTLOSTCONFIRM = 3203; // 游戏->网关 断线处理完毕
        public const short MSG_CLUSTER_MULTICAST_PACKET = 3204; // 游戏->网关 多播消息报
        public const short MSG_CLOSE_CLIENT_CONNECT = 3205; // 游戏->网关 关闭一个用户连接
        public const short MSG_CLUSTER_SERVER_PROFILE = 3206; // 服务器描述信息
        public const short MSG_REQUEST_ENTER_SOLO_SCENE = 3207; // 网关->位置 请求创建单人场景
        public const short MSG_REQUEST_ENTER_TANK_TRIAL_SCENE = 3208; // 网关->位置 请求进入坦克试玩场景
        public const short MSC_CREATE_SCENE_PROPS = 3209; //  通知创建场景道具
        public const short MSG_SYNC_QUEST_ACEM_LIST_TOGAME = 3210; //  同步任务成就信息togame
        public const short MSG_CHANGE_CHECK_COUNT = 3211; //  改变任务的检查点数量
        public const short MSG_RELIVE_SYNC_ATTR = 3212; //  坦克复活，请求同步坦克数值
        public const short MSG_SYNC_ATTR_TOGAME = 3213; //  同步坦克数据给gamesvr
        public const short MSG_SYNC_CHAR_INFO_TOGAME = 3214; //  同步角色数据给gamesvr
        public const short MSG_SYNC_ROULETTE_AWARD = 3215; //  同步轮盘获奖信息给tracksvr
        public const short MSG_UPDATE_BATTLE_TECHNO = 3216; //  更新技术信息
        public const short MSG_SYNC_CHAR_DAY_CHARGE_INFO = 3217; //  同步角色充值数给tracksvr
        public const short MSG_NOTIFY_SERVER_CHARGE_NUM = 3218; //  通知全服充值奖励任务的数额
        public const short MSG_NOTIFY_GATE_DRAW_SOCIAL_QUEST_AWARD = 3219; //  通知Gate发放社交任务奖励
        public const short MSG_NOTIFY_DRAW_SOCIAL_AWARD_RESULT = 3220; //  通知奖励发放结果
        public const short MSG_NOTIFY_RECORD_CHAR_LAST_INFO = 3221; //  game->gate 记录角色下线时的地图坐标信息
        public const short MSG_NOTIFY_ADD_SELECTED_TANK = 3222; //  gate->activity通知玩家选择了某坦克进入战场
        public const short MSG_SYNC_SVR_AWARD = 3223; //  同步svr_award获奖信息给tracksvr
        
        // /*#######################################################################
        // 位置服务器相关消息
        // #######################################################################*/
        public const short MSG_CLUSTER_TRACK_START = 3300; // 
        public const short MSG_NOTIFY_PLAYER_LOGIN = 3301; //  gate->track,通知有玩家登录游戏
        public const short MSG_GAME_CREATE_SCENE = 3302; //  通知game创建新战场
        public const short MSG_GAME_REMOVE_SCENE = 3303; //  通知track销毁战场
        public const short MSG_GAME_CREATE_SCENE_OK = 3304; //  通知track创建成功
        public const short MSG_GATE_ENTER_SCENE = 3305; //  通知gate坦克进入战场
        public const short MSG_GAME_JOIN_SCENE = 3306; //  通知game有玩家加入战场
        public const short MSG_GAME_ADD_LOOKER = 3307; //  通知game有玩家进入战场观战
        public const short MSG_NOTIFY_TURNUP_RESULT_TOGATE = 3308; //  通知翻牌结果给gate
        public const short MSG_SYNC_LIMIT_INFO_BYGATE = 3309; //  同步玩家的限制信息
        public const short MSG_SYNC_CHAR_INFO_TOTRACK = 3310; //  同步角色信息给tracksvr
        public const short MSG_GAME_START_CAMP_POISE = 3311; //  通知game开启人数平衡
        public const short MSG_GAME_UPDATE_TANK_CAMP = 3312; //  通知game切换阵营
        public const short MSG_SYNC_CHAR_NAME = 3313; //  同步角色改名信息给tracksvr
        public const short MSG_LEAGUE_NOTIFY_BATTLE_RESULT = 3314; //  联赛通知成绩信息
        public const short MSG_GATE_RENEW_ELO = 3315; //  通知ELO刷新
        public const short MSG_GATE_CHANGE_CHAR_HONOR = 3316; //  通过后台修改玩家的容易信息
        public const short MSG_NOTIFY_LEAGUE_TEAM_AWARD = 3317; //  通知发放联赛的战队奖励
        public const short MSG_NOTIFY_LEAGUE_MEMBER_AWARD = 3318; //  通知发放联赛的战队个人奖励
        public const short MSG_GAME_CHANGE_BATTLE_TECHNO = 3319; //  通知更新技术统计
        public const short MSG_GAME_EXIT_BATTLE = 3320; //  game通知玩家退出战斗
        public const short MSG_GAME_HARM_BOSS = 3321; //  game通知玩家对世界boss造成伤害
        public const short MSG_TRACK_BATTLE_END = 3322; //  trakc通知game战斗结束
        public const short MSG_SYNC_BUDDY_DATA = 3323; //  同步好友数据
        public const short MSG_SYNC_GUILD_DATA = 3324; //  同步军团数据
        public const short MSG_SYNC_TRACK_SELECTED_TANK = 3325; //  track->gate同步选坦克阶段分配的坦克
        public const short MSG_SYNC_TANK_BRIEF = 3326; //  gate->track 同步坦克简要信息
        public const short MSG_REQUEST_PUNISH_ESCAPE = 3327; //  track->gate 请求惩罚逃跑玩家
        public const short MSG_GAME_SCENE_RECORD_START = 3328; //  track->game 请求开始战斗录像
        public const short MSG_NOTIFY_REFRESH_NOTE = 3329; //  track->gate 通知刷新纪录
        public const short MSG_NOTIFY_GRANT_ONLINE_PEAK_AWARD = 3330; //  track->gate 通知发放峰值在线活动奖励
        public const short MSG_REQUEST_CHECK_BATTLE_TANK = 3331; //  track->gate 请求检测主战的坦克是否可用
        public const short MSG_NOTIFY_GUILD_BOSS_DAMAGE_HP = 3332; //  track->game 通知军团BOSS伤害血量
        public const short MSG_NOTIFY_GUILD_BOSS_END_DAMAGE_INFO = 3333; //  game->track 通知军团BOSS战斗结束后伤害信息
        public const short MSG_NOTIFY_UPDATE_3V3_INFO = 3334; //  track->gate 通知gate更新3V3信息
        public const short MSG_NOTIFY_NO_SELECT_TANK_PUNISH = 3335; //  track->gate 通知未选坦克惩罚
        public const short MSG_NOTIFY_BOOSTER_BATTLE_END = 3336; //  track->gate 通知助手对战结束
        public const short MSG_CLUSTER_SYSTEM_BULLETIN = 3337; //  其他->位置,系统公告通知
        public const short MSG_CHAT_PLAYER_INFO = 3338; //  TrackSvr -> chatsvr, 通知聊天服务器相关玩家信息
        public const short MSG_SYNC_CHAR_GUILD_TOGATE = 3339; //  同步角色军团信息到gate
        public const short MSG_SYNC_GUILD_SKILL_INFO_TOGATE = 3340; //  同步军团技能信息到gate
        public const short MSG_CHAR_ADD_TEAM_MERIT = 3341; //  track->guild,增加玩家军团贡献
        public const short MSG_NOTIFY_CONSUME_VALENTINE_FLAUNT = 3342; //  track->gate通知消耗情人节鲜花
        public const short MSG_NOTIFY_CONSUME_HIRE_TANK_COIN = 3343; //  track->gate通知扣除赠送租用坦克的消耗
        public const short MSG_ADD_HIRE_TANK_PRESENT_TIME = 3344; //  track->gate gate->track 增加赠送的租用坦克时间
        public const short MSG_TEAM_PVE_BATTLE_WIN = 3345; //  track->guild , 战队通关PVE地图
        public const short MSG_CHAR_ADD_GUILD_ACTIVE = 3346; //  gate->guild 玩家增加军团活跃度
        
        
        // /*#######################################################################
        // 聊天服务器相关消息
        // #######################################################################*/
        public const short MSG_CHAT_ERROR_INFO = 3500; // 聊天错误信息回复
        public const short MSG_CHAT_BULLETIN = 3501; // 公告信息通知
        public const short MSG_SYSTEM_BULLETIN_NOTIFY = 3502; // 系统公告通知
        public const short MSG_QUESTION_NOTIFY_HAVE_ANSWER = 3503; // 通知玩家有反馈
        public const short MSG_SYNC_PVP_PAIR_INFO = 3504; // 同步匹配信息
        public const short MSG_SYSTEM_TEMPLATE_BULLETIN_NOTIFY = 3505; // 模板系统公告通知
        
        // /*#######################################################################
        // 数据服务器相关消息
        // #######################################################################*/
        public const short MSG_SVR_DATASVR_START = 3600; //  数据服务器消息
        public const short MSG_PERSIST_REGISTER = 3601; //  请求注册Persist服务
        public const short MSG_PERSIST_REGISTER_CONFIRM = 3602; //  确认Persist服务注册成功
        public const short MSG_PERSIST_REGISTER_REJECT = 3603; //  拒绝Persist注册
        public const short MSG_PERSIST_REQUEST_SIMPLE = 3604; //  数据消息，发送持久化请求
        public const short MSG_PERSIST_REQUEST_COMPOSITE = 3605; //  数据消息，发送持久化请求
        public const short MSG_PERSIST_REQUEST_TRANSACTION = 3606; //  数据消息，发送持久化请求
        public const short MSG_PERSIST_RESPONSE_SIMPLE = 3607; //  数据消息，发送持久化响应
        public const short MSG_PERSIST_RESPONSE_COMPOSITE = 3608; //  数据消息，发送持久化响应
        public const short MSG_PERSIST_RESPONSE_TRANSACTION = 3609; //  数据消息，发送持久化响应
        public const short MSG_PERSIST_TXN_RESULT = 3610; //  事务提交返回的数据
        public const short MSG_PERSIST_REQUEST_POOLSTATE = 3611; //  请求状态信息
        public const short MSG_PERSIST_REPORT_POOLSTATE = 3612; //  请求POOL状态
        public const short MSG_NOTIFY_TRACKSVR_PLAYERLOGIN = 3613; //  Game -> Track 通知玩家在其他服务器登陆
        public const short MSG_NOTIFYGAMESVR_REMOVELEFTOVEROBJ = 3614; //  Track -> Game 通知玩家在其他服务器登陆，删除残余数据
        
        
        // /*#######################################################################
        // npc服务器相关消息
        // #######################################################################*/
        public const short MSG_CLUSTER_NPC_START = 3700; // 
        //第零部分 : NPC相关的消息
        public const short MSG_QUERY_ASK = 3701; //  服务器之间互相查询请求
        public const short MSG_QUERY_ANSWER = 3702; //  服务器之间互相查询应答
        public const short MSG_NPC_SERVER_REGISTER = 3703; //  NPC服务器启动，告知游戏服务器
        public const short MSG_NPC_SERVER_REG_RESPONE = 3704; //  游戏服务器对NPC服务器注册的回应MSG_NPC_SERVER_REG_RESPONE
        public const short MSG_NPC_SERVER_CLOSE = 3705; //  npc->gamesvr 通知npcsvr关闭
        public const short MSG_NPC_SCENE_INIT = 3706; //  npc->gamesvr 通知场景npc初始化
        public const short MSG_NPC_TANK_ENTER = 3707; //  gamesvr->npc 通知坦克进入战场
        public const short MSG_NPC_TANK_EXIT = 3708; //  gamesvr->npc 通知坦克退出战场
        public const short MSG_NPC_CREATE_PROPS = 3709; //  npc->gamesvr 通知创建场景道具
        public const short MSG_NPC_SYNC_ATTRS = 3710; //  gamesvr->npc 通知同步属性数据
        public const short MSG_NPC_REPAIR_TANK = 3711; //  npc->gamesvr 通知修理箱给坦克补血
        public const short MSG_NPC_OBJ_MOVE = 3712; //  gamesvr->npc npc->gamesvr 通知对象移动
        public const short MSG_NPC_CREATE_OBJECT = 3713; //  npc->gamesvr 通知对象创建
        public const short MSG_NPC_SYNC_ATTR = 3714; //  gamesvr->npc 同步对象属性
        public const short MSG_NPC_USE_SKILL = 3715; //  npc->gamesvr 通知AINPC使用技能
        public const short MSG_NPC_BATTLE_END = 3716; //  npc->gamesvr 通知战斗结束
        public const short MSG_NPC_REMOVE_OBJ = 3717; //  npc->gamesvr 通知移除对象
        public const short MSG_NOTIFY_SEEK_PATH = 3718; //  通知寻径结果
        public const short MSG_NPC_FROZEN = 3719; //  npc->gamesvr 冻结
        public const short MSG_NOTIFY_NPC_CREATE_OBJ = 3720; //  game->npc 通知NPC创建对象
        public const short MSG_GAME_OBJ_STATE_CHANGE = 3721; //  game->npc  通知NPC，对象状态变化
        public const short MSG_NPC_ADD_BUFF = 3722; //  npc->Game 通知 game 增加BUFF
        public const short MSG_NPC_REMOVE_BUFF = 3723; //  npc->Game 通知 game 删除BUFF
        public const short MSG_NOTIFY_GIVE_BATTLE_EXP = 3724; //  npc->game 通知给予战场经验
        public const short MSG_NPC_SYNC_PORTAL_STATE = 3725; //  npc->Game通知gamesvr同步传送门状态
        public const short MSG_NOTIFY_NPC_EXEC_SCRIPT = 3726; //  game->npc 通知NPC执行地图脚本
        public const short MSG_NPC_NOTIFY_PVE_STEP = 3727; //  npc->Game通知gamesvr副本进度
        public const short MSG_NOTIFY_NPC_SVR_REMOVE_BUFF = 3728; //  game->npc 通知对象移除BUFF
        
        // /*#######################################################################
        // guild 服务器相关消息
        // #######################################################################*/
        public const short MSG_CLUSTER_GUILD_START = 3800; // 
        public const short MSG_QUERY_GUILD_CREATE_ROOM = 3801; // track->guild，查询创建房间的请求是否通过
        public const short MSG_GUILD_REQUEST_CREATE_ROOM = 3802; // guild->track, 通知track创建房间
        public const short MSG_NOTIFY_GUILD_DESTROY_ROOM = 3803; // track->guild, 通知guild房间被销毁
        public const short MSG_NOTIFY_GUILD_PLAYER_ENTER_ROOM = 3804; // track->guild, 通知guild玩家进入房间
        public const short MSG_MULTICAST_TEAM_ROOM_PACKET = 3805; // guild->track, 通知track内战队房间的玩家
        public const short MSG_GUILD_REQUEST_CREATE_SCENE = 3806; // guild->global,通知global创建战场
        public const short MSG_MULTICAST_GUILD_MATCH_ROOM_PACKET = 3807; // guild->global,通知track内的军团战房间的玩家
        public const short MSG_REQUEST_ROUNDPASS_ROOM_MEMBER_UUID = 3808; // guild->track,请求房间内出战玩家UUID
        public const short MSG_NOTIFY_ROUNDPASS_ROOM_MEMBER_UUID = 3809; // track->guild,通知轮空房间的成员
        public const short MSG_NOTIFY_GUILD_MATCH_RANK_TO_GATE = 3810; // guild->gate, 通知军团赛名次
        public const short MSG_NOTIFY_RESET_GUILD_MATCH_RANK_QUEST = 3811; //  guild->gate, 通知重置军团排名任务
        public const short MSG_NOTIFY_GUILD_BOSS_BATTLE_START = 3812; // guild->track, 通知军团BOSS战斗开始
        public const short MSG_NOTIFY_GUILD_BOSS_BATTLE_END = 3813; // track->guild, 通知军团BOSS战斗结束
        public const short MSG_NOTIFY_PLAYER_GET_GUILD_BOSS_AWARD = 3814; // guild->gate,  通知获得军团BOSS奖励
        public const short MSG_NOTIFY_CLEAR_GUILD_BOSS_BATTLE_TIME = 3815; // guild->gate,  通知清除军团BOSS战斗时间
        public const short MSG_REQUEST_START_3V3_PAIR = 3816; //  track->guild, 请求开始3V3争霸赛报名参赛
        public const short MSG_REQUEST_STOP_3V3_PAIR = 3817; //  track->guild, 请求取消3V3争霸赛报名参赛
        public const short MSG_NOTIFY_3V3_DIRECT_WIN = 3818; //  guild->track, 通知3V3轮空直接获胜
        
        public const short MSG_TEST_START = 4000; // 
        public const short MSG_TEST_LATENCY_RECORD = 4001; // 测试 延时收集
        public const short MSG_TEST_FULL_DATATYPE = 4002; //  测试各种数据类型
        
        // /*#######################################################################
        // global服务器相关消息
        // #######################################################################*/
        public const short MSG_CLUSTER_GLOBAL_START = 4100; // 
        
        public const short MSG_GLOBAL_START_PAIR = 4101; //  开始跨服配对
        public const short MSG_GLOBAL_STOP_PAIR = 4102; //  停止跨服配对
        public const short MSG_GLOBAL_ASSIGN_GAMESVR = 4103; //  通知gate战斗分配的gamesvr
        public const short MSG_GLOBAL_MIDWAY_JOIN = 4104; //  请求中途加入
        public const short MSG_GLOBAL_SCENE_LIST = 4105; //  通知战场列表信息
        public const short MSG_GLOBAL_DEL_SCENE_LIST = 4106; //  通知删除战场列表信息
        public const short MSG_GLOBAL_ROBOT_PAIR = 4107; //  通知开始进行机器人配对
        public const short MSG_GLOBAL_LOOK_SCENE = 4108; //  通知跨服观战
        public const short MSG_GLOBAL_PAIR_OK = 4109; //  通知跨服配对成功
        public const short MSG_GLOBAL_LEAGUE_RESULT = 4110; //  通知跨服联赛战斗结果
        public const short MSG_NOTIFY_GLOBAL_MIDWAY_JOIN_OK = 4111; //  通知track中途加入成功
        public const short MSG_GLOBAL_SYNC_TANK_BRIEF = 4112; //  通知跨服同步坦克简要信息
        public const short MSG_GLOBAL_REQUEST_JOIN_LEAGUE_ROOM = 4113; //  请求加入联赛房间 track->global
        public const short MSG_GLOBAL_NOTIFY_JOIN_LEAGUE_ROOM_OK = 4114; //  通知加入联赛房间成功 global->track
        public const short MSG_GLOBAL_LEAVE_LEAGUE_ROOM = 4115; //  通知离开联赛房间 global->track
        public const short MSG_GLOBAL_REQ_ROOM_OP = 4116; //  请求联赛房间操作
        public const short MSG_GLOBAL_PLAYER_LOGOUT = 4117; //  通知GLOBAL玩家登出
        public const short MSG_GLOBAL_STAT_CHAR_DATA = 4118; //  通知统计角色信息
        public const short MSG_GLOBAL_NOTIFY_USE_ITEM = 4119; //  通知global使用物品
        public const short MSG_GLOBAL_SYNC_CHAR_INFO = 4120; //  通知global玩家信息变更
        public const short MSG_GLOBAL_PUNISH_LADDER_ESCAPE_ON_WAIT = 4121; //  global->track, 处罚天梯逃跑玩家
        public const short MSG_GATE_GET_CURTALENTPAGE = 4122; //  global-->track-->gate 从Gate获取玩家当前天赋页
        public const short MSG_SYNC_CURTALENTPAGE = 4123; //  gate-->track-->global 向Track同步当前天赋页
        public const short MSG_GATE_UNLOCK_TALENTOP = 4124; //  global-->track-->gate 通知Game解锁玩家的天赋操作
        public const short MSG_GLOBAL_REQ_LOOK_ROOM = 4125; //  请求加入房间成为观察者
        public const short MSG_GLOBAL_REQUEST_SET_MAP = 4126; //  请求设置房间地图
        public const short MSG_REQUEST_MATCH_ROOM_CHAR_DATA = 4127; //  global->track 请求比赛房间成员信息
        public const short MSG_NOTIFY_MATCH_ROOM_CHAR_DATA = 4128; //  track->global 通知战队赛房间成员信息
        public const short MSG_NOTIFY_TEAM_MATCH_END = 4129; //  global->guild 通知战队赛比赛结束
        
        public const short MSG_GLOBAL_SYNC_TEAM = 4200; //  同步战队数据到GLOBAL
        public const short MSG_GLOBAL_LEAGUE_ENROLL_RESULT = 4201; //  联赛报名结果Global->Track
        public const short MSG_GLOBAL_LEAGUE_CHALLENGE_REQ = 4202; //  联赛请求挑战列表Track->Global
        public const short MSG_GLOBAL_LEAGUE_CHALLENGE_LIST = 4203; //  联赛返回挑战列表Global->Track
        public const short MSG_GLOBAL_LEAGUE_REQUEST_AWARD = 4204; //  联赛请求领奖Track->Global
        public const short MSG_GLOBAL_LEAGUE_ACT_PREPARE = 4205; //  联赛活动开始前的准备Track->Global
        public const short MSG_GLOBAL_LEAGUE_MEMEBER_AWARD = 4206; //  联赛奖励领取Global->Track
        public const short MSG_GLOBAL_LEAGUE_CHALLENGE_TEAM = 4207; //  联赛请求约战Track->Global
        public const short MSG_GLOBAL_LEAGUE_PLAYER_LOGIN = 4208; //  玩家登录
        public const short MSG_GLOBAL_TEAM_MESSAGE = 4209; //  发送战队消息Global->Track
        public const short MSG_GLOBAL_LEAGUE_GET_TO_WAR = 4210; //  获取出战玩家列表Global->Track
        public const short MSG_NOTIFY_REMOTE_PLATFORM_MATCH_RESULT = 4211; //  通知平台赛事接口比赛结果 global->track
        public const short MSG_NOTIFY_LEAGUE_AUTO_ENROLL = 4212; //  通知联赛自动报名信息Global->Track
        public const short MSG_REQUEST_LEAGUE_BATCH_ENROLL = 4213; //  请求global批量报名联赛
        public const short MSG_GLOBAL_REQUEST_SYNC_TEAM_MEMBER = 4214; //  请求同步战队成员信息 global->track
        public const short MSG_SYNC_IMPEACH_INFO = 4215; //  同步举报信息 global <-> track
        public const short MSG_NOTIFY_IMPEACH_RESULT_IN_SERVER = 4216; //  通知举报结果 global <-> track
        public const short MSG_NOTIFY_SERVER_NEW_MAIL = 4217; //  通知其他服务器有新邮件 now : track -> global -> tracks
        public const short MSG_NOTIFY_AFK_TRIGGER = 4218; //  通知track有玩家触发挂机  game -> track, game->global->track
        public const short MSG_NOTIFY_RELOAD_BAN_INFO = 4219; //  通过global转发给track重新加载被举报人的封禁信息
        public const short MSG_GLOBAL_GM_RESULT = 4220; //  GLOBAL的GM命令的返回结果
        public const short MSG_ADD_GLOBAL_ROULETTE_GIFT = 4221; //  通知增加跨服转盘奖池的礼券
        public const short MSG_REQUEST_DRAW_GLOBAL_ROULETTE_GIFT = 4222; //  请求领取跨服转盘奖池的礼券
        public const short MSG_NOTIFY_GET_GLOBAL_ROULETTE_GIFT = 4223; //  通知获得跨服转盘奖池的礼券
        public const short MSG_NOTIFY_GLOBAL_ROULETTE_GIFT_NUM = 4224; //  通知当前转盘奖池的礼券数
        public const short MSG_REQUEST_CHECK_ROULETTE_DROP_LIMIT = 4225; //  请求检验限制掉落物品
        public const short MSG_SYNC_ROULETTE_CHECKED_DROP_ITEM = 4226; //  通知gate转盘掉落物品
        public const short MSG_SYNC_FREE_WEEK_TANK_CONFIG = 4227; //  同步周免坦克信息
        public const short MSG_REQUEST_QUERY_GLOBAL_LIMIT_AWARD_INFO = 4228; //  请求全服查询限制奖励信息
        public const short MSG_NOTIFY_QUERY_GLOBAL_LIMIT_AWARD_INFO = 4229; //  通知全服查询限制奖励信息
        public const short MSG_NOTIFY_CLOUD_PURCHASE_BUY_INFO = 4230; //  通知云购购买信息
        public const short MSG_REQUEST_GLOBAL_CONVERT_ITEM = 4231; //  请求全服兑换物品
        public const short MSG_NOTIFY_GLOBAL_CONVERT_ITEM = 4232; //  通知全服兑换物品
        public const short MSG_NOTIFY_GLOBAL_NEW_MAIL = 4233; //  通知跨服服务器发送新邮件通知
        public const short MSG_NOTIFY_CLOUD_PURCHASE_AWARD_INFO = 4234; //  通知云购大奖信息 global -> gate
        public const short MSG_REQUEST_GLOBAL_LOAD_PURCHASE_AWARD = 4235; //  请求加载云购大奖信息
        public const short MSG_NOTIFY_BONFIRE_USE_COUNT_INFO = 4236; //  通知篝火活动柴火使用信息 global -> gate
        public const short MSG_NOTIFY_BONFIRE_USE = 4237; //  通知篝火活动柴火使用 gate -> global
        public const short MSG_NOTIFY_BONFIRE_COMPLETE_QUEST = 4238; //  通知篝火活动领取任务奖励 gate -> global
        public const short MSG_NOTIFY_BONFIRE_COMPLETE_QUEST_INFO = 4239; //  通知篝火活动领取任务奖励信息global -> gate
        public const short MSG_SYNC_TREASURE_TANK = 4240; //  通知夺宝坦克信息 global -> gate
        
        // /*#######################################################################
        // robot服务器相关消息
        // #######################################################################*/
        public const short MSG_CLUSTER_ROBOT_START = 5000; // 
        public const short MSG_NOTIFY_ROBOT_CACHE_PATH = 5001; // 通知预缓存的寻径结果
        
        // /*#######################################################################
        // buddy服务器相关消息
        // #######################################################################*/
        public const short MSG_CLUSTER_BUDDY_START = 5100; // 
        public const short MSG_REQUEST_OBSERVER_OTHER_GATE_PLAYER = 5101; // < 请求附身（不同gate）
        public const short MSG_NOTIFY_OBSERVER_OTHER_GATE_PLAYER = 5102; // < 通知附身（不同gate）
        public const short MSG_NOTIFY_INVITE_ITEM_DROP_INFO = 5103; // < 通知邀请卡掉落信息(gate -> buddy)
        public const short MSG_NOTIFY_FORBID_DROP_INVITE_ITEM = 5104; // < 通知禁止掉落邀请卡(buddy -> gate)
        public const short MSG_NOTIFY_DRAW_INVITE_GIFT_AWARD = 5105; // < 通知领取邀请好礼奖励(buddy -> gate)
        public const short MSG_NOTIFY_INVITE_GIFT_CROSS_DAY = 5106; // < 通知玩家隔天计算在线天数(gate -> buddy)
        public const short MSG_NOTIFY_REMOVE_INVITE_GIFT_ITEM = 5107; // < 通知删除邀请道具(buddy -> gate)
        public const short MSG_NOTIFY_INVITE_GIFT_ITEM_OVER_TIME = 5108; // < 通知玩家道具过期(gate -> buddy)
        public const short MSG_NOTIFY_CAN_SENDMAIL = 5109; // < 通知可以发送邮件(buddy -> gate)
        public const short MSG_NOTIFY_CAN_PRESENT_GOODS = 5110; // < 通知可以赠送商品给他人(buddy -> gate)
        public const short MSG_NOTIFY_BIND_INVITE_SPREAD_PLAYER = 5111; // < 通知邀请推广玩家信息(buddy -> gate)
        public const short MSG_NOTIFY_INVITE_SPREAD_BIND_LEVEL_INFO = 5112; // < 通知邀请推广绑定玩家等级(buddy -> gate)
        public const short MSG_NOTIFY_INVITE_SPREAD_BIND_LEVEL_CHANGE = 5113; // < 通知邀请推广绑定玩家等级变化(gate -> buddy)
        
        // /*#######################################################################
        // activity服务器相关消息
        // #######################################################################*/
        public const short MSG_CLUSTER_ACTIVITY_START = 5200; // 
        public const short MSG_SYNC_RUNNING_ACTIVITY_TO_SVR = 5201; // < 通知其他服务器同步已开启的活动信息
        public const short MSG_NOTIFY_START_ACT = 5202; // < 通知其他服务器某个活动开启
        public const short MSG_SEND_REDPKT_BULLETIN = 5203; //  gate-->act 玩家发红包的公告
        public const short MSG_NOTIFY_LUCK_CONVERT_SUCCESS = 5204; //  gate-->act 通知幸运活动兑换成功
        public const short MSG_SYNC_GUILD_MATCH_SELECTED_TANK = 5205; //  act->track
        public const short MSG_REQUEST_GUILD_MATCH_SELECTED_TANK = 5206; //  请求获取玩家选坦克信息
        public const short MSG_NOTIFY_RAND_STEP_SUPPORT_SUCCESS = 5207; //  act->gate  通知点赞成功
        
        
        // /*#######################################################################
        // cache服务器相关消息
        // #######################################################################*/
        public const short MSG_CACHING_START = 5300; // 
        public const short MSG_CACHING_REFRESH_REQUEST = 5301; // < 请求刷新特定的缓存
        public const short MSG_CACHING_REFRESH_RESULT = 5302; // < 返回特定缓存刷新的结果
        
        //--------------------------------------------------------------------------
        public const short MSG_LAST = 6000; // 标识最后一条消息
        //-------------------------------------------------------------------------
        // MSGTYPE_END_BLOCK
        
        
    }
}
