// Generated by proto_to_csharp.py. DO NOT EDIT!
using System.IO;

namespace GameProtocol.MovementMessage
{
    // ----------------------------------------------------------------------
    ///    @file            protocol/MovementMessage.h
    ///    @brief
    ///    @author          Hou Ming Yuan
    ///    @copyright       Sixcube Information Technology Co,. Ltd. (2012)
    ///    @date            2005-3-25 15:03:13
    // ----------------------------------------------------------------------
    /// @addtogroup dt_UnitMovement
    /// @{
    /**
     * 角色移动请求:向前
     */
    public sealed class RequestMoveForward : IProtocol
    {
        public const short MsgType = MessageType.MSG_REQUEST_MOVE_FORWARD;
        public short GetMsgType { get { return MsgType; } }
        public ushort start_x;// 客户端移动的起始点
        public ushort start_y;// 客户端移动的起始点
        public byte direction;// 朝向
        public uint sceneId;// 战场id
        
        public static void Send(ushort start_x, ushort start_y, byte direction, uint sceneId, object className)
        {
            var packet = new RequestMoveForward
            {
                start_x = start_x,
                start_y = start_y,
                direction = direction,
                sceneId = sceneId
            };
            NetMessage.Send(packet.BuildPacket(), className);
        }
        
        public byte[] BuildPacket()
        {
            var buffer = ProtocolBuffer.Writer;
            buffer.Write(MsgType);
            buffer.Write(ProtocolBuffer.Zero);
            WriteToStream(buffer);
            return ProtocolBuffer.CacheStream.ToArray();
        }
        
        public void ReadFromStream(BinaryReader reader)
        {
            start_x = reader.ReadUInt16();
            start_y = reader.ReadUInt16();
            direction = reader.ReadByte();
            sceneId = reader.ReadUInt32();
        }
        
        public void WriteToStream(BinaryWriter writer)
        {
            writer.Write(start_x);
            writer.Write(start_y);
            writer.Write(direction);
            writer.Write(sceneId);
        }
    }
}
