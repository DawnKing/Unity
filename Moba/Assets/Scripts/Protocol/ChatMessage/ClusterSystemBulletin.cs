// Generated by proto_to_csharp.py. DO NOT EDIT!
using System.IO;

namespace GameProtocol.ChatMessage
{
    /// 其他->track，公告
    public sealed class ClusterSystemBulletin : IProtocol
    {
        public const short MsgType = MessageType.MSG_CLUSTER_SYSTEM_BULLETIN;
        public short GetMsgType { get { return MsgType; } }
        public uint BltId;
        public uint CharOid;
        public string[] argList;
        public uint Param;
        
        public static void Send(uint bltId, uint charOid, string[] argList, uint param, object className)
        {
            var packet = new ClusterSystemBulletin
            {
                BltId = bltId,
                CharOid = charOid,
                argList = argList,
                Param = param
            };
            NetMessage.Send(packet.BuildPacket(), className);
        }
        
        public byte[] BuildPacket()
        {
            var buffer = ProtocolBuffer.Writer;
            buffer.Write(MsgType);
            buffer.Write(ProtocolBuffer.Zero);
            WriteToStream(buffer);
            return ProtocolBuffer.CacheStream.ToArray();
        }
        
        public void ReadFromStream(BinaryReader reader)
        {
            BltId = reader.ReadUInt32();
            CharOid = reader.ReadUInt32();
            var length3 = reader.ReadUInt16();
            argList = new string[length3];
            for (var i3 = 0; i3 < length3; i3++)
            {
                argList[i3] = reader.ReadString();
            }
            Param = reader.ReadUInt32();
        }
        
        public void WriteToStream(BinaryWriter writer)
        {
            writer.Write(BltId);
            writer.Write(CharOid);
            ushort count3 = (ushort)(argList == null ? 0 : argList.Length);
            writer.Write(count3);
            for(var i3 = 0; i3 < count3; i3++)
            {
                writer.Write(argList[i3]);
            }
            writer.Write(Param);
        }
    }
}
