// Generated by proto_to_csharp.py. DO NOT EDIT!
using System.IO;

namespace GameProtocol.ShareTypes
{
    // ----------------------------------------------------------------------
    ///	@file			sharetypes/ShareTypes.h
    ///	@brief
    ///	@author			Hou Ming Yuan
    ///	@copyright		Sixcube Information Technology Co,. Ltd. (2012)
    ///	@date			2005-4-6 10:43:58
    // ----------------------------------------------------------------------
    /// @defgroup dt_CommonData 公用数据类型
    /// @{
    /// 服务器类别枚举
    // 所有服务器
    // 游戏服务器
    // 网关服务器
    // 坐标服务器
    // NPC服务器
    // 聊天服务器
    // 日志服务器
    // 数据服务器
    // 认证中心
    // 认证前端
    // 管理服务器
    // 认证桥接服务
    // 机器人服务器
    // 跨服配对服务器
    // Flash策略服务器
    // 军团服务器
    // 活动服务器
    // 社交关系服务器
    /// 认证方式
    /// 服务器语言类型
    // 简体中文
    // 英文
    // 繁体中文
    // 坦克
    // 炮弹
    // npc
    // 物品
    // ai npc
    // BUFF
    // 据点
    // 传送门
    // 未知
    // 未知
    // 坦克
    // 炮弹
    // 物品
    // Npc
    // 砖块
    // 基地
    // 炮塔
    // 爆炸类NPC
    // 修理
    // 冰墙
    // AINPC
    // 普通
    // 世界boss
    // 能力根据召唤者自适应的召唤物
    // 根据地图等级自适应的AINPC
    // 分身npc
    // 死亡模式回合触发NPC
    // 坦克AINPC（仅对坦克有效的技能，对这类型有效）
    // 军团BOSS
    /**
     * 聊天频道枚举定义
     */
    // 密聊频道, 1v1
    // 普通频道，不在房间里的玩家接收
    // 战队频道, 队友接收
    // 房间频道
    // 房间本方阵营频道
    // 战场频道, 场景内可接收
    // 战场本方阵营频道
    // 世界频道
    // 大喇叭频道
    // GM 频道, GM接收
    // 军团频道
    // 跨服频道
    // 频道掩码，同性质频道最大位数
    // 喊话扣除仙石数目
    // 新手最大等级
    /**
     *  聊天信息结构定义
     *  - channel;      // PRIVATE NORMAL SCENE TEAM GUILD GM  GLOBAL
     *  - sender;       // YES     YES    YES   YES  YES   YES  YES
     *  - senderGid;    // NO      YES    YES   NO   NO    No   NO
     *  - senderUuid;   // YES     YES    YES   YES  YES   YES  YES
     *  - receiver;     // YES     NO     NO    NO   NO    NO   NO
     *  - content;      // YES     YES    YES   YES  YES   YES  YES
     */
    public sealed class ChatContents
    {
        public int channel;// 频道
        public byte senderVipLvl;// 发送者的VIP等级
        public byte senderGmLv;// 发送者GM等级
        public byte receiverVipLvl;// 接受者的VIP等级（私聊频道使用）
        public uint senderOid;// 发送者id
        public string senderUuid;// 发送者uuid
        public string sender;// 发送者
        public ulong senderGid;// 发送者GID (opional) 用来显示头顶泡泡
        public uint receiverOid;// 接受者id
        public string receiverUuid;// 接受者uuid
        public string receiver;// 接受者
        public string content;// 内容
        public string paramVec;// 客户端参数列表
        public void ReadFromStream(BinaryReader reader)
        {
            channel = reader.ReadInt32();
            senderVipLvl = reader.ReadByte();
            senderGmLv = reader.ReadByte();
            receiverVipLvl = reader.ReadByte();
            senderOid = reader.ReadUInt32();
            senderUuid = reader.ReadString();
            sender = reader.ReadString();
            senderGid = reader.ReadUInt64();
            receiverOid = reader.ReadUInt32();
            receiverUuid = reader.ReadString();
            receiver = reader.ReadString();
            content = reader.ReadString();
            paramVec = reader.ReadString();
        }
        
        public void WriteToStream(BinaryWriter writer)
        {
            writer.Write(channel);
            writer.Write(senderVipLvl);
            writer.Write(senderGmLv);
            writer.Write(receiverVipLvl);
            writer.Write(senderOid);
            writer.Write(senderUuid);
            writer.Write(sender);
            writer.Write(senderGid);
            writer.Write(receiverOid);
            writer.Write(receiverUuid);
            writer.Write(receiver);
            writer.Write(content);
            writer.Write(paramVec);
        }
    }
}
