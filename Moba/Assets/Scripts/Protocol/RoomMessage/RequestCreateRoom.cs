// Generated by proto_to_csharp.py. DO NOT EDIT!
using System.IO;

namespace GameProtocol.RoomMessage
{
    // MSGTYPE_DECLARE_ASSIGN(MSG_REQUEST_CREATE_ROOM, 700),
    // 创建房间
    public sealed class RequestCreateRoom : IProtocol
    {
        public const short MsgType = MessageType.MSG_REQUEST_CREATE_ROOM;
        public short GetMsgType { get { return MsgType; } }
        public byte Type;// 房间类型 enum ROOM_TYPE
        public byte Mode;// 房间模式 enum BATTLE_MODE
        public uint mapId;// 地图id
        public uint passWord;// 密码，对于联赛类房间不允许设密码，则为ContestID
        public string szName;// 房间名
        public uint ItemId;// 使用的物品ID
        
        public static void Send(byte type, byte mode, uint mapId, uint passWord, string szName, uint itemId, object className)
        {
            var packet = new RequestCreateRoom
            {
                Type = type,
                Mode = mode,
                mapId = mapId,
                passWord = passWord,
                szName = szName,
                ItemId = itemId
            };
            NetMessage.Send(packet.BuildPacket(), className);
        }
        
        public byte[] BuildPacket()
        {
            var buffer = ProtocolBuffer.Writer;
            buffer.Write(MsgType);
            buffer.Write(ProtocolBuffer.Zero);
            WriteToStream(buffer);
            return ProtocolBuffer.CacheStream.ToArray();
        }
        
        public void ReadFromStream(BinaryReader reader)
        {
            Type = reader.ReadByte();
            Mode = reader.ReadByte();
            mapId = reader.ReadUInt32();
            passWord = reader.ReadUInt32();
            szName = reader.ReadString();
            ItemId = reader.ReadUInt32();
        }
        
        public void WriteToStream(BinaryWriter writer)
        {
            writer.Write(Type);
            writer.Write(Mode);
            writer.Write(mapId);
            writer.Write(passWord);
            writer.Write(szName);
            writer.Write(ItemId);
        }
    }
}
