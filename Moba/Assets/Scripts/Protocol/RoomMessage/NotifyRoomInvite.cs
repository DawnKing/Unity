// Generated by proto_to_csharp.py. DO NOT EDIT!
using System.IO;

namespace GameProtocol.RoomMessage
{
    // MSGTYPE_DECLARE(MSG_NOTIFY_ROOM_INVITE),
    // 通知客户端，房间邀请
    public sealed class NotifyRoomInvite : IProtocol
    {
        public const short MsgType = MessageType.MSG_NOTIFY_ROOM_INVITE;
        public short GetMsgType { get { return MsgType; } }
        public string start;// 发起玩家名
        public uint RoomId;// 目标房间id
        public byte Type;// 房间类型 enum ROOM_TYPE
        public uint Password;// 房间密码
        public uint StartId;// 发起玩家id
        public uint MapId;// 地图id
        public uint BattleMode;// 匹配模式选择 BATTLE_MODE
        
        public static void Send(string start, uint roomId, byte type, uint password, uint startId, uint mapId, uint battleMode, object className)
        {
            var packet = new NotifyRoomInvite
            {
                start = start,
                RoomId = roomId,
                Type = type,
                Password = password,
                StartId = startId,
                MapId = mapId,
                BattleMode = battleMode
            };
            NetMessage.Send(packet.BuildPacket(), className);
        }
        
        public byte[] BuildPacket()
        {
            var buffer = ProtocolBuffer.Writer;
            buffer.Write(MsgType);
            buffer.Write(ProtocolBuffer.Zero);
            WriteToStream(buffer);
            return ProtocolBuffer.CacheStream.ToArray();
        }
        
        public void ReadFromStream(BinaryReader reader)
        {
            start = reader.ReadString();
            RoomId = reader.ReadUInt32();
            Type = reader.ReadByte();
            Password = reader.ReadUInt32();
            StartId = reader.ReadUInt32();
            MapId = reader.ReadUInt32();
            BattleMode = reader.ReadUInt32();
        }
        
        public void WriteToStream(BinaryWriter writer)
        {
            writer.Write(start);
            writer.Write(RoomId);
            writer.Write(Type);
            writer.Write(Password);
            writer.Write(StartId);
            writer.Write(MapId);
            writer.Write(BattleMode);
        }
    }
}
