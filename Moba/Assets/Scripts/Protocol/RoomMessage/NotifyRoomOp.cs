// Generated by proto_to_csharp.py. DO NOT EDIT!
using System.IO;

namespace GameProtocol.RoomMessage
{
    // MSGTYPE_DECLARE(MSG_NOTIFY_ROOM_OP),
    // 通知队伍操作结果
    public sealed class NotifyRoomOp : IProtocol
    {
        public const short MsgType = MessageType.MSG_NOTIFY_ROOM_OP;
        public short GetMsgType { get { return MsgType; } }
        public byte roomOp;// 操作类型
        public uint StartOid;// 操作的发起者
        public uint Target;// 目标角色
        
        public static void Send(byte roomOp, uint startOid, uint target, object className)
        {
            var packet = new NotifyRoomOp
            {
                roomOp = roomOp,
                StartOid = startOid,
                Target = target
            };
            NetMessage.Send(packet.BuildPacket(), className);
        }
        
        public byte[] BuildPacket()
        {
            var buffer = ProtocolBuffer.Writer;
            buffer.Write(MsgType);
            buffer.Write(ProtocolBuffer.Zero);
            WriteToStream(buffer);
            return ProtocolBuffer.CacheStream.ToArray();
        }
        
        public void ReadFromStream(BinaryReader reader)
        {
            roomOp = reader.ReadByte();
            StartOid = reader.ReadUInt32();
            Target = reader.ReadUInt32();
        }
        
        public void WriteToStream(BinaryWriter writer)
        {
            writer.Write(roomOp);
            writer.Write(StartOid);
            writer.Write(Target);
        }
    }
}
