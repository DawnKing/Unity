// Generated by proto_to_csharp.py. DO NOT EDIT!
using System.IO;

using GameProtocol.BulkDataType;
namespace GameProtocol.RoomMessage
{
    // MSGTYPE_DECLARE(MSG_NOTIFY_START_MATCH),
    // 通知开始个人赛配对倒计时
    public sealed class NotifyStartMatch : IProtocol
    {
        public const short MsgType = MessageType.MSG_NOTIFY_START_MATCH;
        public short GetMsgType { get { return MsgType; } }
        public uint PairTime;// 匹配开始时间
        public PvpPairInfo pairInfo;// 匹配信息
        
        public static void Send(uint pairTime, PvpPairInfo pairInfo, object className)
        {
            var packet = new NotifyStartMatch
            {
                PairTime = pairTime,
                pairInfo = pairInfo
            };
            NetMessage.Send(packet.BuildPacket(), className);
        }
        
        public byte[] BuildPacket()
        {
            var buffer = ProtocolBuffer.Writer;
            buffer.Write(MsgType);
            buffer.Write(ProtocolBuffer.Zero);
            WriteToStream(buffer);
            return ProtocolBuffer.CacheStream.ToArray();
        }
        
        public void ReadFromStream(BinaryReader reader)
        {
            PairTime = reader.ReadUInt32();
            pairInfo = new PvpPairInfo();
            pairInfo.ReadFromStream(reader);
        }
        
        public void WriteToStream(BinaryWriter writer)
        {
            writer.Write(PairTime);
            pairInfo.WriteToStream(writer);
        }
    }
}
