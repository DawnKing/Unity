// Generated by proto_to_csharp.py. DO NOT EDIT!
using System.IO;

namespace GameProtocol.RoomMessage
{
    // 通知gate更新3V3信息
    public sealed class NotifyUpdate3V3Info : IProtocol
    {
        public const short MsgType = MessageType.MSG_NOTIFY_UPDATE_3V3_INFO;
        public short GetMsgType { get { return MsgType; } }
        public uint m_n3V3Elo;// 积分
        public byte isWin;// 是否胜利
        
        public static void Send(uint m_n3V3Elo, byte isWin, object className)
        {
            var packet = new NotifyUpdate3V3Info
            {
                m_n3V3Elo = m_n3V3Elo,
                isWin = isWin
            };
            NetMessage.Send(packet.BuildPacket(), className);
        }
        
        public byte[] BuildPacket()
        {
            var buffer = ProtocolBuffer.Writer;
            buffer.Write(MsgType);
            buffer.Write(ProtocolBuffer.Zero);
            WriteToStream(buffer);
            return ProtocolBuffer.CacheStream.ToArray();
        }
        
        public void ReadFromStream(BinaryReader reader)
        {
            m_n3V3Elo = reader.ReadUInt32();
            isWin = reader.ReadByte();
        }
        
        public void WriteToStream(BinaryWriter writer)
        {
            writer.Write(m_n3V3Elo);
            writer.Write(isWin);
        }
    }
}
