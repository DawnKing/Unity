// Generated by proto_to_csharp.py. DO NOT EDIT!
using System.IO;

namespace GameProtocol.RoomMessage
{
    // MSGTYPE_DECLARE(MSG_NOTIFY_KICKOUT_COUNTDOWN),
    // 通知玩家房间踢人倒计时
    public sealed class NotifyKickoutCountdown : IProtocol
    {
        public const short MsgType = MessageType.MSG_NOTIFY_KICKOUT_COUNTDOWN;
        public short GetMsgType { get { return MsgType; } }
        public uint charId;// 目标玩家
        public uint Count;// 倒计时时间
        
        public static void Send(uint charId, uint count, object className)
        {
            var packet = new NotifyKickoutCountdown
            {
                charId = charId,
                Count = count
            };
            NetMessage.Send(packet.BuildPacket(), className);
        }
        
        public byte[] BuildPacket()
        {
            var buffer = ProtocolBuffer.Writer;
            buffer.Write(MsgType);
            buffer.Write(ProtocolBuffer.Zero);
            WriteToStream(buffer);
            return ProtocolBuffer.CacheStream.ToArray();
        }
        
        public void ReadFromStream(BinaryReader reader)
        {
            charId = reader.ReadUInt32();
            Count = reader.ReadUInt32();
        }
        
        public void WriteToStream(BinaryWriter writer)
        {
            writer.Write(charId);
            writer.Write(Count);
        }
    }
}
