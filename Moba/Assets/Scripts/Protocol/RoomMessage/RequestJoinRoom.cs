// Generated by proto_to_csharp.py. DO NOT EDIT!
using System.IO;

namespace GameProtocol.RoomMessage
{
    // MSGTYPE_DECLARE(MSG_REQUEST_JOIN_ROOM),
    // 加入房间
    public sealed class RequestJoinRoom : IProtocol
    {
        public const short MsgType = MessageType.MSG_REQUEST_JOIN_ROOM;
        public short GetMsgType { get { return MsgType; } }
        public uint RoomId;// 房间id, id=0,表示自动加入房间
        public byte Type;// 房间类型 enum ROOM_TYPE
        public byte Mode;// 战斗模式选择，用于自动加入房间的过滤条件 enum BATTLE_MODE
        public uint mapId;// 用于PVE自动加入房间的过滤条件，地图id
        public uint Password;// 房间密码
        public uint ContestId;// 邀请赛需要指定对阵ID
        
        public static void Send(uint roomId, byte type, byte mode, uint mapId, uint password, uint contestId, object className)
        {
            var packet = new RequestJoinRoom
            {
                RoomId = roomId,
                Type = type,
                Mode = mode,
                mapId = mapId,
                Password = password,
                ContestId = contestId
            };
            NetMessage.Send(packet.BuildPacket(), className);
        }
        
        public byte[] BuildPacket()
        {
            var buffer = ProtocolBuffer.Writer;
            buffer.Write(MsgType);
            buffer.Write(ProtocolBuffer.Zero);
            WriteToStream(buffer);
            return ProtocolBuffer.CacheStream.ToArray();
        }
        
        public void ReadFromStream(BinaryReader reader)
        {
            RoomId = reader.ReadUInt32();
            Type = reader.ReadByte();
            Mode = reader.ReadByte();
            mapId = reader.ReadUInt32();
            Password = reader.ReadUInt32();
            ContestId = reader.ReadUInt32();
        }
        
        public void WriteToStream(BinaryWriter writer)
        {
            writer.Write(RoomId);
            writer.Write(Type);
            writer.Write(Mode);
            writer.Write(mapId);
            writer.Write(Password);
            writer.Write(ContestId);
        }
    }
}
