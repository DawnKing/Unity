// Generated by proto_to_csharp.py. DO NOT EDIT!
using System.IO;

namespace GameProtocol.RoomMessage
{
    // MSGTYPE_DECLARE(MSG_NOTIFY_SCENE_CHANGE_CAMP),
    // 通知客户端，切换阵营
    public sealed class NotifySceneChangeCamp : IProtocol
    {
        public const short MsgType = MessageType.MSG_NOTIFY_SCENE_CHANGE_CAMP;
        public short GetMsgType { get { return MsgType; } }
        public uint SceneId;// 场景ID
        public byte campId;// 阵营ID
        public uint Time;// 选择时间
        public uint LockNum;// 当前阵营可选择的人数
        
        public static void Send(uint sceneId, byte campId, uint time, uint lockNum, object className)
        {
            var packet = new NotifySceneChangeCamp
            {
                SceneId = sceneId,
                campId = campId,
                Time = time,
                LockNum = lockNum
            };
            NetMessage.Send(packet.BuildPacket(), className);
        }
        
        public byte[] BuildPacket()
        {
            var buffer = ProtocolBuffer.Writer;
            buffer.Write(MsgType);
            buffer.Write(ProtocolBuffer.Zero);
            WriteToStream(buffer);
            return ProtocolBuffer.CacheStream.ToArray();
        }
        
        public void ReadFromStream(BinaryReader reader)
        {
            SceneId = reader.ReadUInt32();
            campId = reader.ReadByte();
            Time = reader.ReadUInt32();
            LockNum = reader.ReadUInt32();
        }
        
        public void WriteToStream(BinaryWriter writer)
        {
            writer.Write(SceneId);
            writer.Write(campId);
            writer.Write(Time);
            writer.Write(LockNum);
        }
    }
}
