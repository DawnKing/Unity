// Generated by proto_to_csharp.py. DO NOT EDIT!
using System.IO;

namespace GameProtocol.RoomMessage
{
    // global->track
    public sealed class RequestMatchRoomCharData : IProtocol
    {
        public const short MsgType = MessageType.MSG_REQUEST_MATCH_ROOM_CHAR_DATA;
        public short GetMsgType { get { return MsgType; } }
        public uint SceneId;// 战场ID
        public uint RoomType;// 房间类型 enum ROOM_TYPE
        public uint TeamId;// 战队ID
        public uint GuildId;// 军团ID
        public uint RoomId;// 房间ID
        public uint Camp;// 阵营
        
        public static void Send(uint sceneId, uint roomType, uint teamId, uint guildId, uint roomId, uint camp, object className)
        {
            var packet = new RequestMatchRoomCharData
            {
                SceneId = sceneId,
                RoomType = roomType,
                TeamId = teamId,
                GuildId = guildId,
                RoomId = roomId,
                Camp = camp
            };
            NetMessage.Send(packet.BuildPacket(), className);
        }
        
        public byte[] BuildPacket()
        {
            var buffer = ProtocolBuffer.Writer;
            buffer.Write(MsgType);
            buffer.Write(ProtocolBuffer.Zero);
            WriteToStream(buffer);
            return ProtocolBuffer.CacheStream.ToArray();
        }
        
        public void ReadFromStream(BinaryReader reader)
        {
            SceneId = reader.ReadUInt32();
            RoomType = reader.ReadUInt32();
            TeamId = reader.ReadUInt32();
            GuildId = reader.ReadUInt32();
            RoomId = reader.ReadUInt32();
            Camp = reader.ReadUInt32();
        }
        
        public void WriteToStream(BinaryWriter writer)
        {
            writer.Write(SceneId);
            writer.Write(RoomType);
            writer.Write(TeamId);
            writer.Write(GuildId);
            writer.Write(RoomId);
            writer.Write(Camp);
        }
    }
}
