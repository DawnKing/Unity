// Generated by proto_to_csharp.py. DO NOT EDIT!
using System.IO;

namespace GameProtocol.MasterPrenticeMessage
{
    // 通知奖励发放结果
    public sealed class NotifyDrawSocialQuestResult : IProtocol
    {
        public const short MsgType = MessageType.MSG_NOTIFY_DRAW_SOCIAL_AWARD_RESULT;
        public short GetMsgType { get { return MsgType; } }
        public uint Succeed;// 奖励领取结果
        public uint Type;// 关系类型
        public uint RelId;// 关系ID
        public uint AwardId;// 奖励ID
        public uint QuestId;// 任务ID
        
        public static void Send(uint succeed, uint type, uint relId, uint awardId, uint questId, object className)
        {
            var packet = new NotifyDrawSocialQuestResult
            {
                Succeed = succeed,
                Type = type,
                RelId = relId,
                AwardId = awardId,
                QuestId = questId
            };
            NetMessage.Send(packet.BuildPacket(), className);
        }
        
        public byte[] BuildPacket()
        {
            var buffer = ProtocolBuffer.Writer;
            buffer.Write(MsgType);
            buffer.Write(ProtocolBuffer.Zero);
            WriteToStream(buffer);
            return ProtocolBuffer.CacheStream.ToArray();
        }
        
        public void ReadFromStream(BinaryReader reader)
        {
            Succeed = reader.ReadUInt32();
            Type = reader.ReadUInt32();
            RelId = reader.ReadUInt32();
            AwardId = reader.ReadUInt32();
            QuestId = reader.ReadUInt32();
        }
        
        public void WriteToStream(BinaryWriter writer)
        {
            writer.Write(Succeed);
            writer.Write(Type);
            writer.Write(RelId);
            writer.Write(AwardId);
            writer.Write(QuestId);
        }
    }
}
