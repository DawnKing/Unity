// Generated by proto_to_csharp.py. DO NOT EDIT!
using System.IO;

namespace GameProtocol.SystemMessage
{
    /// GameSvr - > Client 通知ping值
    public sealed class NotifyPingGameSvr : IProtocol
    {
        public const short MsgType = MessageType.MSG_GAME_NOTIFY_PING;
        public short GetMsgType { get { return MsgType; } }
        public uint time;// gameSvr发送消息的时间
        public uint[] Content;
        
        public static void Send(uint time, uint[] content, object className)
        {
            var packet = new NotifyPingGameSvr
            {
                time = time,
                Content = content
            };
            NetMessage.Send(packet.BuildPacket(), className);
        }
        
        public byte[] BuildPacket()
        {
            var buffer = ProtocolBuffer.Writer;
            buffer.Write(MsgType);
            buffer.Write(ProtocolBuffer.Zero);
            WriteToStream(buffer);
            return ProtocolBuffer.CacheStream.ToArray();
        }
        
        public void ReadFromStream(BinaryReader reader)
        {
            time = reader.ReadUInt32();
            var length2 = reader.ReadUInt16();
            Content = new uint[length2];
            for (var i2 = 0; i2 < length2; i2++)
            {
                Content[i2] = reader.ReadUInt32();
            }
        }
        
        public void WriteToStream(BinaryWriter writer)
        {
            writer.Write(time);
            ushort count2 = (ushort)(Content == null ? 0 : Content.Length);
            writer.Write(count2);
            for(var i2 = 0; i2 < count2; i2++)
            {
                writer.Write(Content[i2]);
            }
        }
    }
}
