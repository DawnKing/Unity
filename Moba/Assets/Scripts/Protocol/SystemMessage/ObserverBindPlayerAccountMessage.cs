// Generated by proto_to_csharp.py. DO NOT EDIT!
using System.IO;

namespace GameProtocol.SystemMessage
{
    // MSGTYPE_DECLARE(MSG_OBSERVER_BIND_PLAYER_ACCOUNT),
    // 绑定需要附身的玩家账号
    public sealed class ObserverBindPlayerAccountMessage : IProtocol
    {
        public const short MsgType = MessageType.MSG_OBSERVER_BIND_PLAYER_ACCOUNT;
        public short GetMsgType { get { return MsgType; } }
        public uint acctId;// 附身玩家账号id
        public uint clientId;// 附身玩家client
        
        public static void Send(uint acctId, uint clientId, object className)
        {
            var packet = new ObserverBindPlayerAccountMessage
            {
                acctId = acctId,
                clientId = clientId
            };
            NetMessage.Send(packet.BuildPacket(), className);
        }
        
        public byte[] BuildPacket()
        {
            var buffer = ProtocolBuffer.Writer;
            buffer.Write(MsgType);
            buffer.Write(ProtocolBuffer.Zero);
            WriteToStream(buffer);
            return ProtocolBuffer.CacheStream.ToArray();
        }
        
        public void ReadFromStream(BinaryReader reader)
        {
            acctId = reader.ReadUInt32();
            clientId = reader.ReadUInt32();
        }
        
        public void WriteToStream(BinaryWriter writer)
        {
            writer.Write(acctId);
            writer.Write(clientId);
        }
    }
}
