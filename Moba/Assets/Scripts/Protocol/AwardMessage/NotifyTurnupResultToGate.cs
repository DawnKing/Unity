// Generated by proto_to_csharp.py. DO NOT EDIT!
using System.IO;

namespace GameProtocol.AwardMessage
{
    /// 通知翻牌结果给gatesvr
    public sealed class NotifyTurnupResultToGate : IProtocol
    {
        public const short MsgType = MessageType.MSG_NOTIFY_TURNUP_RESULT_TOGATE;
        public short GetMsgType { get { return MsgType; } }
        public TurnupInfo info;// 奖励信息
        public uint turnupType;// 翻牌类型
        public int type;// 请求类型 TURNUP_REQUEST_TYPE
        
        public static void Send(TurnupInfo info, uint turnupType, int type, object className)
        {
            var packet = new NotifyTurnupResultToGate
            {
                info = info,
                turnupType = turnupType,
                type = type
            };
            NetMessage.Send(packet.BuildPacket(), className);
        }
        
        public byte[] BuildPacket()
        {
            var buffer = ProtocolBuffer.Writer;
            buffer.Write(MsgType);
            buffer.Write(ProtocolBuffer.Zero);
            WriteToStream(buffer);
            return ProtocolBuffer.CacheStream.ToArray();
        }
        
        public void ReadFromStream(BinaryReader reader)
        {
            info = new TurnupInfo();
            info.ReadFromStream(reader);
            turnupType = reader.ReadUInt32();
            type = reader.ReadInt32();
        }
        
        public void WriteToStream(BinaryWriter writer)
        {
            info.WriteToStream(writer);
            writer.Write(turnupType);
            writer.Write(type);
        }
    }
}
