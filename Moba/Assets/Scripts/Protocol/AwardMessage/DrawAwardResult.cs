// Generated by proto_to_csharp.py. DO NOT EDIT!
using System.IO;

namespace GameProtocol.AwardMessage
{
    // MSGTYPE_DECLARE(MSG_NOTIFY_DRAW_AWARD_RESULT),
    // 通知奖励领取结果
    public sealed class DrawAwardResult : IProtocol
    {
        public const short MsgType = MessageType.MSG_NOTIFY_DRAW_AWARD_RESULT;
        public short GetMsgType { get { return MsgType; } }
        public uint awardId;// 奖励id
        public byte isOk;// 是否领取成功
        public uint sysTip;// 系统提示
        
        public static void Send(uint awardId, byte isOk, uint sysTip, object className)
        {
            var packet = new DrawAwardResult
            {
                awardId = awardId,
                isOk = isOk,
                sysTip = sysTip
            };
            NetMessage.Send(packet.BuildPacket(), className);
        }
        
        public byte[] BuildPacket()
        {
            var buffer = ProtocolBuffer.Writer;
            buffer.Write(MsgType);
            buffer.Write(ProtocolBuffer.Zero);
            WriteToStream(buffer);
            return ProtocolBuffer.CacheStream.ToArray();
        }
        
        public void ReadFromStream(BinaryReader reader)
        {
            awardId = reader.ReadUInt32();
            isOk = reader.ReadByte();
            sysTip = reader.ReadUInt32();
        }
        
        public void WriteToStream(BinaryWriter writer)
        {
            writer.Write(awardId);
            writer.Write(isOk);
            writer.Write(sysTip);
        }
    }
}
