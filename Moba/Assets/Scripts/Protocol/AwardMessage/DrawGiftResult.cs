// Generated by proto_to_csharp.py. DO NOT EDIT!
using System.IO;

namespace GameProtocol.AwardMessage
{
    // MSGTYPE_DECLARE(MSG_NOTIFY_DRAW_GIFT_RESULT),
    // 通知礼包领取结果
    public sealed class DrawGiftResult : IProtocol
    {
        public const short MsgType = MessageType.MSG_NOTIFY_DRAW_GIFT_RESULT;
        public short GetMsgType { get { return MsgType; } }
        public const int DGRT_SUCCESS = 1;// 领取成功
        public const int DGRT_IS_DRAW = 2;// 礼包已被领取过
        public const int DGRT_NO_YELLOW = 3;// 不是黄钻会员
        public const int DGRT_HTTP_ERR = 4;// 黄钻请求接口返回错误
        public const int DGRT_PACKAGE_FULL = 5;// 包裹已满,请先清理包裹
        public const int DGRT_COIN_MAX = 6;// 银币已达上限
        public const int DGRT_DATA_ERR = 7;// 数据错误
        public const int DGRT_NO_AWARD = 8;// 没有奖励数据
        public byte GiftType;// 礼包领取类型 enum AWARD_GIFT_TYPE
        public byte Res;// 领取结果
        public string errMsg;// m_bRes = 4时,请求接口返回错误信息
        
        public static void Send(byte giftType, byte res, string errMsg, object className)
        {
            var packet = new DrawGiftResult
            {
                GiftType = giftType,
                Res = res,
                errMsg = errMsg
            };
            NetMessage.Send(packet.BuildPacket(), className);
        }
        
        public byte[] BuildPacket()
        {
            var buffer = ProtocolBuffer.Writer;
            buffer.Write(MsgType);
            buffer.Write(ProtocolBuffer.Zero);
            WriteToStream(buffer);
            return ProtocolBuffer.CacheStream.ToArray();
        }
        
        public void ReadFromStream(BinaryReader reader)
        {
            GiftType = reader.ReadByte();
            Res = reader.ReadByte();
            errMsg = reader.ReadString();
        }
        
        public void WriteToStream(BinaryWriter writer)
        {
            writer.Write(GiftType);
            writer.Write(Res);
            writer.Write(errMsg);
        }
    }
}
