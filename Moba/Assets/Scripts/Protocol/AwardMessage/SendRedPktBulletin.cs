// Generated by proto_to_csharp.py. DO NOT EDIT!
using System.IO;

namespace GameProtocol.AwardMessage
{
    // MSGTYPE_DECLARE(MSG_SEND_REDPKT_BULLETIN),
    // gate-->track-->global 玩家发红包的公告
    public sealed class SendRedPktBulletin : IProtocol
    {
        public const short MsgType = MessageType.MSG_SEND_REDPKT_BULLETIN;
        public short GetMsgType { get { return MsgType; } }
        public uint BltId;// 公告ID
        public string[] argList;// 公告参数
        
        public static void Send(uint bltId, string[] argList, object className)
        {
            var packet = new SendRedPktBulletin
            {
                BltId = bltId,
                argList = argList
            };
            NetMessage.Send(packet.BuildPacket(), className);
        }
        
        public byte[] BuildPacket()
        {
            var buffer = ProtocolBuffer.Writer;
            buffer.Write(MsgType);
            buffer.Write(ProtocolBuffer.Zero);
            WriteToStream(buffer);
            return ProtocolBuffer.CacheStream.ToArray();
        }
        
        public void ReadFromStream(BinaryReader reader)
        {
            BltId = reader.ReadUInt32();
            var length2 = reader.ReadUInt16();
            argList = new string[length2];
            for (var i2 = 0; i2 < length2; i2++)
            {
                argList[i2] = reader.ReadString();
            }
        }
        
        public void WriteToStream(BinaryWriter writer)
        {
            writer.Write(BltId);
            ushort count2 = (ushort)(argList == null ? 0 : argList.Length);
            writer.Write(count2);
            for(var i2 = 0; i2 < count2; i2++)
            {
                writer.Write(argList[i2]);
            }
        }
    }
}
