// Generated by proto_to_csharp.py. DO NOT EDIT!
using System.IO;

namespace GameProtocol.TradeMessage
{
    /// 商品赠送给他人
    public sealed class PresentMultiGoodsMessage : IProtocol
    {
        public const short MsgType = MessageType.MSG_GOODS_SHOP_LARGESS_MULTI;
        public short GetMsgType { get { return MsgType; } }
        public GoodsBuyInfo[] infos;// 赠送的列表
        public string receiverName;// 接收者名字
        public string text;// 赠言
        
        public static void Send(GoodsBuyInfo[] infos, string receiverName, string text, object className)
        {
            var packet = new PresentMultiGoodsMessage
            {
                infos = infos,
                receiverName = receiverName,
                text = text
            };
            NetMessage.Send(packet.BuildPacket(), className);
        }
        
        public byte[] BuildPacket()
        {
            var buffer = ProtocolBuffer.Writer;
            buffer.Write(MsgType);
            buffer.Write(ProtocolBuffer.Zero);
            WriteToStream(buffer);
            return ProtocolBuffer.CacheStream.ToArray();
        }
        
        public void ReadFromStream(BinaryReader reader)
        {
            var length1 = reader.ReadUInt16();
            infos = new GoodsBuyInfo[length1];
            for (var i1 = 0; i1 < length1; i1++)
            {
                infos[i1] = new GoodsBuyInfo();
                infos[i1].ReadFromStream(reader);
            }
            receiverName = reader.ReadString();
            text = reader.ReadString();
        }
        
        public void WriteToStream(BinaryWriter writer)
        {
            ushort count1 = (ushort)(infos == null ? 0 : infos.Length);
            writer.Write(count1);
            for(var i1 = 0; i1 < count1; i1++)
            {
                infos[i1].WriteToStream(writer);
            }
            writer.Write(receiverName);
            writer.Write(text);
        }
    }
}
