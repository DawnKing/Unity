// Generated by proto_to_csharp.py. DO NOT EDIT!
using System.IO;

namespace GameProtocol.TradeMessage
{
    /// 商城购买失败枚举
    //
    // 无此商品或者未发售
    // 没有模板数据
    // 价格发生变化
    // 限量物品数量不足，与13枚举区别
    // 数据库操作失败
    // 等级不足
    // 货币不足
    // 代币不足
    // 只有点券购买的商品才能赠送
    // 不同类型的商品不能一起购买
    // 包裹栏不足，无法购买
    // 拥有此商品
    // 限量物品买的一个不剩
    // 限量物品今天买的一个不剩
    // 单人限购
    // 赠送单人限购
    // 坦克等级不足
    // VIP等级不足
    // 赠送点数不足
    /// 通知商品购买失败
    public sealed class RejectGoodsBuy : IProtocol
    {
        public const short MsgType = MessageType.MSG_BUY_GOODS_REJECT;
        public short GetMsgType { get { return MsgType; } }
        public int type;
        public int Count;// 单人限购时，还可以(购买/赠送)的数量
        
        public static void Send(int type, int count, object className)
        {
            var packet = new RejectGoodsBuy
            {
                type = type,
                Count = count
            };
            NetMessage.Send(packet.BuildPacket(), className);
        }
        
        public byte[] BuildPacket()
        {
            var buffer = ProtocolBuffer.Writer;
            buffer.Write(MsgType);
            buffer.Write(ProtocolBuffer.Zero);
            WriteToStream(buffer);
            return ProtocolBuffer.CacheStream.ToArray();
        }
        
        public void ReadFromStream(BinaryReader reader)
        {
            type = reader.ReadInt32();
            Count = reader.ReadInt32();
        }
        
        public void WriteToStream(BinaryWriter writer)
        {
            writer.Write(type);
            writer.Write(Count);
        }
    }
}
