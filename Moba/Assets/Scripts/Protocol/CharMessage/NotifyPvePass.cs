// Generated by proto_to_csharp.py. DO NOT EDIT!
using System.IO;

namespace GameProtocol.CharMessage
{
    public sealed class NotifyPvePass : IProtocol
    {
        public const short MsgType = MessageType.MSG_NOTIFY_PASS_PVE;
        public short GetMsgType { get { return MsgType; } }
        public uint MapId;// 地图id
        public uint UseTime;// 通关时间
        public uint RecordTime;// 第一名的通关时间
        
        public static void Send(uint mapId, uint useTime, uint recordTime, object className)
        {
            var packet = new NotifyPvePass
            {
                MapId = mapId,
                UseTime = useTime,
                RecordTime = recordTime
            };
            NetMessage.Send(packet.BuildPacket(), className);
        }
        
        public byte[] BuildPacket()
        {
            var buffer = ProtocolBuffer.Writer;
            buffer.Write(MsgType);
            buffer.Write(ProtocolBuffer.Zero);
            WriteToStream(buffer);
            return ProtocolBuffer.CacheStream.ToArray();
        }
        
        public void ReadFromStream(BinaryReader reader)
        {
            MapId = reader.ReadUInt32();
            UseTime = reader.ReadUInt32();
            RecordTime = reader.ReadUInt32();
        }
        
        public void WriteToStream(BinaryWriter writer)
        {
            writer.Write(MapId);
            writer.Write(UseTime);
            writer.Write(RecordTime);
        }
    }
}
