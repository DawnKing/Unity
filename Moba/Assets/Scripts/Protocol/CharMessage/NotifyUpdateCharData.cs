// Generated by proto_to_csharp.py. DO NOT EDIT!
using System.IO;

namespace GameProtocol.CharMessage
{
    /// 通知同步角色数据
    public sealed class NotifyUpdateCharData : IProtocol
    {
        public const short MsgType = MessageType.MSG_NOTIFY_UPDATE_CHAR_DATA;
        public short GetMsgType { get { return MsgType; } }
        public const int CHAR_UPDATE_DECORATE = 1;//更新角色主题信息
        public const int CHAR_SETTING = 3;// 玩家设置
        public const int CHAR_NAME = 4;// 角色名称
        public const int CHAR_LEVEL = 5;// 角色等级
        public const int CHAR_ELO = 6;// 角色天梯elo
        public const int CHAR_LEISURE_ELO = 7;// 角色（休闲）匹配赛ELO
        public const int CHAR_ELO_SECTION_ID = 8;// 天梯阶段ID
        public const int CHAR_GOLDEN_POOL_COUNT = 9;// 更新金币池数量
        public const int CHAR_UPDATE_3V3_ELO = 10;// 更新3v3争霸赛elo
        public byte Type;// 更新类型
        public uint upUint;// 更新的数值
        public string upStr;// 更新字符串,需要根据字段类型转型
        
        public static void Send(byte type, uint upUint, string upStr, object className)
        {
            var packet = new NotifyUpdateCharData
            {
                Type = type,
                upUint = upUint,
                upStr = upStr
            };
            NetMessage.Send(packet.BuildPacket(), className);
        }
        
        public byte[] BuildPacket()
        {
            var buffer = ProtocolBuffer.Writer;
            buffer.Write(MsgType);
            buffer.Write(ProtocolBuffer.Zero);
            WriteToStream(buffer);
            return ProtocolBuffer.CacheStream.ToArray();
        }
        
        public void ReadFromStream(BinaryReader reader)
        {
            Type = reader.ReadByte();
            upUint = reader.ReadUInt32();
            upStr = reader.ReadString();
        }
        
        public void WriteToStream(BinaryWriter writer)
        {
            writer.Write(Type);
            writer.Write(upUint);
            writer.Write(upStr);
        }
    }
}
