// Generated by proto_to_csharp.py. DO NOT EDIT!
using System.IO;

namespace GameProtocol.CharMessage
{
    ///tracksvr->gatesvr
    public sealed class SyncCharGuildToGate : IProtocol
    {
        public const short MsgType = MessageType.MSG_SYNC_CHAR_GUILD_TOGATE;
        public short GetMsgType { get { return MsgType; } }
        public string charUuid;// 角色uuid
        public uint GuildId;// 军团ID
        public uint TeamId;// 战队id
        public uint TeamMerit;// 战队贡献
        public string guildName;// 军团名称
        public string teamName;// 战队名称
        
        public static void Send(string charUuid, uint guildId, uint teamId, uint teamMerit, string guildName, string teamName, object className)
        {
            var packet = new SyncCharGuildToGate
            {
                charUuid = charUuid,
                GuildId = guildId,
                TeamId = teamId,
                TeamMerit = teamMerit,
                guildName = guildName,
                teamName = teamName
            };
            NetMessage.Send(packet.BuildPacket(), className);
        }
        
        public byte[] BuildPacket()
        {
            var buffer = ProtocolBuffer.Writer;
            buffer.Write(MsgType);
            buffer.Write(ProtocolBuffer.Zero);
            WriteToStream(buffer);
            return ProtocolBuffer.CacheStream.ToArray();
        }
        
        public void ReadFromStream(BinaryReader reader)
        {
            charUuid = reader.ReadString();
            GuildId = reader.ReadUInt32();
            TeamId = reader.ReadUInt32();
            TeamMerit = reader.ReadUInt32();
            guildName = reader.ReadString();
            teamName = reader.ReadString();
        }
        
        public void WriteToStream(BinaryWriter writer)
        {
            writer.Write(charUuid);
            writer.Write(GuildId);
            writer.Write(TeamId);
            writer.Write(TeamMerit);
            writer.Write(guildName);
            writer.Write(teamName);
        }
    }
}
