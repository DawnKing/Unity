// Generated by proto_to_csharp.py. DO NOT EDIT!
using System.IO;

namespace GameProtocol.CharMessage
{
    // 采集屏幕分辨率
    // 加载时间
    // 掉帧统计
    // 自主模式选择
    // MSGTYPE_DECLARE(MSG_CLIENT_DATA_STAT),
    // 客户端数据采集
    public sealed class ClientDataStat : IProtocol
    {
        public const short MsgType = MessageType.MSG_CLIENT_DATA_STAT;
        public short GetMsgType { get { return MsgType; } }
        public byte type;// 采集类型 enum CLIENT_STAT_TYPE
        public byte funcType;// 功能类型。有客户端根据采集类型定义
        public int m_param1;// 参数
        public int m_param2;// 参数
        
        public static void Send(byte type, byte funcType, int m_param1, int m_param2, object className)
        {
            var packet = new ClientDataStat
            {
                type = type,
                funcType = funcType,
                m_param1 = m_param1,
                m_param2 = m_param2
            };
            NetMessage.Send(packet.BuildPacket(), className);
        }
        
        public byte[] BuildPacket()
        {
            var buffer = ProtocolBuffer.Writer;
            buffer.Write(MsgType);
            buffer.Write(ProtocolBuffer.Zero);
            WriteToStream(buffer);
            return ProtocolBuffer.CacheStream.ToArray();
        }
        
        public void ReadFromStream(BinaryReader reader)
        {
            type = reader.ReadByte();
            funcType = reader.ReadByte();
            m_param1 = reader.ReadInt32();
            m_param2 = reader.ReadInt32();
        }
        
        public void WriteToStream(BinaryWriter writer)
        {
            writer.Write(type);
            writer.Write(funcType);
            writer.Write(m_param1);
            writer.Write(m_param2);
        }
    }
}
