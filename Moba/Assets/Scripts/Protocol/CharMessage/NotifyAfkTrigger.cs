// Generated by proto_to_csharp.py. DO NOT EDIT!
using System.IO;

namespace GameProtocol.CharMessage
{
    /// 通知track有玩家触发挂机  game -> track, game->global->track
    public sealed class NotifyAfkTrigger : IProtocol
    {
        public const short MsgType = MessageType.MSG_NOTIFY_AFK_TRIGGER;
        public short GetMsgType { get { return MsgType; } }
        public uint acctId;
        public uint sceneId;
        public uint roomType;
        
        public static void Send(uint acctId, uint sceneId, uint roomType, object className)
        {
            var packet = new NotifyAfkTrigger
            {
                acctId = acctId,
                sceneId = sceneId,
                roomType = roomType
            };
            NetMessage.Send(packet.BuildPacket(), className);
        }
        
        public byte[] BuildPacket()
        {
            var buffer = ProtocolBuffer.Writer;
            buffer.Write(MsgType);
            buffer.Write(ProtocolBuffer.Zero);
            WriteToStream(buffer);
            return ProtocolBuffer.CacheStream.ToArray();
        }
        
        public void ReadFromStream(BinaryReader reader)
        {
            acctId = reader.ReadUInt32();
            sceneId = reader.ReadUInt32();
            roomType = reader.ReadUInt32();
        }
        
        public void WriteToStream(BinaryWriter writer)
        {
            writer.Write(acctId);
            writer.Write(sceneId);
            writer.Write(roomType);
        }
    }
}
