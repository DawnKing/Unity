// Generated by proto_to_csharp.py. DO NOT EDIT!
using System.IO;

namespace GameProtocol.CharMessage
{
    //请求玩家附身（玩家在不同gate）
    public sealed class RequestObserverOtherGatePlayerMessage : IProtocol
    {
        public const short MsgType = MessageType.MSG_REQUEST_OBSERVER_OTHER_GATE_PLAYER;
        public short GetMsgType { get { return MsgType; } }
        public uint observer_acct_id;//附身玩家账号ID
        public string target_name;//目标玩家名
        
        public static void Send(uint observer_acct_id, string target_name, object className)
        {
            var packet = new RequestObserverOtherGatePlayerMessage
            {
                observer_acct_id = observer_acct_id,
                target_name = target_name
            };
            NetMessage.Send(packet.BuildPacket(), className);
        }
        
        public byte[] BuildPacket()
        {
            var buffer = ProtocolBuffer.Writer;
            buffer.Write(MsgType);
            buffer.Write(ProtocolBuffer.Zero);
            WriteToStream(buffer);
            return ProtocolBuffer.CacheStream.ToArray();
        }
        
        public void ReadFromStream(BinaryReader reader)
        {
            observer_acct_id = reader.ReadUInt32();
            target_name = reader.ReadString();
        }
        
        public void WriteToStream(BinaryWriter writer)
        {
            writer.Write(observer_acct_id);
            writer.Write(target_name);
        }
    }
}
