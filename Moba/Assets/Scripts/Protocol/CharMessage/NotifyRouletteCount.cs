// Generated by proto_to_csharp.py. DO NOT EDIT!
using System.IO;

namespace GameProtocol.CharMessage
{
    /// 通知转轮盘的数量
    public sealed class NotifyRouletteCount : IProtocol
    {
        public const short MsgType = MessageType.MSG_NOTIFY_ROULETTE_COUNT;
        public short GetMsgType { get { return MsgType; } }
        public uint RlteType;// 转盘类型 ROULETTE_TYPE
        public uint RlteCount;// 总数量
        public uint RlteStageCount;// 保底数量
        
        public static void Send(uint rlteType, uint rlteCount, uint rlteStageCount, object className)
        {
            var packet = new NotifyRouletteCount
            {
                RlteType = rlteType,
                RlteCount = rlteCount,
                RlteStageCount = rlteStageCount
            };
            NetMessage.Send(packet.BuildPacket(), className);
        }
        
        public byte[] BuildPacket()
        {
            var buffer = ProtocolBuffer.Writer;
            buffer.Write(MsgType);
            buffer.Write(ProtocolBuffer.Zero);
            WriteToStream(buffer);
            return ProtocolBuffer.CacheStream.ToArray();
        }
        
        public void ReadFromStream(BinaryReader reader)
        {
            RlteType = reader.ReadUInt32();
            RlteCount = reader.ReadUInt32();
            RlteStageCount = reader.ReadUInt32();
        }
        
        public void WriteToStream(BinaryWriter writer)
        {
            writer.Write(RlteType);
            writer.Write(RlteCount);
            writer.Write(RlteStageCount);
        }
    }
}
