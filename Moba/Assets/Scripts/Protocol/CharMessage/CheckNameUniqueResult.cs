// Generated by proto_to_csharp.py. DO NOT EDIT!
using System.IO;

namespace GameProtocol.CharMessage
{
    public sealed class CheckNameUniqueResult : IProtocol
    {
        public const short MsgType = MessageType.MSG_CHAR_NAME_UNIQUE_RESULT;
        public short GetMsgType { get { return MsgType; } }
        public const int CNU_UNIQUE = 1;
        public const int CNU_EXIST = 2;
        public const int CNU_SVR_ERROR = 3;// 服务器临时错误
        public uint result;//CNU_RESULT
        
        public static void Send(uint result, object className)
        {
            var packet = new CheckNameUniqueResult
            {
                result = result
            };
            NetMessage.Send(packet.BuildPacket(), className);
        }
        
        public byte[] BuildPacket()
        {
            var buffer = ProtocolBuffer.Writer;
            buffer.Write(MsgType);
            buffer.Write(ProtocolBuffer.Zero);
            WriteToStream(buffer);
            return ProtocolBuffer.CacheStream.ToArray();
        }
        
        public void ReadFromStream(BinaryReader reader)
        {
            result = reader.ReadUInt32();
        }
        
        public void WriteToStream(BinaryWriter writer)
        {
            writer.Write(result);
        }
    }
}
