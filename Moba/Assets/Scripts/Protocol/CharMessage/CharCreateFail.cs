// Generated by proto_to_csharp.py. DO NOT EDIT!
using System.IO;

namespace GameProtocol.CharMessage
{
    public sealed class CharCreateFail : IProtocol
    {
        public const short MsgType = MessageType.MSG_CHARCREATE_REJECTED;
        public short GetMsgType { get { return MsgType; } }
        public const int ERR_CHARNAME_INVALID = 0;// 无效的角色名字
        public const int ERR_CHARNAME_EXIST = 1;// 角色名存在
        public const int ERR_WRONG_POSITION = 2;// 无效的位置号
        public const int ERR_CHARNAME_SENSE = 3;// 含有敏感(非法的字符串)
        public const int ERR_CHARNAME_LENGTH = 4;// 角色名长度非法
        public const int ERR_TEMP_SVR_ERROR = 5;// 服务器临时错误
        public const int ERROR_NO_ERROR = 6;// 检查通过没有错误
        public const int ERR_INIT_OK = 7;// 初始化名称成功
        public const int ERR_SYS_DISABLE = 8;// 服务器禁止创建角色
        public uint reason;//参见上面的枚举
        
        public static void Send(uint reason, object className)
        {
            var packet = new CharCreateFail
            {
                reason = reason
            };
            NetMessage.Send(packet.BuildPacket(), className);
        }
        
        public byte[] BuildPacket()
        {
            var buffer = ProtocolBuffer.Writer;
            buffer.Write(MsgType);
            buffer.Write(ProtocolBuffer.Zero);
            WriteToStream(buffer);
            return ProtocolBuffer.CacheStream.ToArray();
        }
        
        public void ReadFromStream(BinaryReader reader)
        {
            reason = reader.ReadUInt32();
        }
        
        public void WriteToStream(BinaryWriter writer)
        {
            writer.Write(reason);
        }
    }
}
