// Generated by proto_to_csharp.py. DO NOT EDIT!
using System.IO;

namespace GameProtocol.CharMessage
{
    /// 举报玩家
    public sealed class ImpeachBadPlayer : IProtocol
    {
        public const short MsgType = MessageType.MSG_IMPEACH_BAD_PLAYER;
        public short GetMsgType { get { return MsgType; } }
        public byte type;// enum IMPEACH_TYPE
        public uint ActId;// 举被报的玩家id
        public string uuid;// 举被报的角色UUID
        
        public static void Send(byte type, uint actId, string uuid, object className)
        {
            var packet = new ImpeachBadPlayer
            {
                type = type,
                ActId = actId,
                uuid = uuid
            };
            NetMessage.Send(packet.BuildPacket(), className);
        }
        
        public byte[] BuildPacket()
        {
            var buffer = ProtocolBuffer.Writer;
            buffer.Write(MsgType);
            buffer.Write(ProtocolBuffer.Zero);
            WriteToStream(buffer);
            return ProtocolBuffer.CacheStream.ToArray();
        }
        
        public void ReadFromStream(BinaryReader reader)
        {
            type = reader.ReadByte();
            ActId = reader.ReadUInt32();
            uuid = reader.ReadString();
        }
        
        public void WriteToStream(BinaryWriter writer)
        {
            writer.Write(type);
            writer.Write(ActId);
            writer.Write(uuid);
        }
    }
}
