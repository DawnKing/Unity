// Generated by proto_to_csharp.py. DO NOT EDIT!
using System.IO;

namespace GameProtocol.CharMessage
{
    // MSGTYPE_DECLARE(MSG_NOTIFY_CHAR_STATE),
    // 客户端通知玩家房间状态
    public sealed class NotifyCharState : IProtocol
    {
        public const short MsgType = MessageType.MSG_NOTIFY_CHAR_STATE;
        public short GetMsgType { get { return MsgType; } }
        public string szTargetUuid;// 目标uuid
        public byte State;// 玩家状态enum PLAYER_STATE
        public uint RoomId;// 房间id
        public byte RoomType;// 房间类型enum ROOM_TYPE
        public uint SceneId;// 战场id
        public uint GuildId;// 军团id
        public byte GuildLevel;// 军团等级
        public string szGuildName;// 军团名称
        public uint TeamId;// 战队id
        public byte TeamLevel;// 战队等级
        public string szTeamName;// 战队名称
        
        public static void Send(string szTargetUuid, byte state, uint roomId, byte roomType, uint sceneId, uint guildId, byte guildLevel, string szGuildName, uint teamId, byte teamLevel, string szTeamName, object className)
        {
            var packet = new NotifyCharState
            {
                szTargetUuid = szTargetUuid,
                State = state,
                RoomId = roomId,
                RoomType = roomType,
                SceneId = sceneId,
                GuildId = guildId,
                GuildLevel = guildLevel,
                szGuildName = szGuildName,
                TeamId = teamId,
                TeamLevel = teamLevel,
                szTeamName = szTeamName
            };
            NetMessage.Send(packet.BuildPacket(), className);
        }
        
        public byte[] BuildPacket()
        {
            var buffer = ProtocolBuffer.Writer;
            buffer.Write(MsgType);
            buffer.Write(ProtocolBuffer.Zero);
            WriteToStream(buffer);
            return ProtocolBuffer.CacheStream.ToArray();
        }
        
        public void ReadFromStream(BinaryReader reader)
        {
            szTargetUuid = reader.ReadString();
            State = reader.ReadByte();
            RoomId = reader.ReadUInt32();
            RoomType = reader.ReadByte();
            SceneId = reader.ReadUInt32();
            GuildId = reader.ReadUInt32();
            GuildLevel = reader.ReadByte();
            szGuildName = reader.ReadString();
            TeamId = reader.ReadUInt32();
            TeamLevel = reader.ReadByte();
            szTeamName = reader.ReadString();
        }
        
        public void WriteToStream(BinaryWriter writer)
        {
            writer.Write(szTargetUuid);
            writer.Write(State);
            writer.Write(RoomId);
            writer.Write(RoomType);
            writer.Write(SceneId);
            writer.Write(GuildId);
            writer.Write(GuildLevel);
            writer.Write(szGuildName);
            writer.Write(TeamId);
            writer.Write(TeamLevel);
            writer.Write(szTeamName);
        }
    }
}
