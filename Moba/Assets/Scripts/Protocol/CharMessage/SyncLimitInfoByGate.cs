// Generated by proto_to_csharp.py. DO NOT EDIT!
using System.IO;

using GameProtocol.BulkDataType;
namespace GameProtocol.CharMessage
{
    /// 同步玩家的限制信息 gatesvr -> 其他svr
    public sealed class SyncLimitInfoByGate : IProtocol
    {
        public const short MsgType = MessageType.MSG_SYNC_LIMIT_INFO_BYGATE;
        public short GetMsgType { get { return MsgType; } }
        public uint CharId;// 角色id
        public LimitInfo[] infos;// 限制信息
        
        public static void Send(uint charId, LimitInfo[] infos, object className)
        {
            var packet = new SyncLimitInfoByGate
            {
                CharId = charId,
                infos = infos
            };
            NetMessage.Send(packet.BuildPacket(), className);
        }
        
        public byte[] BuildPacket()
        {
            var buffer = ProtocolBuffer.Writer;
            buffer.Write(MsgType);
            buffer.Write(ProtocolBuffer.Zero);
            WriteToStream(buffer);
            return ProtocolBuffer.CacheStream.ToArray();
        }
        
        public void ReadFromStream(BinaryReader reader)
        {
            CharId = reader.ReadUInt32();
            var length2 = reader.ReadUInt16();
            infos = new LimitInfo[length2];
            for (var i2 = 0; i2 < length2; i2++)
            {
                infos[i2] = new LimitInfo();
                infos[i2].ReadFromStream(reader);
            }
        }
        
        public void WriteToStream(BinaryWriter writer)
        {
            writer.Write(CharId);
            ushort count2 = (ushort)(infos == null ? 0 : infos.Length);
            writer.Write(count2);
            for(var i2 = 0; i2 < count2; i2++)
            {
                infos[i2].WriteToStream(writer);
            }
        }
    }
}
