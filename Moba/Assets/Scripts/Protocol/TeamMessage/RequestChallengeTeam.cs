// Generated by proto_to_csharp.py. DO NOT EDIT!
using System.IO;

namespace GameProtocol.TeamMessage
{
    // 请求约战
    public sealed class RequestChallengeTeam : IProtocol
    {
        public const short MsgType = MessageType.MSG_REQUEST_CHALLENGE_TEAM;
        public short GetMsgType { get { return MsgType; } }
        public uint Activity;// 活动类型 参见ACTIVITY_TYPE枚举
        public uint TeamId;// 挑战的对方战队
        public uint Contest;// 联赛对阵标识
        
        public static void Send(uint activity, uint teamId, uint contest, object className)
        {
            var packet = new RequestChallengeTeam
            {
                Activity = activity,
                TeamId = teamId,
                Contest = contest
            };
            NetMessage.Send(packet.BuildPacket(), className);
        }
        
        public byte[] BuildPacket()
        {
            var buffer = ProtocolBuffer.Writer;
            buffer.Write(MsgType);
            buffer.Write(ProtocolBuffer.Zero);
            WriteToStream(buffer);
            return ProtocolBuffer.CacheStream.ToArray();
        }
        
        public void ReadFromStream(BinaryReader reader)
        {
            Activity = reader.ReadUInt32();
            TeamId = reader.ReadUInt32();
            Contest = reader.ReadUInt32();
        }
        
        public void WriteToStream(BinaryWriter writer)
        {
            writer.Write(Activity);
            writer.Write(TeamId);
            writer.Write(Contest);
        }
    }
}
