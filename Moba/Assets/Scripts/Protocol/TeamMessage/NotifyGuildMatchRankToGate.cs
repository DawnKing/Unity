// Generated by proto_to_csharp.py. DO NOT EDIT!
using System.IO;

namespace GameProtocol.TeamMessage
{
    public sealed class NotifyGuildMatchRankToGate : IProtocol
    {
        public const short MsgType = MessageType.MSG_NOTIFY_GUILD_MATCH_RANK_TO_GATE;
        public short GetMsgType { get { return MsgType; } }
        public uint Rank;// 军团赛排名
        public uint RankTime;// 排名刷新时间
        public uint JoinTime;// 加入军团时间
        
        public static void Send(uint rank, uint rankTime, uint joinTime, object className)
        {
            var packet = new NotifyGuildMatchRankToGate
            {
                Rank = rank,
                RankTime = rankTime,
                JoinTime = joinTime
            };
            NetMessage.Send(packet.BuildPacket(), className);
        }
        
        public byte[] BuildPacket()
        {
            var buffer = ProtocolBuffer.Writer;
            buffer.Write(MsgType);
            buffer.Write(ProtocolBuffer.Zero);
            WriteToStream(buffer);
            return ProtocolBuffer.CacheStream.ToArray();
        }
        
        public void ReadFromStream(BinaryReader reader)
        {
            Rank = reader.ReadUInt32();
            RankTime = reader.ReadUInt32();
            JoinTime = reader.ReadUInt32();
        }
        
        public void WriteToStream(BinaryWriter writer)
        {
            writer.Write(Rank);
            writer.Write(RankTime);
            writer.Write(JoinTime);
        }
    }
}
