// Generated by proto_to_csharp.py. DO NOT EDIT!
using System.IO;

namespace GameProtocol.TeamMessage
{
    public sealed class GuildMatchStartPair : IProtocol
    {
        public const short MsgType = MessageType.MSG_GUILD_MATCH_START_PAIR;
        public short GetMsgType { get { return MsgType; } }
        public uint GuildId;
        public uint TrackSvrId;// trackSid
        public uint RoomId;// 房间ID
        
        public static void Send(uint guildId, uint trackSvrId, uint roomId, object className)
        {
            var packet = new GuildMatchStartPair
            {
                GuildId = guildId,
                TrackSvrId = trackSvrId,
                RoomId = roomId
            };
            NetMessage.Send(packet.BuildPacket(), className);
        }
        
        public byte[] BuildPacket()
        {
            var buffer = ProtocolBuffer.Writer;
            buffer.Write(MsgType);
            buffer.Write(ProtocolBuffer.Zero);
            WriteToStream(buffer);
            return ProtocolBuffer.CacheStream.ToArray();
        }
        
        public void ReadFromStream(BinaryReader reader)
        {
            GuildId = reader.ReadUInt32();
            TrackSvrId = reader.ReadUInt32();
            RoomId = reader.ReadUInt32();
        }
        
        public void WriteToStream(BinaryWriter writer)
        {
            writer.Write(GuildId);
            writer.Write(TrackSvrId);
            writer.Write(RoomId);
        }
    }
}
