// Generated by proto_to_csharp.py. DO NOT EDIT!
using System.IO;

namespace GameProtocol.TeamMessage
{
    // 通知约战失败UINT32
    public sealed class NotifyChallengeFail : IProtocol
    {
        public const short MsgType = MessageType.MSG_NOTIFY_CHALLENGE_FAIL;
        public short GetMsgType { get { return MsgType; } }
        public uint Err;// CHALLENGE_LIST_STATE
        public uint Param;// 1：m_nErr = CLST_ARMISTICE时 指定休战冷却时间
        
        public static void Send(uint err, uint param, object className)
        {
            var packet = new NotifyChallengeFail
            {
                Err = err,
                Param = param
            };
            NetMessage.Send(packet.BuildPacket(), className);
        }
        
        public byte[] BuildPacket()
        {
            var buffer = ProtocolBuffer.Writer;
            buffer.Write(MsgType);
            buffer.Write(ProtocolBuffer.Zero);
            WriteToStream(buffer);
            return ProtocolBuffer.CacheStream.ToArray();
        }
        
        public void ReadFromStream(BinaryReader reader)
        {
            Err = reader.ReadUInt32();
            Param = reader.ReadUInt32();
        }
        
        public void WriteToStream(BinaryWriter writer)
        {
            writer.Write(Err);
            writer.Write(Param);
        }
    }
}
