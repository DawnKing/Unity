// Generated by proto_to_csharp.py. DO NOT EDIT!
using System.IO;

namespace GameProtocol.TeamMessage
{
    // 通知被挑战
    public sealed class NotifyBeChallenge : IProtocol
    {
        public const short MsgType = MessageType.MSG_NOTIFY_BE_CHALLENGE;
        public short GetMsgType { get { return MsgType; } }
        public uint TeamId;// 战队id
        public TeamBrief teamBrief;// 敌方战队信息
        public uint StartTime;// 战斗开始时间戳
        public uint Type;// ROOM_TYPE
        
        public static void Send(uint teamId, TeamBrief teamBrief, uint startTime, uint type, object className)
        {
            var packet = new NotifyBeChallenge
            {
                TeamId = teamId,
                teamBrief = teamBrief,
                StartTime = startTime,
                Type = type
            };
            NetMessage.Send(packet.BuildPacket(), className);
        }
        
        public byte[] BuildPacket()
        {
            var buffer = ProtocolBuffer.Writer;
            buffer.Write(MsgType);
            buffer.Write(ProtocolBuffer.Zero);
            WriteToStream(buffer);
            return ProtocolBuffer.CacheStream.ToArray();
        }
        
        public void ReadFromStream(BinaryReader reader)
        {
            TeamId = reader.ReadUInt32();
            teamBrief = new TeamBrief();
            teamBrief.ReadFromStream(reader);
            StartTime = reader.ReadUInt32();
            Type = reader.ReadUInt32();
        }
        
        public void WriteToStream(BinaryWriter writer)
        {
            writer.Write(TeamId);
            teamBrief.WriteToStream(writer);
            writer.Write(StartTime);
            writer.Write(Type);
        }
    }
}
