// Generated by proto_to_csharp.py. DO NOT EDIT!
using System.IO;

namespace GameProtocol.TeamMessage
{
    // MSGTYPE_DECLARE_ASSIGN(MSG_NOTIFY_GUILD_INFO, 1650),
    // 通知军团信息
    public sealed class NotifyGuildInfo : IProtocol
    {
        public const short MsgType = MessageType.MSG_NOTIFY_GUILD_INFO;
        public short GetMsgType { get { return MsgType; } }
        public GuildInfo info;// 军团信息
        public TeamInfo[] teamVec;// 军团战队信息
        
        public static void Send(GuildInfo info, TeamInfo[] teamVec, object className)
        {
            var packet = new NotifyGuildInfo
            {
                info = info,
                teamVec = teamVec
            };
            NetMessage.Send(packet.BuildPacket(), className);
        }
        
        public byte[] BuildPacket()
        {
            var buffer = ProtocolBuffer.Writer;
            buffer.Write(MsgType);
            buffer.Write(ProtocolBuffer.Zero);
            WriteToStream(buffer);
            return ProtocolBuffer.CacheStream.ToArray();
        }
        
        public void ReadFromStream(BinaryReader reader)
        {
            info = new GuildInfo();
            info.ReadFromStream(reader);
            var length2 = reader.ReadUInt16();
            teamVec = new TeamInfo[length2];
            for (var i2 = 0; i2 < length2; i2++)
            {
                teamVec[i2] = new TeamInfo();
                teamVec[i2].ReadFromStream(reader);
            }
        }
        
        public void WriteToStream(BinaryWriter writer)
        {
            info.WriteToStream(writer);
            ushort count2 = (ushort)(teamVec == null ? 0 : teamVec.Length);
            writer.Write(count2);
            for(var i2 = 0; i2 < count2; i2++)
            {
                teamVec[i2].WriteToStream(writer);
            }
        }
    }
}
