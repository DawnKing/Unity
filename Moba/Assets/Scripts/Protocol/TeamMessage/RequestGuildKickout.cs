// Generated by proto_to_csharp.py. DO NOT EDIT!
using System.IO;

namespace GameProtocol.TeamMessage
{
    // MSGTYPE_DECLARE(MSG_REQUEST_GUILD_KICKOUT),
    // 请求踢出军团
    public sealed class RequestGuildKickout : IProtocol
    {
        public const short MsgType = MessageType.MSG_REQUEST_GUILD_KICKOUT;
        public short GetMsgType { get { return MsgType; } }
        public string targetUuid;// 目标Uuid
        public uint TeamId;// 目标所在战队id
        
        public static void Send(string targetUuid, uint teamId, object className)
        {
            var packet = new RequestGuildKickout
            {
                targetUuid = targetUuid,
                TeamId = teamId
            };
            NetMessage.Send(packet.BuildPacket(), className);
        }
        
        public byte[] BuildPacket()
        {
            var buffer = ProtocolBuffer.Writer;
            buffer.Write(MsgType);
            buffer.Write(ProtocolBuffer.Zero);
            WriteToStream(buffer);
            return ProtocolBuffer.CacheStream.ToArray();
        }
        
        public void ReadFromStream(BinaryReader reader)
        {
            targetUuid = reader.ReadString();
            TeamId = reader.ReadUInt32();
        }
        
        public void WriteToStream(BinaryWriter writer)
        {
            writer.Write(targetUuid);
            writer.Write(TeamId);
        }
    }
}
