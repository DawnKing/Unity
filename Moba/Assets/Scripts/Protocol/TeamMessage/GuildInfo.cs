// Generated by proto_to_csharp.py. DO NOT EDIT!
using System.IO;

namespace GameProtocol.TeamMessage
{
    // ----------------------------------------------------------------------
    ///    @file            protocol/RoomMessage.h
    ///    @brief
    ///    @author          linyixiong
    ///    @copyright       Sixcube Information Technology Co,. Ltd. (2012)
    ///    @date
    // ----------------------------------------------------------------------
    /// 军团相关公共定义
    // 战队最大人数
    // 30%上缴军团
    // 创建军团初始资金
    // 创建军团，团长初始贡献度
    // 创建战队需要的军团资金
    // 战队初始资金
    // 多长时间没有交维护费，解散战队
    // 转队的冷却时间 3天
    // 战队转移资金给军团每50点获得1点军团贡献
    /// 战队扩展标志位
    // 是否开启战队副本
    // 是否在结算后关闭战队副本
    /// 更新军团信息类型
    // 改变名称
    // 升级
    // 职位变化
    // 改变公告
    // 改变军团活跃度
    // 改变资金
    // 军团设置按位标志
    // 申请最低准入等级
    // 申请最低准入段位
    // 招募宣言
    /// 更新战队信息类型
    // 其他
    // 改变名称
    // 改变队长
    // 改变名次
    // 改变荣誉
    // 改变资金
    // 改变威望
    // 升级
    // 开启或者关闭副本
    // 军团设置(只枚举按位标志)
    // 自动加入军团设置
    // 禁止申请
    // 允许团员发送邀请
    // 军团信息
    public sealed class GuildInfo
    {
        public uint nGuildId;// 军团id
        public string strName;// 军团名称
        public uint nLevel;// 军团等级
        public string leaderUuid;// 团长uuid
        public string viceLeaderUuid;// 副团长uuid
        public string strNotice;// 军团公告
        public uint nActiveNum;// 军团活跃度
        public int iCoin;// 军团资金
        public uint nCreateTime;// 创建时间
        public int iSettingBit;// 军团设置按位标志（GUILD_SETTING_BIT）
        public uint nLevelLimit;// 最低准入等级
        public uint nLadderLimit;// 最低准入段位
        public string strRecruitNotice;// 招募公告
        public void ReadFromStream(BinaryReader reader)
        {
            nGuildId = reader.ReadUInt32();
            strName = reader.ReadString();
            nLevel = reader.ReadUInt32();
            leaderUuid = reader.ReadString();
            viceLeaderUuid = reader.ReadString();
            strNotice = reader.ReadString();
            nActiveNum = reader.ReadUInt32();
            iCoin = reader.ReadInt32();
            nCreateTime = reader.ReadUInt32();
            iSettingBit = reader.ReadInt32();
            nLevelLimit = reader.ReadUInt32();
            nLadderLimit = reader.ReadUInt32();
            strRecruitNotice = reader.ReadString();
        }
        
        public void WriteToStream(BinaryWriter writer)
        {
            writer.Write(nGuildId);
            writer.Write(strName);
            writer.Write(nLevel);
            writer.Write(leaderUuid);
            writer.Write(viceLeaderUuid);
            writer.Write(strNotice);
            writer.Write(nActiveNum);
            writer.Write(iCoin);
            writer.Write(nCreateTime);
            writer.Write(iSettingBit);
            writer.Write(nLevelLimit);
            writer.Write(nLadderLimit);
            writer.Write(strRecruitNotice);
        }
    }
}
