// Generated by proto_to_csharp.py. DO NOT EDIT!
using System.IO;

namespace GameProtocol.GlobalMessage
{
    /// 通知global使用物品
    public sealed class GlobalNotifyUseItem : IProtocol
    {
        public const short MsgType = MessageType.MSG_GLOBAL_NOTIFY_USE_ITEM;
        public short GetMsgType { get { return MsgType; } }
        public string CharUuid;// 使用者uuid
        public string targetUuid;// 目标者uuid
        public string targetName;// 目标名
        public uint ItemId;// 物品id
        public uint Count;// 物品个数
        
        public static void Send(string charUuid, string targetUuid, string targetName, uint itemId, uint count, object className)
        {
            var packet = new GlobalNotifyUseItem
            {
                CharUuid = charUuid,
                targetUuid = targetUuid,
                targetName = targetName,
                ItemId = itemId,
                Count = count
            };
            NetMessage.Send(packet.BuildPacket(), className);
        }
        
        public byte[] BuildPacket()
        {
            var buffer = ProtocolBuffer.Writer;
            buffer.Write(MsgType);
            buffer.Write(ProtocolBuffer.Zero);
            WriteToStream(buffer);
            return ProtocolBuffer.CacheStream.ToArray();
        }
        
        public void ReadFromStream(BinaryReader reader)
        {
            CharUuid = reader.ReadString();
            targetUuid = reader.ReadString();
            targetName = reader.ReadString();
            ItemId = reader.ReadUInt32();
            Count = reader.ReadUInt32();
        }
        
        public void WriteToStream(BinaryWriter writer)
        {
            writer.Write(CharUuid);
            writer.Write(targetUuid);
            writer.Write(targetName);
            writer.Write(ItemId);
            writer.Write(Count);
        }
    }
}
