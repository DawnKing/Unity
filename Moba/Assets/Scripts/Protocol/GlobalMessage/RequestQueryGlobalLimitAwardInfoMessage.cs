// Generated by proto_to_csharp.py. DO NOT EDIT!
using System.IO;

namespace GameProtocol.GlobalMessage
{
    /// gate->global
    public sealed class RequestQueryGlobalLimitAwardInfoMessage : IProtocol
    {
        public const short MsgType = MessageType.MSG_REQUEST_QUERY_GLOBAL_LIMIT_AWARD_INFO;
        public short GetMsgType { get { return MsgType; } }
        public uint acctId;
        public uint propItemId;
        public uint awardId;
        
        public static void Send(uint acctId, uint propItemId, uint awardId, object className)
        {
            var packet = new RequestQueryGlobalLimitAwardInfoMessage
            {
                acctId = acctId,
                propItemId = propItemId,
                awardId = awardId
            };
            NetMessage.Send(packet.BuildPacket(), className);
        }
        
        public byte[] BuildPacket()
        {
            var buffer = ProtocolBuffer.Writer;
            buffer.Write(MsgType);
            buffer.Write(ProtocolBuffer.Zero);
            WriteToStream(buffer);
            return ProtocolBuffer.CacheStream.ToArray();
        }
        
        public void ReadFromStream(BinaryReader reader)
        {
            acctId = reader.ReadUInt32();
            propItemId = reader.ReadUInt32();
            awardId = reader.ReadUInt32();
        }
        
        public void WriteToStream(BinaryWriter writer)
        {
            writer.Write(acctId);
            writer.Write(propItemId);
            writer.Write(awardId);
        }
    }
}
