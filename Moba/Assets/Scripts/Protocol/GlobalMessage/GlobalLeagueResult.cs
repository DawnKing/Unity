// Generated by proto_to_csharp.py. DO NOT EDIT!
using System.IO;

namespace GameProtocol.GlobalMessage
{
    // MSGTYPE_DECLARE(MSG_GLOBAL_LEAGUE_RESULT),
    // 通知跨服联赛战斗结果
    public sealed class GlobalLeagueResult : IProtocol
    {
        public const short MsgType = MessageType.MSG_GLOBAL_LEAGUE_RESULT;
        public short GetMsgType { get { return MsgType; } }
        public uint SceneId;// 战场id
        public uint RoomType;// 房间类型
        public uint ContestId;// 联赛对阵ID
        public uint RedTeamId;// 红方战队id
        public uint BlueTeamId;// 蓝方战队id
        public uint winTeamId;// 获胜战队id
        
        public static void Send(uint sceneId, uint roomType, uint contestId, uint redTeamId, uint blueTeamId, uint winTeamId, object className)
        {
            var packet = new GlobalLeagueResult
            {
                SceneId = sceneId,
                RoomType = roomType,
                ContestId = contestId,
                RedTeamId = redTeamId,
                BlueTeamId = blueTeamId,
                winTeamId = winTeamId
            };
            NetMessage.Send(packet.BuildPacket(), className);
        }
        
        public byte[] BuildPacket()
        {
            var buffer = ProtocolBuffer.Writer;
            buffer.Write(MsgType);
            buffer.Write(ProtocolBuffer.Zero);
            WriteToStream(buffer);
            return ProtocolBuffer.CacheStream.ToArray();
        }
        
        public void ReadFromStream(BinaryReader reader)
        {
            SceneId = reader.ReadUInt32();
            RoomType = reader.ReadUInt32();
            ContestId = reader.ReadUInt32();
            RedTeamId = reader.ReadUInt32();
            BlueTeamId = reader.ReadUInt32();
            winTeamId = reader.ReadUInt32();
        }
        
        public void WriteToStream(BinaryWriter writer)
        {
            writer.Write(SceneId);
            writer.Write(RoomType);
            writer.Write(ContestId);
            writer.Write(RedTeamId);
            writer.Write(BlueTeamId);
            writer.Write(winTeamId);
        }
    }
}
