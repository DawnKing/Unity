// Generated by proto_to_csharp.py. DO NOT EDIT!
using System.IO;

namespace GameProtocol.GlobalMessage
{
    /// global->gate
    public sealed class NotifyQueryGlobalLimitAwardInfoMessage : IProtocol
    {
        public const short MsgType = MessageType.MSG_NOTIFY_QUERY_GLOBAL_LIMIT_AWARD_INFO;
        public short GetMsgType { get { return MsgType; } }
        public uint propItemId;
        public uint awardId;
        public uint queryResult;
        
        public static void Send(uint propItemId, uint awardId, uint queryResult, object className)
        {
            var packet = new NotifyQueryGlobalLimitAwardInfoMessage
            {
                propItemId = propItemId,
                awardId = awardId,
                queryResult = queryResult
            };
            NetMessage.Send(packet.BuildPacket(), className);
        }
        
        public byte[] BuildPacket()
        {
            var buffer = ProtocolBuffer.Writer;
            buffer.Write(MsgType);
            buffer.Write(ProtocolBuffer.Zero);
            WriteToStream(buffer);
            return ProtocolBuffer.CacheStream.ToArray();
        }
        
        public void ReadFromStream(BinaryReader reader)
        {
            propItemId = reader.ReadUInt32();
            awardId = reader.ReadUInt32();
            queryResult = reader.ReadUInt32();
        }
        
        public void WriteToStream(BinaryWriter writer)
        {
            writer.Write(propItemId);
            writer.Write(awardId);
            writer.Write(queryResult);
        }
    }
}
