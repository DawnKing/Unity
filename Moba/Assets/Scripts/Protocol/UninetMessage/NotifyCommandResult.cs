// Generated by proto_to_csharp.py. DO NOT EDIT!
using System.IO;

namespace GameProtocol.UninetMessage
{
    /// 命令运行结果
    /// MSG_COMMAND_RESULT
    public sealed class NotifyCommandResult : IProtocol
    {
        public const short MsgType = MessageType.MSG_COMMAND_RESULT;
        public short GetMsgType { get { return MsgType; } }
        public int requestId;
        public string result;
        
        public static void Send(int requestId, string result, object className)
        {
            var packet = new NotifyCommandResult
            {
                requestId = requestId,
                result = result
            };
            NetMessage.Send(packet.BuildPacket(), className);
        }
        
        public byte[] BuildPacket()
        {
            var buffer = ProtocolBuffer.Writer;
            buffer.Write(MsgType);
            buffer.Write(ProtocolBuffer.Zero);
            WriteToStream(buffer);
            return ProtocolBuffer.CacheStream.ToArray();
        }
        
        public void ReadFromStream(BinaryReader reader)
        {
            requestId = reader.ReadInt32();
            result = reader.ReadString();
        }
        
        public void WriteToStream(BinaryWriter writer)
        {
            writer.Write(requestId);
            writer.Write(result);
        }
    }
}
