// Generated by proto_to_csharp.py. DO NOT EDIT!
using System.IO;

namespace GameProtocol.StageMessage
{
    // 正常
    // 已经领取
    // 无此阶段
    // 其他错误
    //MSGTYPE_DECLAR(MSG_NOTIFY_STAGE_REAP_RESULT),
    //通知奖励领取结果
    public sealed class NotifyStageReapResult : IProtocol
    {
        public const short MsgType = MessageType.MSG_NOTIFY_STAGE_REAP_RESULT;
        public short GetMsgType { get { return MsgType; } }
        public uint Result;// 0-成功；1-已经领过；2-数据错误；3-其他错误
        public uint Stage;// 领取Stage ID
        
        public static void Send(uint result, uint stage, object className)
        {
            var packet = new NotifyStageReapResult
            {
                Result = result,
                Stage = stage
            };
            NetMessage.Send(packet.BuildPacket(), className);
        }
        
        public byte[] BuildPacket()
        {
            var buffer = ProtocolBuffer.Writer;
            buffer.Write(MsgType);
            buffer.Write(ProtocolBuffer.Zero);
            WriteToStream(buffer);
            return ProtocolBuffer.CacheStream.ToArray();
        }
        
        public void ReadFromStream(BinaryReader reader)
        {
            Result = reader.ReadUInt32();
            Stage = reader.ReadUInt32();
        }
        
        public void WriteToStream(BinaryWriter writer)
        {
            writer.Write(Result);
            writer.Write(Stage);
        }
    }
}
