// Generated by proto_to_csharp.py. DO NOT EDIT!
using System.IO;

namespace GameProtocol.VipMessage
{
    public sealed class NotifyDrawSuperVipChargeBackMessage : IProtocol
    {
        public const short MsgType = MessageType.MSG_NOTIFY_DRAW_SUPER_VIP_CHARGE_BACK;
        public short GetMsgType { get { return MsgType; } }
        public const int DR_OK = 0;
        public const int DR_FAILE = 1;
        public uint drawResult;
        public int backCash;
        
        public static void Send(uint drawResult, int backCash, object className)
        {
            var packet = new NotifyDrawSuperVipChargeBackMessage
            {
                drawResult = drawResult,
                backCash = backCash
            };
            NetMessage.Send(packet.BuildPacket(), className);
        }
        
        public byte[] BuildPacket()
        {
            var buffer = ProtocolBuffer.Writer;
            buffer.Write(MsgType);
            buffer.Write(ProtocolBuffer.Zero);
            WriteToStream(buffer);
            return ProtocolBuffer.CacheStream.ToArray();
        }
        
        public void ReadFromStream(BinaryReader reader)
        {
            drawResult = reader.ReadUInt32();
            backCash = reader.ReadInt32();
        }
        
        public void WriteToStream(BinaryWriter writer)
        {
            writer.Write(drawResult);
            writer.Write(backCash);
        }
    }
}
