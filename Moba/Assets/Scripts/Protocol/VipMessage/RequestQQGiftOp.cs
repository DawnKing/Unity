// Generated by proto_to_csharp.py. DO NOT EDIT!
using System.IO;

namespace GameProtocol.VipMessage
{
    // MSGTYPE_DECLARE(MSG_REQUEST_QQ_GIFT_OP),
    // 请求qq好友礼物操作
    public sealed class RequestQQGiftOp : IProtocol
    {
        public const short MsgType = MessageType.MSG_REQUEST_QQ_GIFT_OP;
        public short GetMsgType { get { return MsgType; } }
        public const int QQGIFT_GIVE = 1;// 赠送
        public const int QQGIFT_GET = 2;// 索取
        public const int QQGIFT_DRAW = 3;// 领取
        public const int QQGIFT_ACCEPT = 4;// 同意赠送
        public const int QQGIFT_REJECT = 5;// 拒绝赠送
        public string sendOpenid;// 发送者openid
        public string charOpenid;// 角色openid
        public string strDesc;// 礼物描述
        public byte OpType;// 操作类型
        public uint ItemId;// 礼物物品id
        public uint GiftId;// 礼物id,QQGIFT_DRAW\QQGIFT_ACCEPT\QQGIFT_REJECT需要发送礼物id
        
        public static void Send(string sendOpenid, string charOpenid, string strDesc, byte opType, uint itemId, uint giftId, object className)
        {
            var packet = new RequestQQGiftOp
            {
                sendOpenid = sendOpenid,
                charOpenid = charOpenid,
                strDesc = strDesc,
                OpType = opType,
                ItemId = itemId,
                GiftId = giftId
            };
            NetMessage.Send(packet.BuildPacket(), className);
        }
        
        public byte[] BuildPacket()
        {
            var buffer = ProtocolBuffer.Writer;
            buffer.Write(MsgType);
            buffer.Write(ProtocolBuffer.Zero);
            WriteToStream(buffer);
            return ProtocolBuffer.CacheStream.ToArray();
        }
        
        public void ReadFromStream(BinaryReader reader)
        {
            sendOpenid = reader.ReadString();
            charOpenid = reader.ReadString();
            strDesc = reader.ReadString();
            OpType = reader.ReadByte();
            ItemId = reader.ReadUInt32();
            GiftId = reader.ReadUInt32();
        }
        
        public void WriteToStream(BinaryWriter writer)
        {
            writer.Write(sendOpenid);
            writer.Write(charOpenid);
            writer.Write(strDesc);
            writer.Write(OpType);
            writer.Write(ItemId);
            writer.Write(GiftId);
        }
    }
}
