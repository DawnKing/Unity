// Generated by proto_to_csharp.py. DO NOT EDIT!
using System.IO;

using GameProtocol.BulkDataType;
namespace GameProtocol.TankMessage
{
    // 通知坦克信息
    public sealed class NotifyTankList : IProtocol
    {
        public const short MsgType = MessageType.MSG_NOTIFY_TANK_LIST;
        public short GetMsgType { get { return MsgType; } }
        public const int PLAYER_LOGIN_TANK = 1;// 玩家登录
        public const int ADD_TANK = 2;// 获得新坦克
        public const int ADD_PRESENT_HIRE_TANK = 3;// 获得赠送的租用坦克
        public TankInstance[] tankVec;// 坦克信息
        public byte notifyType;// 物品信息通知类型
        public byte contType;// 坦克容器类型 enum TANK_CONTAINER_TYPE
        
        public static void Send(TankInstance[] tankVec, byte notifyType, byte contType, object className)
        {
            var packet = new NotifyTankList
            {
                tankVec = tankVec,
                notifyType = notifyType,
                contType = contType
            };
            NetMessage.Send(packet.BuildPacket(), className);
        }
        
        public byte[] BuildPacket()
        {
            var buffer = ProtocolBuffer.Writer;
            buffer.Write(MsgType);
            buffer.Write(ProtocolBuffer.Zero);
            WriteToStream(buffer);
            return ProtocolBuffer.CacheStream.ToArray();
        }
        
        public void ReadFromStream(BinaryReader reader)
        {
            var length1 = reader.ReadUInt16();
            tankVec = new TankInstance[length1];
            for (var i1 = 0; i1 < length1; i1++)
            {
                tankVec[i1] = new TankInstance();
                tankVec[i1].ReadFromStream(reader);
            }
            notifyType = reader.ReadByte();
            contType = reader.ReadByte();
        }
        
        public void WriteToStream(BinaryWriter writer)
        {
            ushort count1 = (ushort)(tankVec == null ? 0 : tankVec.Length);
            writer.Write(count1);
            for(var i1 = 0; i1 < count1; i1++)
            {
                tankVec[i1].WriteToStream(writer);
            }
            writer.Write(notifyType);
            writer.Write(contType);
        }
    }
}
