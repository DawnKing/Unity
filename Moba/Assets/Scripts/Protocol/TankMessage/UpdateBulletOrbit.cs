// Generated by proto_to_csharp.py. DO NOT EDIT!
using System.IO;

namespace GameProtocol.TankMessage
{
    // MSGTYPE_DECLARE(MSG_UPDATE_BULLET_ORBIT),
    // 同步炮弹轨迹
    public sealed class UpdateBulletOrbit : IProtocol
    {
        public const short MsgType = MessageType.MSG_UPDATE_BULLET_ORBIT;
        public short GetMsgType { get { return MsgType; } }
        public ulong bullteId;// 炮弹对象实例id
        public short startX;// 炮弹当前位置
        public short startY;
        public short destX;// 攻击目标坐标
        public short destY;
        
        public static void Send(ulong bullteId, short startX, short startY, short destX, short destY, object className)
        {
            var packet = new UpdateBulletOrbit
            {
                bullteId = bullteId,
                startX = startX,
                startY = startY,
                destX = destX,
                destY = destY
            };
            NetMessage.Send(packet.BuildPacket(), className);
        }
        
        public byte[] BuildPacket()
        {
            var buffer = ProtocolBuffer.Writer;
            buffer.Write(MsgType);
            buffer.Write(ProtocolBuffer.Zero);
            WriteToStream(buffer);
            return ProtocolBuffer.CacheStream.ToArray();
        }
        
        public void ReadFromStream(BinaryReader reader)
        {
            bullteId = reader.ReadUInt64();
            startX = reader.ReadInt16();
            startY = reader.ReadInt16();
            destX = reader.ReadInt16();
            destY = reader.ReadInt16();
        }
        
        public void WriteToStream(BinaryWriter writer)
        {
            writer.Write(bullteId);
            writer.Write(startX);
            writer.Write(startY);
            writer.Write(destX);
            writer.Write(destY);
        }
    }
}
