// Generated by proto_to_csharp.py. DO NOT EDIT!
using System.IO;

namespace GameProtocol.TankMessage
{
    // 通知使用坦克光环的结果 gate -> client
    public sealed class NotifyUseTankHaloResult : IProtocol
    {
        public const short MsgType = MessageType.MSG_NOTIFY_USE_TANK_HALO_RESULT;
        public short GetMsgType { get { return MsgType; } }
        public byte Success;//是否成功, 1 成功
        public string sTankUUID;
        public uint HaloId;
        
        public static void Send(byte success, string sTankUUID, uint haloId, object className)
        {
            var packet = new NotifyUseTankHaloResult
            {
                Success = success,
                sTankUUID = sTankUUID,
                HaloId = haloId
            };
            NetMessage.Send(packet.BuildPacket(), className);
        }
        
        public byte[] BuildPacket()
        {
            var buffer = ProtocolBuffer.Writer;
            buffer.Write(MsgType);
            buffer.Write(ProtocolBuffer.Zero);
            WriteToStream(buffer);
            return ProtocolBuffer.CacheStream.ToArray();
        }
        
        public void ReadFromStream(BinaryReader reader)
        {
            Success = reader.ReadByte();
            sTankUUID = reader.ReadString();
            HaloId = reader.ReadUInt32();
        }
        
        public void WriteToStream(BinaryWriter writer)
        {
            writer.Write(Success);
            writer.Write(sTankUUID);
            writer.Write(HaloId);
        }
    }
}
