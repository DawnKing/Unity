// Generated by proto_to_csharp.py. DO NOT EDIT!
using System.IO;

namespace GameProtocol.TankMessage
{
    // MSGTYPE_DECLARE(MSG_NOTIFY_SIGNAL_INFO),
    // 通知战场信号信息
    public sealed class NotifySignalInfo : IProtocol
    {
        public const short MsgType = MessageType.MSG_NOTIFY_SIGNAL_INFO;
        public short GetMsgType { get { return MsgType; } }
        public ulong objectId;/// 信号发起者Id
        public short DestX;/// 坐标
        public short DestY;
        public byte SignalType;/// 信号类型
        
        public static void Send(ulong objectId, short destX, short destY, byte signalType, object className)
        {
            var packet = new NotifySignalInfo
            {
                objectId = objectId,
                DestX = destX,
                DestY = destY,
                SignalType = signalType
            };
            NetMessage.Send(packet.BuildPacket(), className);
        }
        
        public byte[] BuildPacket()
        {
            var buffer = ProtocolBuffer.Writer;
            buffer.Write(MsgType);
            buffer.Write(ProtocolBuffer.Zero);
            WriteToStream(buffer);
            return ProtocolBuffer.CacheStream.ToArray();
        }
        
        public void ReadFromStream(BinaryReader reader)
        {
            objectId = reader.ReadUInt64();
            DestX = reader.ReadInt16();
            DestY = reader.ReadInt16();
            SignalType = reader.ReadByte();
        }
        
        public void WriteToStream(BinaryWriter writer)
        {
            writer.Write(objectId);
            writer.Write(DestX);
            writer.Write(DestY);
            writer.Write(SignalType);
        }
    }
}
