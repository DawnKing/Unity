// Generated by proto_to_csharp.py. DO NOT EDIT!
using System.IO;

namespace GameProtocol.TankMessage
{
    // 增加租用坦克的租用时间
    public sealed class AddHireTankPresentTime : IProtocol
    {
        public const short MsgType = MessageType.MSG_ADD_HIRE_TANK_PRESENT_TIME;
        public short GetMsgType { get { return MsgType; } }
        public string strPresentName;// 赠送玩家的名字
        public uint TankId;// 坦克ID
        public uint TankLevel;// 坦克等级
        public uint HireTime;// 租用时间
        public uint ChipCount;// 返还的芯片个数
        public uint TargetOid;// 目标玩家的Oid
        public string strTargetUuid;// 目标玩家的UUID
        
        public static void Send(string strPresentName, uint tankId, uint tankLevel, uint hireTime, uint chipCount, uint targetOid, string strTargetUuid, object className)
        {
            var packet = new AddHireTankPresentTime
            {
                strPresentName = strPresentName,
                TankId = tankId,
                TankLevel = tankLevel,
                HireTime = hireTime,
                ChipCount = chipCount,
                TargetOid = targetOid,
                strTargetUuid = strTargetUuid
            };
            NetMessage.Send(packet.BuildPacket(), className);
        }
        
        public byte[] BuildPacket()
        {
            var buffer = ProtocolBuffer.Writer;
            buffer.Write(MsgType);
            buffer.Write(ProtocolBuffer.Zero);
            WriteToStream(buffer);
            return ProtocolBuffer.CacheStream.ToArray();
        }
        
        public void ReadFromStream(BinaryReader reader)
        {
            strPresentName = reader.ReadString();
            TankId = reader.ReadUInt32();
            TankLevel = reader.ReadUInt32();
            HireTime = reader.ReadUInt32();
            ChipCount = reader.ReadUInt32();
            TargetOid = reader.ReadUInt32();
            strTargetUuid = reader.ReadString();
        }
        
        public void WriteToStream(BinaryWriter writer)
        {
            writer.Write(strPresentName);
            writer.Write(TankId);
            writer.Write(TankLevel);
            writer.Write(HireTime);
            writer.Write(ChipCount);
            writer.Write(TargetOid);
            writer.Write(strTargetUuid);
        }
    }
}
