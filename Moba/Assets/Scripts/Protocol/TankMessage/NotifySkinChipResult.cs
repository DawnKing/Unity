// Generated by proto_to_csharp.py. DO NOT EDIT!
using System.IO;

namespace GameProtocol.TankMessage
{
    // 通知购买坦克碎片的结果
    public sealed class NotifySkinChipResult : IProtocol
    {
        public const short MsgType = MessageType.MSG_NOTIFY_TANK_SKIN_CHIP_RESULT;
        public short GetMsgType { get { return MsgType; } }
        public const int BUY_SC_OK = 1;/// 成功
        public const int BUY_SC_ERROR = 5;/// 失败
        public const int BUY_SC_ERROR_OWNED_SKIN = 6;/// 失败，已拥有皮肤
        public const int BUY_SC_ERROR_LACK_COIN = 7;/// 失败，缺少货币
        public const int BUY_SC_ERROR_NOT_OPEN_CHIP = 8;/// 失败，该坦克皮肤未开启碎片功能
        public const int BUY_SC_ERROR_COIN_TYPE_ERROR = 9;/// 失败，错误的货币类型
        public uint Result;/// 结果枚举
        public uint SkinId;/// 皮肤ID
        public uint Schedule;/// 碎片进度（成功有效，失败时为0）
        
        public static void Send(uint result, uint skinId, uint schedule, object className)
        {
            var packet = new NotifySkinChipResult
            {
                Result = result,
                SkinId = skinId,
                Schedule = schedule
            };
            NetMessage.Send(packet.BuildPacket(), className);
        }
        
        public byte[] BuildPacket()
        {
            var buffer = ProtocolBuffer.Writer;
            buffer.Write(MsgType);
            buffer.Write(ProtocolBuffer.Zero);
            WriteToStream(buffer);
            return ProtocolBuffer.CacheStream.ToArray();
        }
        
        public void ReadFromStream(BinaryReader reader)
        {
            Result = reader.ReadUInt32();
            SkinId = reader.ReadUInt32();
            Schedule = reader.ReadUInt32();
        }
        
        public void WriteToStream(BinaryWriter writer)
        {
            writer.Write(Result);
            writer.Write(SkinId);
            writer.Write(Schedule);
        }
    }
}
