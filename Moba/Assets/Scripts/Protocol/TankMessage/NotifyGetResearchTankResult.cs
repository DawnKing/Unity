// Generated by proto_to_csharp.py. DO NOT EDIT!
using System.IO;

namespace GameProtocol.TankMessage
{
    // 通知换取坦克的结果
    public sealed class NotifyGetResearchTankResult : IProtocol
    {
        public const short MsgType = MessageType.MSG_NOTIFY_GET_RESEARCH_TANK_RESULT;
        public short GetMsgType { get { return MsgType; } }
        public const int GRT_OK = 1;/// 换取成功
        public const int GRT_ERROR = 2;/// 失败
        public const int GRT_ERROR_OWN_TANK = 3;/// 失败，已拥有坦克
        public const int GRT_ERROR_NOT_COMPLETE = 4;/// 失败，研究进度未完成
        public uint Result;
        public uint TankId;/// 坦克ID
        public uint Schedule;/// 剩余进度 （成功有效，失败时为0）
        
        public static void Send(uint result, uint tankId, uint schedule, object className)
        {
            var packet = new NotifyGetResearchTankResult
            {
                Result = result,
                TankId = tankId,
                Schedule = schedule
            };
            NetMessage.Send(packet.BuildPacket(), className);
        }
        
        public byte[] BuildPacket()
        {
            var buffer = ProtocolBuffer.Writer;
            buffer.Write(MsgType);
            buffer.Write(ProtocolBuffer.Zero);
            WriteToStream(buffer);
            return ProtocolBuffer.CacheStream.ToArray();
        }
        
        public void ReadFromStream(BinaryReader reader)
        {
            Result = reader.ReadUInt32();
            TankId = reader.ReadUInt32();
            Schedule = reader.ReadUInt32();
        }
        
        public void WriteToStream(BinaryWriter writer)
        {
            writer.Write(Result);
            writer.Write(TankId);
            writer.Write(Schedule);
        }
    }
}
