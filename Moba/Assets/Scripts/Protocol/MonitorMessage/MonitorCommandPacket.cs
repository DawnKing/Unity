// Generated by proto_to_csharp.py. DO NOT EDIT!
using System.IO;

namespace GameProtocol.MonitorMessage
{
    // ----------------------------------------------------------------------
    ///	@file			protocol/MonitorMessage.h
    ///	@brief
    ///	@author			侯明园
    ///	@copyright		Sixcube Information Technology Co,. Ltd. (2012)
    ///	@date			2005-12-30 14:32:47
    // ----------------------------------------------------------------------
    /// @addtogroup dt_ManageMessage
    /// @{
    // 取得一个连接数据
    // 取得网络包统计
    // 取得所有连接及网络包数据
    // 平均值及总值
    // 清空所有统计数据
    /// 网络层管理命令
    /// MSG_MONITOR_COMMAND
    public sealed class MonitorCommandPacket : IProtocol
    {
        public const short MsgType = MessageType.MSG_MONITOR_COMMAND;
        public short GetMsgType { get { return MsgType; } }
        public int command;
        public uint argClientId;
        
        public static void Send(int command, uint argClientId, object className)
        {
            var packet = new MonitorCommandPacket
            {
                command = command,
                argClientId = argClientId
            };
            NetMessage.Send(packet.BuildPacket(), className);
        }
        
        public byte[] BuildPacket()
        {
            var buffer = ProtocolBuffer.Writer;
            buffer.Write(MsgType);
            buffer.Write(ProtocolBuffer.Zero);
            WriteToStream(buffer);
            return ProtocolBuffer.CacheStream.ToArray();
        }
        
        public void ReadFromStream(BinaryReader reader)
        {
            command = reader.ReadInt32();
            argClientId = reader.ReadUInt32();
        }
        
        public void WriteToStream(BinaryWriter writer)
        {
            writer.Write(command);
            writer.Write(argClientId);
        }
    }
}
