// Generated by proto_to_csharp.py. DO NOT EDIT!
using System.IO;

namespace GameProtocol.AuthMessage
{
    /**
     * 认证请求.
     * 
     * MSG_AUTH_REQUEST_AUTH_RELOGIN
     */
    public sealed class RequestAuthLogin : IProtocol
    {
        public const short MsgType = MessageType.MSG_AUTH_REQUEST_AUTH_LOGIN;
        public short GetMsgType { get { return MsgType; } }
        public byte microclient;// 是否微端：1-是；0-不是;
        public string name;// 登入ID(openid)
        public string passwd;// 密码(openkey)
        public string adult;// 1为未成年 0为成年 多玩
        public string time;// 时间戳
        public string platform;// 运营平台(robot:为机器人专用)
        public string channel;// 运营渠道(pf)
        public string token;// 市场活动代码
        public string passport;// 通行证（多玩微端用)(pfkey)
        public uint clientSid;// 客户端选择的区服id
        
        public static void Send(byte microclient, string name, string passwd, string adult, string time, string platform, string channel, string token, string passport, uint clientSid, object className)
        {
            var packet = new RequestAuthLogin
            {
                microclient = microclient,
                name = name,
                passwd = passwd,
                adult = adult,
                time = time,
                platform = platform,
                channel = channel,
                token = token,
                passport = passport,
                clientSid = clientSid
            };
            NetMessage.Send(packet.BuildPacket(), className);
        }
        
        public byte[] BuildPacket()
        {
            var buffer = ProtocolBuffer.Writer;
            buffer.Write(MsgType);
            buffer.Write(ProtocolBuffer.Zero);
            WriteToStream(buffer);
            return ProtocolBuffer.CacheStream.ToArray();
        }
        
        public void ReadFromStream(BinaryReader reader)
        {
            microclient = reader.ReadByte();
            name = reader.ReadString();
            passwd = reader.ReadString();
            adult = reader.ReadString();
            time = reader.ReadString();
            platform = reader.ReadString();
            channel = reader.ReadString();
            token = reader.ReadString();
            passport = reader.ReadString();
            clientSid = reader.ReadUInt32();
        }
        
        public void WriteToStream(BinaryWriter writer)
        {
            writer.Write(microclient);
            writer.Write(name);
            writer.Write(passwd);
            writer.Write(adult);
            writer.Write(time);
            writer.Write(platform);
            writer.Write(channel);
            writer.Write(token);
            writer.Write(passport);
            writer.Write(clientSid);
        }
    }
}
