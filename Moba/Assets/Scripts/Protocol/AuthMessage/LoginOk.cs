// Generated by proto_to_csharp.py. DO NOT EDIT!
using System.IO;

namespace GameProtocol.AuthMessage
{
    /**
     * 认证前端->客户端：密码验证成功  
     * MSGTYPE_DECLARE(MSG_AUTH_LOGIN_OK),	
     */
    public sealed class LoginOk : IProtocol
    {
        public const short MsgType = MessageType.MSG_AUTH_LOGIN_OK;
        public short GetMsgType { get { return MsgType; } }
        public uint sessionkey;// 验证成功后获取的SESSIONKEY
        public uint expire_time;// SESSION 超时时间
        public uint has_char;// 0 : FALSE; 1 : TRUE
        public uint AcctId;// 账号id
        
        public static void Send(uint sessionkey, uint expire_time, uint has_char, uint acctId, object className)
        {
            var packet = new LoginOk
            {
                sessionkey = sessionkey,
                expire_time = expire_time,
                has_char = has_char,
                AcctId = acctId
            };
            NetMessage.Send(packet.BuildPacket(), className);
        }
        
        public byte[] BuildPacket()
        {
            var buffer = ProtocolBuffer.Writer;
            buffer.Write(MsgType);
            buffer.Write(ProtocolBuffer.Zero);
            WriteToStream(buffer);
            return ProtocolBuffer.CacheStream.ToArray();
        }
        
        public void ReadFromStream(BinaryReader reader)
        {
            sessionkey = reader.ReadUInt32();
            expire_time = reader.ReadUInt32();
            has_char = reader.ReadUInt32();
            AcctId = reader.ReadUInt32();
        }
        
        public void WriteToStream(BinaryWriter writer)
        {
            writer.Write(sessionkey);
            writer.Write(expire_time);
            writer.Write(has_char);
            writer.Write(AcctId);
        }
    }
}
