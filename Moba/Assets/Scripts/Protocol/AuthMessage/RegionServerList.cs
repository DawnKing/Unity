// Generated by proto_to_csharp.py. DO NOT EDIT!
using System.IO;

using GameProtocol.LoginProtocol;
namespace GameProtocol.AuthMessage
{
    /**
     * 区服列表 
     */
    public sealed class RegionServerList : IProtocol
    {
        public const short MsgType = MessageType.MSG_AUTH_SERVER_LIST;
        public short GetMsgType { get { return MsgType; } }
        public REGION_INFO[] regions;
        
        public static void Send(REGION_INFO[] regions, object className)
        {
            var packet = new RegionServerList
            {
                regions = regions
            };
            NetMessage.Send(packet.BuildPacket(), className);
        }
        
        public byte[] BuildPacket()
        {
            var buffer = ProtocolBuffer.Writer;
            buffer.Write(MsgType);
            buffer.Write(ProtocolBuffer.Zero);
            WriteToStream(buffer);
            return ProtocolBuffer.CacheStream.ToArray();
        }
        
        public void ReadFromStream(BinaryReader reader)
        {
            var length1 = reader.ReadUInt16();
            regions = new REGION_INFO[length1];
            for (var i1 = 0; i1 < length1; i1++)
            {
                regions[i1] = new REGION_INFO();
                regions[i1].ReadFromStream(reader);
            }
        }
        
        public void WriteToStream(BinaryWriter writer)
        {
            ushort count1 = (ushort)(regions == null ? 0 : regions.Length);
            writer.Write(count1);
            for(var i1 = 0; i1 < count1; i1++)
            {
                regions[i1].WriteToStream(writer);
            }
        }
    }
}
