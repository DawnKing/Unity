// Generated by proto_to_csharp.py. DO NOT EDIT!
using System.IO;

namespace GameProtocol.AuthMessage
{
    /**
     * 认证前端->客户端：密码验证错误  
     *
     * MSGTYPE_DECLARE(MSG_AUTH_LOGIN_FAIL),
     */
    public sealed class LoginFail : IProtocol
    {
        public const short MsgType = MessageType.MSG_AUTH_LOGIN_FAIL;
        public short GetMsgType { get { return MsgType; } }
        public int reason;// enum AUTH_RESULT
        public uint OpenTime;/// 如果返回原因为服务器即将开启,此参数返回服务器将要开启的时间
        public string errMsg;/// 华义定义错误消息
        
        public static void Send(int reason, uint openTime, string errMsg, object className)
        {
            var packet = new LoginFail
            {
                reason = reason,
                OpenTime = openTime,
                errMsg = errMsg
            };
            NetMessage.Send(packet.BuildPacket(), className);
        }
        
        public byte[] BuildPacket()
        {
            var buffer = ProtocolBuffer.Writer;
            buffer.Write(MsgType);
            buffer.Write(ProtocolBuffer.Zero);
            WriteToStream(buffer);
            return ProtocolBuffer.CacheStream.ToArray();
        }
        
        public void ReadFromStream(BinaryReader reader)
        {
            reason = reader.ReadInt32();
            OpenTime = reader.ReadUInt32();
            errMsg = reader.ReadString();
        }
        
        public void WriteToStream(BinaryWriter writer)
        {
            writer.Write(reason);
            writer.Write(OpenTime);
            writer.Write(errMsg);
        }
    }
}
