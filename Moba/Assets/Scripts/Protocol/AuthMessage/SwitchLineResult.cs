// Generated by proto_to_csharp.py. DO NOT EDIT!
using System.IO;

using GameProtocol.LoginProtocol;
namespace GameProtocol.AuthMessage
{
    // MSGTYPE_DECLARE(MSG_AUTH_SWITCH_LINE_RESULT),
    // 通知切换分线结果
    public sealed class SwitchLineResult : IProtocol
    {
        public const short MsgType = MessageType.MSG_AUTH_SWITCH_LINE_RESULT;
        public short GetMsgType { get { return MsgType; } }
        public const int SWITCH_OK = 0;// 切分线成功
        public const int SWITCH_ERR_FULL = 1;// 分线人数已满
        public const int SWITCH_ERR_NO_SVR = 2;// 没有gatesvr
        public const int SWITCH_ERR_SID = 3;// sid错误
        public const int SWITCH_ERR_SESSION_KEY = 4;// sessionkey错误
        public const int SWITCH_ERR_BUSY = 5;// 分线繁忙
        public byte Result;// 分线切换结果
        public REGION_INFO regions;
        
        public static void Send(byte result, REGION_INFO regions, object className)
        {
            var packet = new SwitchLineResult
            {
                Result = result,
                regions = regions
            };
            NetMessage.Send(packet.BuildPacket(), className);
        }
        
        public byte[] BuildPacket()
        {
            var buffer = ProtocolBuffer.Writer;
            buffer.Write(MsgType);
            buffer.Write(ProtocolBuffer.Zero);
            WriteToStream(buffer);
            return ProtocolBuffer.CacheStream.ToArray();
        }
        
        public void ReadFromStream(BinaryReader reader)
        {
            Result = reader.ReadByte();
            regions = new REGION_INFO();
            regions.ReadFromStream(reader);
        }
        
        public void WriteToStream(BinaryWriter writer)
        {
            writer.Write(Result);
            regions.WriteToStream(writer);
        }
    }
}
