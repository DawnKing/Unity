// Generated by proto_to_csharp.py. DO NOT EDIT!
using System.IO;

namespace GameProtocol.WorldMessage
{
    // ----------------------------------------------------------------------
    public sealed class WorldEnterMessage : IProtocol
    {
        public const short MsgType = MessageType.MSG_AUTH_REQUEST_WORLD_ENTER;
        public short GetMsgType { get { return MsgType; } }
        public string char_uuid;
        public string loginId;
        public uint accountId;
        public string strEnterKey;// 登录参数
        public short IsFirstLogin;//required INT32 m_isRobot = 10;    ///是否是机器人的号登录的, 0 -- 不是, 1 -- 是
        
        public static void Send(string char_uuid, string loginId, uint accountId, string strEnterKey, short isFirstLogin, object className)
        {
            var packet = new WorldEnterMessage
            {
                char_uuid = char_uuid,
                loginId = loginId,
                accountId = accountId,
                strEnterKey = strEnterKey,
                IsFirstLogin = isFirstLogin
            };
            NetMessage.Send(packet.BuildPacket(), className);
        }
        
        public byte[] BuildPacket()
        {
            var buffer = ProtocolBuffer.Writer;
            buffer.Write(MsgType);
            buffer.Write(ProtocolBuffer.Zero);
            WriteToStream(buffer);
            return ProtocolBuffer.CacheStream.ToArray();
        }
        
        public void ReadFromStream(BinaryReader reader)
        {
            char_uuid = reader.ReadString();
            loginId = reader.ReadString();
            accountId = reader.ReadUInt32();
            strEnterKey = reader.ReadString();
            IsFirstLogin = reader.ReadInt16();
        }
        
        public void WriteToStream(BinaryWriter writer)
        {
            writer.Write(char_uuid);
            writer.Write(loginId);
            writer.Write(accountId);
            writer.Write(strEnterKey);
            writer.Write(IsFirstLogin);
        }
    }
}
