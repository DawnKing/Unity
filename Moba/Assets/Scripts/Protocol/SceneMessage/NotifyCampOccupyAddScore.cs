// Generated by proto_to_csharp.py. DO NOT EDIT!
using System.IO;

namespace GameProtocol.SceneMessage
{
    // MSGTYPE_DECLARE(MSG_NOTIFY_CAMP_OCCUPY_ADD_SCORE),
    // 通知客户端，阵营占领旗帜获得的单次增加积分
    public sealed class NotifyCampOccupyAddScore : IProtocol
    {
        public const short MsgType = MessageType.MSG_NOTIFY_CAMP_OCCUPY_ADD_SCORE;
        public short GetMsgType { get { return MsgType; } }
        public int occupyIndex;// 占领旗子索引
        public int occupyCamp;// 占领旗子阵营
        public int occupyScore;// 占领获得积分
        
        public static void Send(int occupyIndex, int occupyCamp, int occupyScore, object className)
        {
            var packet = new NotifyCampOccupyAddScore
            {
                occupyIndex = occupyIndex,
                occupyCamp = occupyCamp,
                occupyScore = occupyScore
            };
            NetMessage.Send(packet.BuildPacket(), className);
        }
        
        public byte[] BuildPacket()
        {
            var buffer = ProtocolBuffer.Writer;
            buffer.Write(MsgType);
            buffer.Write(ProtocolBuffer.Zero);
            WriteToStream(buffer);
            return ProtocolBuffer.CacheStream.ToArray();
        }
        
        public void ReadFromStream(BinaryReader reader)
        {
            occupyIndex = reader.ReadInt32();
            occupyCamp = reader.ReadInt32();
            occupyScore = reader.ReadInt32();
        }
        
        public void WriteToStream(BinaryWriter writer)
        {
            writer.Write(occupyIndex);
            writer.Write(occupyCamp);
            writer.Write(occupyScore);
        }
    }
}
