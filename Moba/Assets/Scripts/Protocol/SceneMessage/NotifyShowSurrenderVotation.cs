// Generated by proto_to_csharp.py. DO NOT EDIT!
using System.IO;

namespace GameProtocol.SceneMessage
{
    // 通知开启投降表决
    public sealed class NotifyShowSurrenderVotation : IProtocol
    {
        public const short MsgType = MessageType.MSG_NOTIFY_SHOW_SURRENDER_VOTATION;
        public short GetMsgType { get { return MsgType; } }
        public byte validCount;// 有效玩家数
        public uint ShowEndTime;// 投票显示的截止时间
        public uint NextTime;// 下次允许开启投票的时间戳
        public uint Sponsor;// 发起人OID
        
        public static void Send(byte validCount, uint showEndTime, uint nextTime, uint sponsor, object className)
        {
            var packet = new NotifyShowSurrenderVotation
            {
                validCount = validCount,
                ShowEndTime = showEndTime,
                NextTime = nextTime,
                Sponsor = sponsor
            };
            NetMessage.Send(packet.BuildPacket(), className);
        }
        
        public byte[] BuildPacket()
        {
            var buffer = ProtocolBuffer.Writer;
            buffer.Write(MsgType);
            buffer.Write(ProtocolBuffer.Zero);
            WriteToStream(buffer);
            return ProtocolBuffer.CacheStream.ToArray();
        }
        
        public void ReadFromStream(BinaryReader reader)
        {
            validCount = reader.ReadByte();
            ShowEndTime = reader.ReadUInt32();
            NextTime = reader.ReadUInt32();
            Sponsor = reader.ReadUInt32();
        }
        
        public void WriteToStream(BinaryWriter writer)
        {
            writer.Write(validCount);
            writer.Write(ShowEndTime);
            writer.Write(NextTime);
            writer.Write(Sponsor);
        }
    }
}
