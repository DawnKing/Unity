// Generated by proto_to_csharp.py. DO NOT EDIT!
using System.IO;

namespace GameProtocol.SceneMessage
{
    // 通知玩家选坦克阶段，坦克被选取
    public sealed class NotifyTankSelected : IProtocol
    {
        public const short MsgType = MessageType.MSG_NOTIFY_TANK_SELECT;
        public short GetMsgType { get { return MsgType; } }
        public uint CharOid;// 玩家OID
        public uint TankId;// 该玩家选择的坦克ID
        public uint TankCont;// 坦克容器类型 enum TANK_CONTAINER_TYPE
        public uint TankExt;// 坦克外观ID
        public uint SkinFrameType;// 坦克皮肤边框 enum SKIN_FRAME_TYPE
        public uint CommandSkill;// 指挥官技能
        
        public static void Send(uint charOid, uint tankId, uint tankCont, uint tankExt, uint skinFrameType, uint commandSkill, object className)
        {
            var packet = new NotifyTankSelected
            {
                CharOid = charOid,
                TankId = tankId,
                TankCont = tankCont,
                TankExt = tankExt,
                SkinFrameType = skinFrameType,
                CommandSkill = commandSkill
            };
            NetMessage.Send(packet.BuildPacket(), className);
        }
        
        public byte[] BuildPacket()
        {
            var buffer = ProtocolBuffer.Writer;
            buffer.Write(MsgType);
            buffer.Write(ProtocolBuffer.Zero);
            WriteToStream(buffer);
            return ProtocolBuffer.CacheStream.ToArray();
        }
        
        public void ReadFromStream(BinaryReader reader)
        {
            CharOid = reader.ReadUInt32();
            TankId = reader.ReadUInt32();
            TankCont = reader.ReadUInt32();
            TankExt = reader.ReadUInt32();
            SkinFrameType = reader.ReadUInt32();
            CommandSkill = reader.ReadUInt32();
        }
        
        public void WriteToStream(BinaryWriter writer)
        {
            writer.Write(CharOid);
            writer.Write(TankId);
            writer.Write(TankCont);
            writer.Write(TankExt);
            writer.Write(SkinFrameType);
            writer.Write(CommandSkill);
        }
    }
}
