// Generated by proto_to_csharp.py. DO NOT EDIT!
using System.IO;

namespace GameProtocol.SceneMessage
{
    // game->gate 通知同步玩家地图下线点信息
    public sealed class NotifyRecordCharLastInfo : IProtocol
    {
        public const short MsgType = MessageType.MSG_NOTIFY_RECORD_CHAR_LAST_INFO;
        public short GetMsgType { get { return MsgType; } }
        public uint MapId;// 地图ID
        public uint X;
        public uint Y;
        public uint TankId;
        public string strUuid;
        public uint CharOid;
        
        public static void Send(uint mapId, uint x, uint y, uint tankId, string strUuid, uint charOid, object className)
        {
            var packet = new NotifyRecordCharLastInfo
            {
                MapId = mapId,
                X = x,
                Y = y,
                TankId = tankId,
                strUuid = strUuid,
                CharOid = charOid
            };
            NetMessage.Send(packet.BuildPacket(), className);
        }
        
        public byte[] BuildPacket()
        {
            var buffer = ProtocolBuffer.Writer;
            buffer.Write(MsgType);
            buffer.Write(ProtocolBuffer.Zero);
            WriteToStream(buffer);
            return ProtocolBuffer.CacheStream.ToArray();
        }
        
        public void ReadFromStream(BinaryReader reader)
        {
            MapId = reader.ReadUInt32();
            X = reader.ReadUInt32();
            Y = reader.ReadUInt32();
            TankId = reader.ReadUInt32();
            strUuid = reader.ReadString();
            CharOid = reader.ReadUInt32();
        }
        
        public void WriteToStream(BinaryWriter writer)
        {
            writer.Write(MapId);
            writer.Write(X);
            writer.Write(Y);
            writer.Write(TankId);
            writer.Write(strUuid);
            writer.Write(CharOid);
        }
    }
}
