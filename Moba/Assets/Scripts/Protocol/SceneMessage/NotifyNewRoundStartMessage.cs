// Generated by proto_to_csharp.py. DO NOT EDIT!
using System.IO;

namespace GameProtocol.SceneMessage
{
    // MSGTYPE_DECLARE(MSG_NOTIFY_NEW_ROUND_START),
    // 通知客户端，开始新的回合
    public sealed class NotifyNewRoundStartMessage : IProtocol
    {
        public const short MsgType = MessageType.MSG_NOTIFY_NEW_ROUND_START;
        public short GetMsgType { get { return MsgType; } }
        public uint startTime;// 新回合开始时间
        public uint roundIndex;// 当前回合
        public uint sceneId;// 场景ID
        
        public static void Send(uint startTime, uint roundIndex, uint sceneId, object className)
        {
            var packet = new NotifyNewRoundStartMessage
            {
                startTime = startTime,
                roundIndex = roundIndex,
                sceneId = sceneId
            };
            NetMessage.Send(packet.BuildPacket(), className);
        }
        
        public byte[] BuildPacket()
        {
            var buffer = ProtocolBuffer.Writer;
            buffer.Write(MsgType);
            buffer.Write(ProtocolBuffer.Zero);
            WriteToStream(buffer);
            return ProtocolBuffer.CacheStream.ToArray();
        }
        
        public void ReadFromStream(BinaryReader reader)
        {
            startTime = reader.ReadUInt32();
            roundIndex = reader.ReadUInt32();
            sceneId = reader.ReadUInt32();
        }
        
        public void WriteToStream(BinaryWriter writer)
        {
            writer.Write(startTime);
            writer.Write(roundIndex);
            writer.Write(sceneId);
        }
    }
}
