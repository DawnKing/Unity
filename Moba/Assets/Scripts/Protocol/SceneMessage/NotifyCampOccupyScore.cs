// Generated by proto_to_csharp.py. DO NOT EDIT!
using System.IO;

namespace GameProtocol.SceneMessage
{
    // MSGTYPE_DECLARE(MSG_NOTIFY_CAMP_OCCUPY_SCORE),
    // 通知客户端，阵营占领旗帜获得的总积分
    public sealed class NotifyCampOccupyScore : IProtocol
    {
        public const short MsgType = MessageType.MSG_NOTIFY_CAMP_OCCUPY_SCORE;
        public short GetMsgType { get { return MsgType; } }
        public uint RedOccupyScore;// 红方占领分数
        public uint BlueOccupyScore;// 蓝方占领分数
        
        public static void Send(uint redOccupyScore, uint blueOccupyScore, object className)
        {
            var packet = new NotifyCampOccupyScore
            {
                RedOccupyScore = redOccupyScore,
                BlueOccupyScore = blueOccupyScore
            };
            NetMessage.Send(packet.BuildPacket(), className);
        }
        
        public byte[] BuildPacket()
        {
            var buffer = ProtocolBuffer.Writer;
            buffer.Write(MsgType);
            buffer.Write(ProtocolBuffer.Zero);
            WriteToStream(buffer);
            return ProtocolBuffer.CacheStream.ToArray();
        }
        
        public void ReadFromStream(BinaryReader reader)
        {
            RedOccupyScore = reader.ReadUInt32();
            BlueOccupyScore = reader.ReadUInt32();
        }
        
        public void WriteToStream(BinaryWriter writer)
        {
            writer.Write(RedOccupyScore);
            writer.Write(BlueOccupyScore);
        }
    }
}
