// Generated by proto_to_csharp.py. DO NOT EDIT!
using System.IO;

namespace GameProtocol.SceneMessage
{
    // MSGTYPE_DECLARE(MSG_GAME_EXIT_BATTLE),
    // game通知玩家退出战斗
    public sealed class GameEixtBattle : IProtocol
    {
        public const short MsgType = MessageType.MSG_GAME_EXIT_BATTLE;
        public short GetMsgType { get { return MsgType; } }
        public uint ErrId;// 错误提示id，参见SystemErr.inl
        public uint SceneId;
        public uint CharId;
        public byte exitType;// enum BATTLE_EXIT_TYPE
        
        public static void Send(uint errId, uint sceneId, uint charId, byte exitType, object className)
        {
            var packet = new GameEixtBattle
            {
                ErrId = errId,
                SceneId = sceneId,
                CharId = charId,
                exitType = exitType
            };
            NetMessage.Send(packet.BuildPacket(), className);
        }
        
        public byte[] BuildPacket()
        {
            var buffer = ProtocolBuffer.Writer;
            buffer.Write(MsgType);
            buffer.Write(ProtocolBuffer.Zero);
            WriteToStream(buffer);
            return ProtocolBuffer.CacheStream.ToArray();
        }
        
        public void ReadFromStream(BinaryReader reader)
        {
            ErrId = reader.ReadUInt32();
            SceneId = reader.ReadUInt32();
            CharId = reader.ReadUInt32();
            exitType = reader.ReadByte();
        }
        
        public void WriteToStream(BinaryWriter writer)
        {
            writer.Write(ErrId);
            writer.Write(SceneId);
            writer.Write(CharId);
            writer.Write(exitType);
        }
    }
}
