// Generated by proto_to_csharp.py. DO NOT EDIT!
using System.IO;

namespace GameProtocol.SceneMessage
{
    // MSGTYPE_DECLARE(MSG_NOTIFY_DEAD_MODE_ALIVE_CNT),
    // 通知客户端，双方存活人数(死亡模式)
    public sealed class NotifyDeadModeAliveCntMessage : IProtocol
    {
        public const short MsgType = MessageType.MSG_NOTIFY_DEAD_MODE_ALIVE_CNT;
        public short GetMsgType { get { return MsgType; } }
        public uint RedAliveCnt;// 红方存活人数
        public uint BlueAliveCnt;// 蓝方存活人数
        
        public static void Send(uint redAliveCnt, uint blueAliveCnt, object className)
        {
            var packet = new NotifyDeadModeAliveCntMessage
            {
                RedAliveCnt = redAliveCnt,
                BlueAliveCnt = blueAliveCnt
            };
            NetMessage.Send(packet.BuildPacket(), className);
        }
        
        public byte[] BuildPacket()
        {
            var buffer = ProtocolBuffer.Writer;
            buffer.Write(MsgType);
            buffer.Write(ProtocolBuffer.Zero);
            WriteToStream(buffer);
            return ProtocolBuffer.CacheStream.ToArray();
        }
        
        public void ReadFromStream(BinaryReader reader)
        {
            RedAliveCnt = reader.ReadUInt32();
            BlueAliveCnt = reader.ReadUInt32();
        }
        
        public void WriteToStream(BinaryWriter writer)
        {
            writer.Write(RedAliveCnt);
            writer.Write(BlueAliveCnt);
        }
    }
}
