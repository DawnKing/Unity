// Generated by proto_to_csharp.py. DO NOT EDIT!
using System.IO;

namespace GameProtocol.SceneMessage
{
    /// 通知表现空投物品
    public sealed class NotifyAirDropProp : IProtocol
    {
        public const short MsgType = MessageType.MSG_NOTIFY_AIRDROP_PROP;
        public short GetMsgType { get { return MsgType; } }
        public uint SceneId;// 场景id
        public uint propId;// 道具id
        public short x;// x 坐标
        public short y;// y 坐标
        public byte Camp;// 阵营信息
        
        public static void Send(uint sceneId, uint propId, short x, short y, byte camp, object className)
        {
            var packet = new NotifyAirDropProp
            {
                SceneId = sceneId,
                propId = propId,
                x = x,
                y = y,
                Camp = camp
            };
            NetMessage.Send(packet.BuildPacket(), className);
        }
        
        public byte[] BuildPacket()
        {
            var buffer = ProtocolBuffer.Writer;
            buffer.Write(MsgType);
            buffer.Write(ProtocolBuffer.Zero);
            WriteToStream(buffer);
            return ProtocolBuffer.CacheStream.ToArray();
        }
        
        public void ReadFromStream(BinaryReader reader)
        {
            SceneId = reader.ReadUInt32();
            propId = reader.ReadUInt32();
            x = reader.ReadInt16();
            y = reader.ReadInt16();
            Camp = reader.ReadByte();
        }
        
        public void WriteToStream(BinaryWriter writer)
        {
            writer.Write(SceneId);
            writer.Write(propId);
            writer.Write(x);
            writer.Write(y);
            writer.Write(Camp);
        }
    }
}
