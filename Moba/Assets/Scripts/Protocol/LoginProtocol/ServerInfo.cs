// Generated by proto_to_csharp.py. DO NOT EDIT!
using System.IO;

namespace GameProtocol.LoginProtocol
{
    // ----------------------------------------------------------------------
    /// @file				interface/LoginProtocol.h
    /// @brief
    ///
    /// @author				侯明园
    /// @copyright			Sixcube Information Technology Co,. Ltd. (2012)
    /// @date				2004-12-23 17:41:59
    // -----------------------------------------------------------------------
    /*
    *	以下为认证服务器使用的接口以及常量、枚举量定义
    */
    // 未知错误
    // 认证成功
    // 无法连接认证服务
    // http认证服务返回不合法信息
    // 服务器满
    // 角色被防沉迷
    // TOKEN无效，不存在
    // 过期
    // 认证失败
    // 该帐号被封存
    // 服务器正在维护中
    // ip地址被封存
    // 账号id错误
    // 加载账号数据失败
    // 接口返回数据库错误
    // 接口返回因授权范围原因不支持xx国家地区
    // 万人号被封存
    // 参数不完整
    // 用户名密码错误
    // 游戏ID不存在
    // 游戏ID不存在
    // 用户ID不存在
    /*
    *	以下为登陆到具体登录服务器时的枚举量定义
    */
    //确认登录
    //Session超时
    //Session出错
    //已经登录
    //区服无法提供服务
    //连接断开
    //被踢出
    //口令认证通过
    //口令认证未通过5
    //被加入排队
    //有帐号从别处正确登录
    //认证中心被断开
    /**
     * @name    : Struct Name	: ServerInfo 
     * @brief	: 用于保存一条服务器信息的结构体
     * @remark	: 
     */
    public sealed class ServerInfo
    {
        public uint ip;
        public ushort port;
        public int pvp;
        public int currentUser;
        public int maxPlayer;
        public void ReadFromStream(BinaryReader reader)
        {
            ip = reader.ReadUInt32();
            port = reader.ReadUInt16();
            pvp = reader.ReadInt32();
            currentUser = reader.ReadInt32();
            maxPlayer = reader.ReadInt32();
        }
        
        public void WriteToStream(BinaryWriter writer)
        {
            writer.Write(ip);
            writer.Write(port);
            writer.Write(pvp);
            writer.Write(currentUser);
            writer.Write(maxPlayer);
        }
    }
}
