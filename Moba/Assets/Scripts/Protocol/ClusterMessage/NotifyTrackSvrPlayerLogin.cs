// Generated by proto_to_csharp.py. DO NOT EDIT!
using System.IO;

namespace GameProtocol.ClusterMessage
{
    // MSGTYPE_DECLARE(MSG_NOTIFY_TRACKSVR_PLAYERLOGIN)
    // 通知玩家登陆(GameSvr -> TrackSvr)
    public sealed class NotifyTrackSvrPlayerLogin : IProtocol
    {
        public const short MsgType = MessageType.MSG_NOTIFY_TRACKSVR_PLAYERLOGIN;
        public short GetMsgType { get { return MsgType; } }
        public uint CharOid;//登陆的角色ID
        public uint SvrUid;//登陆的服务器ID
        
        public static void Send(uint charOid, uint svrUid, object className)
        {
            var packet = new NotifyTrackSvrPlayerLogin
            {
                CharOid = charOid,
                SvrUid = svrUid
            };
            NetMessage.Send(packet.BuildPacket(), className);
        }
        
        public byte[] BuildPacket()
        {
            var buffer = ProtocolBuffer.Writer;
            buffer.Write(MsgType);
            buffer.Write(ProtocolBuffer.Zero);
            WriteToStream(buffer);
            return ProtocolBuffer.CacheStream.ToArray();
        }
        
        public void ReadFromStream(BinaryReader reader)
        {
            CharOid = reader.ReadUInt32();
            SvrUid = reader.ReadUInt32();
        }
        
        public void WriteToStream(BinaryWriter writer)
        {
            writer.Write(CharOid);
            writer.Write(SvrUid);
        }
    }
}
