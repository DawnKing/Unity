// Generated by proto_to_csharp.py. DO NOT EDIT!
using System.IO;

namespace GameProtocol.ClusterMessage
{
    /**
     * 此消息包含一个服务器自身的信息描述，服务器类型，服务器表示ID，
     * 服务器名字，提供服务器的地图
     * 用来在服务器之间表示身分
     * MSG_CLUSTER_SERVER_PROFILE
     */
    public sealed class ClusterServerProfile : IProtocol
    {
        public const short MsgType = MessageType.MSG_CLUSTER_SERVER_PROFILE;
        public short GetMsgType { get { return MsgType; } }
        public int svrType;
        public uint svrUid;
        public string svrName;
        public string accAddr;
        public string accPort;
        public int svrLindId;
        
        public static void Send(int svrType, uint svrUid, string svrName, string accAddr, string accPort, int svrLindId, object className)
        {
            var packet = new ClusterServerProfile
            {
                svrType = svrType,
                svrUid = svrUid,
                svrName = svrName,
                accAddr = accAddr,
                accPort = accPort,
                svrLindId = svrLindId
            };
            NetMessage.Send(packet.BuildPacket(), className);
        }
        
        public byte[] BuildPacket()
        {
            var buffer = ProtocolBuffer.Writer;
            buffer.Write(MsgType);
            buffer.Write(ProtocolBuffer.Zero);
            WriteToStream(buffer);
            return ProtocolBuffer.CacheStream.ToArray();
        }
        
        public void ReadFromStream(BinaryReader reader)
        {
            svrType = reader.ReadInt32();
            svrUid = reader.ReadUInt32();
            svrName = reader.ReadString();
            accAddr = reader.ReadString();
            accPort = reader.ReadString();
            svrLindId = reader.ReadInt32();
        }
        
        public void WriteToStream(BinaryWriter writer)
        {
            writer.Write(svrType);
            writer.Write(svrUid);
            writer.Write(svrName);
            writer.Write(accAddr);
            writer.Write(accPort);
            writer.Write(svrLindId);
        }
    }
}
