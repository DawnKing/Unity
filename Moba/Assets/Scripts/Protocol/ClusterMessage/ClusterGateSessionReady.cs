// Generated by proto_to_csharp.py. DO NOT EDIT!
using System.IO;

namespace GameProtocol.ClusterMessage
{
    /// MSG_CLUSTER_GATE_SESSION_READY
    /// 网关服务器告知登陆服务器session_key ready, 可以登陆
    public sealed class ClusterGateSessionReady : IProtocol
    {
        public const short MsgType = MessageType.MSG_CLUSTER_GATE_SESSION_READY;
        public short GetMsgType { get { return MsgType; } }
        public uint reason;// 结果
        public uint svrUid;// 服务器UID
        public uint session;// session key
        public uint AcctId;// 账号id
        
        public static void Send(uint reason, uint svrUid, uint session, uint acctId, object className)
        {
            var packet = new ClusterGateSessionReady
            {
                reason = reason,
                svrUid = svrUid,
                session = session,
                AcctId = acctId
            };
            NetMessage.Send(packet.BuildPacket(), className);
        }
        
        public byte[] BuildPacket()
        {
            var buffer = ProtocolBuffer.Writer;
            buffer.Write(MsgType);
            buffer.Write(ProtocolBuffer.Zero);
            WriteToStream(buffer);
            return ProtocolBuffer.CacheStream.ToArray();
        }
        
        public void ReadFromStream(BinaryReader reader)
        {
            reason = reader.ReadUInt32();
            svrUid = reader.ReadUInt32();
            session = reader.ReadUInt32();
            AcctId = reader.ReadUInt32();
        }
        
        public void WriteToStream(BinaryWriter writer)
        {
            writer.Write(reason);
            writer.Write(svrUid);
            writer.Write(session);
            writer.Write(AcctId);
        }
    }
}
